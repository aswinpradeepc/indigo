/*! For license information please see bluebell-monaco.js.LICENSE.txt */
(()=>{var e={448:(e,t,r)=>{e.exports=r(908)},908:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromRange=function(e,t){if(void 0===e)throw new Error('missing required parameter "root"');if(void 0===t)throw new Error('missing required parameter "range"');return l(e,s.fromRange(e,t))},t.fromTextPosition=l,t.toRange=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=o(e,t,r);return null===n?null:(n.end=Math.min(n.end,e.textContent.length),s.toRange(e,n))},t.toTextPosition=o;var n,a=(n=r(27))&&n.__esModule?n:{default:n},s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(535)),i=new RegExp("(.|[\r\n]){1,"+String(32)+"}","g");function l(e,t){if(void 0===e)throw new Error('missing required parameter "root"');if(void 0===t)throw new Error('missing required parameter "selector"');var r=t.start;if(void 0===r)throw new Error('selector missing required property "start"');if(r<0)throw new Error('property "start" must be a non-negative integer');var n=t.end;if(void 0===n)throw new Error('selector missing required property "end"');if(n<0)throw new Error('property "end" must be a non-negative integer');var a=e.textContent.substr(r,n-r),s=Math.max(0,r-32),i=e.textContent.substr(s,r-s),l=Math.min(e.textContent.length,n+32);return{exact:a,prefix:i,suffix:e.textContent.substr(n,l-n)}}function o(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(void 0===e)throw new Error('missing required parameter "root"');if(void 0===t)throw new Error('missing required parameter "selector"');var n=t.exact;if(void 0===n)throw new Error('selector missing required property "exact"');var s=t.prefix,l=t.suffix,o=r.hint,c=new a.default;c.Match_Distance=2*e.textContent.length;var u=n.match(i),p=void 0===o?e.textContent.length/2|0:o,m=Number.POSITIVE_INFINITY,d=Number.NEGATIVE_INFINITY,f=-1,h=void 0!==s,g=void 0!==l,x=!1;h&&(f=c.match_main(e.textContent,s,p))>-1&&(p=f+s.length,x=!0),g&&!x&&(f=c.match_main(e.textContent,l,p+n.length))>-1&&(p=f-n.length);var b=u.shift();if(!((f=c.match_main(e.textContent,b,p))>-1))return null;p=d=(m=f)+b.length;var v=function(t,r){if(!t)return null;var n=c.match_main(e.textContent,r,t.loc);return-1===n?null:(t.loc=n+r.length,t.start=Math.min(t.start,n),t.end=Math.max(t.end,n+r.length),t)};c.Match_Distance=64;var w=u.reduce(v,{start:m,end:d,loc:p});return w?{start:w.start,end:w.end}:null}},183:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GutterEnrichmentManager=void 0;const n=r(581);t.GutterEnrichmentManager=class{constructor(e){this.root=e,this.gutter=e.querySelector("la-gutter"),this.akn=e.querySelector("la-akoma-ntoso"),this.providers=[],this.floatingContainer=this.createFloatingContainer(),this.floaterTimeout=null,this.target=null,document.addEventListener("selectionchange",this.selectionChanged.bind(this))}addProvider(e){this.providers.push(e)}createFloatingContainer(){const e=document.createElement("la-gutter-item"),t=document.createElement("div");return t.className="gutter-enrichment-new-buttons btn-group-vertical btn-group-sm bg-white",e.appendChild(t),e}selectionChanged(){const e=document.getSelection();if(this.akn&&this.gutter)if(e&&e.rangeCount>0&&!e.getRangeAt(0).collapsed){this.floaterTimeout&&window.clearTimeout(this.floaterTimeout);const t=e.getRangeAt(0);if(t.commonAncestorContainer.compareDocumentPosition(this.akn)&Node.DOCUMENT_POSITION_CONTAINS){let e=t.startContainer;for(;e&&e.nodeType!==Node.ELEMENT_NODE;)e=e.parentElement;this.target=(0,n.rangeToTarget)(t,this.akn),this.target?(this.addProviderButtons(this.target),this.floatingContainer.anchor=e,this.gutter.contains(this.floatingContainer)||this.gutter.appendChild(this.floatingContainer)):this.removeFloater()}}else this.floaterTimeout=window.setTimeout(this.removeFloater.bind(this),200)}addProviderButtons(e){const t=this.floatingContainer.firstElementChild;if(t){t.innerHTML="";for(const r of this.providers){const n=r.getButton(e);n&&(n.addEventListener("click",(()=>{this.removeFloater(),r.addEnrichment(e)})),t.appendChild(n))}}}removeFloater(){this.floatingContainer.remove(),this.floaterTimeout=null}}},482:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),a(r(720),t),a(r(183),t)},720:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PopupEnrichmentManager=t.EnrichmentMarker=void 0;const a=r(581),s=n(r(861));r(110),r(588);class i{constructor(e,t){this.provider=e,this.enrichment=t,this.marks=[],this.popups=[]}}t.EnrichmentMarker=i,t.PopupEnrichmentManager=class{constructor(e){this.markTag="mark",this.markClasses=["enrichment","enrichment--popup"],this.documentRoot=e,this.providers=[],this.markers=[],this.observer=this.createObserver()}createObserver(){const e=new MutationObserver((()=>this.applyEnrichments()));return e.observe(this.documentRoot,{childList:!0}),e}addProvider(e){this.providers.push(e)}removeProvider(e){const t=this.providers.indexOf(e);t>-1&&(this.unapplyProviderEnrichments(e),this.providers.splice(t,1))}applyEnrichments(){for(const e of this.providers)this.applyProviderEnrichments(e)}applyProviderEnrichments(e){this.unapplyProviderEnrichments(e);for(const t of e.getEnrichments()){const r=new i(e,t),n=(0,a.targetToRange)(t.target,this.documentRoot);n&&(0,a.markRange)(n,this.markTag,(n=>(r.marks.push(n),n.classList.add(...this.markClasses),e.markCreated(t,n),r.popups.push(this.createPopup(e,t,n)),n))),r.marks.length&&this.markers.push(r)}}unapplyProviderEnrichments(e){const t=this.markers.filter((t=>t.provider===e));for(const e of t)this.unapplyMarker(e)}unapplyMarker(e){for(const t of e.marks)if(t.parentElement){for(;t.firstChild;)t.parentElement.insertBefore(t.firstChild,t);t.parentElement.removeChild(t)}for(const t of e.popups)t.destroy()}createPopup(e,t,r){const n=(0,s.default)(r,{appendTo:document.body,interactive:!0,theme:"light",zIndex:0,delay:[0,0],onShow:n=>{n.setContent(""),n.setContent(e.getPopupContent(t,r))}});return e.popupCreated(t,n),n}}},581:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.aknRangeToTarget=t.rangeToTarget=t.selectorsToRange=t.targetToAknRange=t.targetToRange=t.withoutForeignElements=t.markRange=t.getTextNodes=t.foreignElementsSelector=void 0;const n=r(535),a=r(448);function s(e){const t=[],r={TABLE:1,THEAD:1,TBODY:1,TR:1};let n,a,s,i;function l(e,t){return 0!==t?e.splitText(t):e}if(e.startContainer.nodeType===Node.TEXT_NODE)s=l(e.startContainer,e.startOffset);else if(s=document.createNodeIterator(e.startContainer,NodeFilter.SHOW_TEXT).nextNode(),!s)return t;i=e.endContainer.nodeType===Node.TEXT_NODE?l(e.endContainer,e.endOffset):e.endContainer,n=document.createNodeIterator(e.commonAncestorContainer,NodeFilter.SHOW_TEXT,(function(e){return r[e.parentElement.tagName]?NodeFilter.FILTER_SKIP:NodeFilter.FILTER_ACCEPT}));let o=n.nextNode();for(;o&&o!==s;)o=n.nextNode();for(;o&&(a=o.compareDocumentPosition(i),0!=(a&Node.DOCUMENT_POSITION_CONTAINS)||0!=(a&Node.DOCUMENT_POSITION_FOLLOWING));)t.push(o),o=n.nextNode();return t}function i(e,r,n=t.foreignElementsSelector){const a=[];for(const t of Array.from(e.querySelectorAll(n))){const e={e:t,before:null,parent:null};t.nextSibling?e.before=t.nextSibling:e.parent=t.parentElement,t.parentElement&&t.parentElement.removeChild(t),a.push(e)}try{return r()}finally{a.reverse();for(const e of a)e.before&&e.before.parentElement?e.before.parentElement.insertBefore(e.e,e.before):e.parent&&e.parent.appendChild(e.e)}}function l(e,t){let r;const s=t.find((e=>"TextPositionSelector"===e.type)),i=t.find((e=>"TextQuoteSelector"===e.type));if(s)try{if(r=(0,n.toRange)(e,s),!i||r.toString()===i.exact)return r}catch(e){}if(i)return(0,a.toRange)(e,i)}t.foreignElementsSelector=".ig",t.getTextNodes=s,t.markRange=function(e,t="mark",r){let n=e.commonAncestorContainer;n.nodeType!==Node.ELEMENT_NODE&&(n=n.parentElement),n&&i(n,(()=>{for(const n of s(e))if(n.parentElement){let e=n.ownerDocument.createElement(t);r&&(e=r(e,n)),e&&(n.parentElement.insertBefore(e,n),e.appendChild(n))}}))},t.withoutForeignElements=i,t.targetToRange=function(e,t){let r=e.anchor_id,n=r.lastIndexOf("__"),a=t.querySelector(`[id="${r}"]`);for(;!a&&n>-1;)r=r.substring(0,n),n=r.lastIndexOf("__"),a=t.querySelector(`[id="${r}"]`);if(a){if(e.selectors)return i(a,(()=>l(a,e.selectors)));{const e=t.ownerDocument.createRange();return e.selectNodeContents(a),e}}return null},t.targetToAknRange=function(e,t){function r(e){return"arguments"===e?t.querySelector(e):t.querySelector(`[eId=${e}]`)}let n=e.anchor_id,a=n.lastIndexOf("__"),s=r(n);for(;!s&&a>-1;)n=n.substring(0,a),a=n.lastIndexOf("__"),s=r(n);if(s){if(e.selectors)return l(s,e.selectors);{const e=new Range;return e.selectNodeContents(s),e}}return null},t.selectorsToRange=l,t.rangeToTarget=function(e,t){let r=e.commonAncestorContainer;if(r.nodeType!==Node.ELEMENT_NODE&&(r=r.parentElement,!r))return null;if(r=r.closest("[id]"),!r||r!==t&&0==(r.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_CONTAINS))return null;const s={anchor_id:r.id,selectors:[]};return i(r,(()=>{let t=(0,n.fromRange)(r,e);t.type="TextPositionSelector",s.selectors.push(t),t=(0,a.fromTextPosition)(r,t),t.type="TextQuoteSelector",s.selectors.push(t)})),s},t.aknRangeToTarget=function(e,t){let r=e.commonAncestorContainer;if(r.nodeType!==Node.ELEMENT_NODE&&(r=r.parentElement,!r))return null;if(r=r.closest("[eId]"),!r||r!==t&&0==(r.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_CONTAINS))return null;const s={anchor_id:r.getAttribute("eId")||"",selectors:[]};let i=(0,n.fromRange)(r,e);return i.type="TextPositionSelector",s.selectors.push(i),i=(0,a.fromTextPosition)(r,i),i.type="TextQuoteSelector",s.selectors.push(i),s}},110:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>s});var n=r(645),a=r.n(n)()((function(e){return e[1]}));a.push([e.id,'.tippy-box[data-animation=fade][data-state=hidden]{opacity:0}[data-tippy-root]{max-width:calc(100vw - 10px)}.tippy-box{position:relative;background-color:#333;color:#fff;border-radius:4px;font-size:14px;line-height:1.4;white-space:normal;outline:0;transition-property:transform,visibility,opacity}.tippy-box[data-placement^=top]>.tippy-arrow{bottom:0}.tippy-box[data-placement^=top]>.tippy-arrow:before{bottom:-7px;left:0;border-width:8px 8px 0;border-top-color:initial;transform-origin:center top}.tippy-box[data-placement^=bottom]>.tippy-arrow{top:0}.tippy-box[data-placement^=bottom]>.tippy-arrow:before{top:-7px;left:0;border-width:0 8px 8px;border-bottom-color:initial;transform-origin:center bottom}.tippy-box[data-placement^=left]>.tippy-arrow{right:0}.tippy-box[data-placement^=left]>.tippy-arrow:before{border-width:8px 0 8px 8px;border-left-color:initial;right:-7px;transform-origin:center left}.tippy-box[data-placement^=right]>.tippy-arrow{left:0}.tippy-box[data-placement^=right]>.tippy-arrow:before{left:-7px;border-width:8px 8px 8px 0;border-right-color:initial;transform-origin:center right}.tippy-box[data-inertia][data-state=visible]{transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)}.tippy-arrow{width:16px;height:16px;color:#333}.tippy-arrow:before{content:"";position:absolute;border-color:transparent;border-style:solid}.tippy-content{position:relative;padding:5px 9px;z-index:1}',""]);const s=a},588:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>s});var n=r(645),a=r.n(n)()((function(e){return e[1]}));a.push([e.id,".tippy-box[data-theme~=light]{color:#26323d;box-shadow:0 0 20px 4px rgba(154,161,177,.15),0 4px 80px -8px rgba(36,40,47,.25),0 4px 4px -2px rgba(91,94,105,.15);background-color:#fff}.tippy-box[data-theme~=light][data-placement^=top]>.tippy-arrow:before{border-top-color:#fff}.tippy-box[data-theme~=light][data-placement^=bottom]>.tippy-arrow:before{border-bottom-color:#fff}.tippy-box[data-theme~=light][data-placement^=left]>.tippy-arrow:before{border-left-color:#fff}.tippy-box[data-theme~=light][data-placement^=right]>.tippy-arrow:before{border-right-color:#fff}.tippy-box[data-theme~=light]>.tippy-backdrop{background-color:#fff}.tippy-box[data-theme~=light]>.tippy-svg-arrow{fill:#fff}",""]);const s=a},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=e(t);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r,n){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(n)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(var l=0;l<e.length;l++){var o=[].concat(e[l]);n&&a[o[0]]||(r&&(o[2]?o[2]="".concat(r," and ").concat(o[2]):o[2]=r),t.push(o))}},t}},27:e=>{var t=function(){this.Diff_Timeout=1,this.Diff_EditCost=4,this.Match_Threshold=.5,this.Match_Distance=1e3,this.Patch_DeleteThreshold=.5,this.Patch_Margin=4,this.Match_MaxBits=32},r=-1;t.Diff=function(e,t){return[e,t]},t.prototype.diff_main=function(e,r,n,a){void 0===a&&(a=this.Diff_Timeout<=0?Number.MAX_VALUE:(new Date).getTime()+1e3*this.Diff_Timeout);var s=a;if(null==e||null==r)throw new Error("Null input. (diff_main)");if(e==r)return e?[new t.Diff(0,e)]:[];void 0===n&&(n=!0);var i=n,l=this.diff_commonPrefix(e,r),o=e.substring(0,l);e=e.substring(l),r=r.substring(l),l=this.diff_commonSuffix(e,r);var c=e.substring(e.length-l);e=e.substring(0,e.length-l),r=r.substring(0,r.length-l);var u=this.diff_compute_(e,r,i,s);return o&&u.unshift(new t.Diff(0,o)),c&&u.push(new t.Diff(0,c)),this.diff_cleanupMerge(u),u},t.prototype.diff_compute_=function(e,n,a,s){var i;if(!e)return[new t.Diff(1,n)];if(!n)return[new t.Diff(r,e)];var l=e.length>n.length?e:n,o=e.length>n.length?n:e,c=l.indexOf(o);if(-1!=c)return i=[new t.Diff(1,l.substring(0,c)),new t.Diff(0,o),new t.Diff(1,l.substring(c+o.length))],e.length>n.length&&(i[0][0]=i[2][0]=r),i;if(1==o.length)return[new t.Diff(r,e),new t.Diff(1,n)];var u=this.diff_halfMatch_(e,n);if(u){var p=u[0],m=u[1],d=u[2],f=u[3],h=u[4],g=this.diff_main(p,d,a,s),x=this.diff_main(m,f,a,s);return g.concat([new t.Diff(0,h)],x)}return a&&e.length>100&&n.length>100?this.diff_lineMode_(e,n,s):this.diff_bisect_(e,n,s)},t.prototype.diff_lineMode_=function(e,n,a){var s=this.diff_linesToChars_(e,n);e=s.chars1,n=s.chars2;var i=s.lineArray,l=this.diff_main(e,n,!1,a);this.diff_charsToLines_(l,i),this.diff_cleanupSemantic(l),l.push(new t.Diff(0,""));for(var o=0,c=0,u=0,p="",m="";o<l.length;){switch(l[o][0]){case 1:u++,m+=l[o][1];break;case r:c++,p+=l[o][1];break;case 0:if(c>=1&&u>=1){l.splice(o-c-u,c+u),o=o-c-u;for(var d=this.diff_main(p,m,!1,a),f=d.length-1;f>=0;f--)l.splice(o,0,d[f]);o+=d.length}u=0,c=0,p="",m=""}o++}return l.pop(),l},t.prototype.diff_bisect_=function(e,n,a){for(var s=e.length,i=n.length,l=Math.ceil((s+i)/2),o=l,c=2*l,u=new Array(c),p=new Array(c),m=0;m<c;m++)u[m]=-1,p[m]=-1;u[o+1]=0,p[o+1]=0;for(var d=s-i,f=d%2!=0,h=0,g=0,x=0,b=0,v=0;v<l&&!((new Date).getTime()>a);v++){for(var w=-v+h;w<=v-g;w+=2){for(var y=o+w,E=(q=w==-v||w!=v&&u[y-1]<u[y+1]?u[y+1]:u[y-1]+1)-w;q<s&&E<i&&e.charAt(q)==n.charAt(E);)q++,E++;if(u[y]=q,q>s)g+=2;else if(E>i)h+=2;else if(f&&(T=o+d-w)>=0&&T<c&&-1!=p[T]&&q>=(D=s-p[T]))return this.diff_bisectSplit_(e,n,q,E,a)}for(var A=-v+x;A<=v-b;A+=2){for(var D,T=o+A,S=(D=A==-v||A!=v&&p[T-1]<p[T+1]?p[T+1]:p[T-1]+1)-A;D<s&&S<i&&e.charAt(s-D-1)==n.charAt(i-S-1);)D++,S++;if(p[T]=D,D>s)b+=2;else if(S>i)x+=2;else if(!f){var q;if((y=o+d-A)>=0&&y<c&&-1!=u[y])if(E=o+(q=u[y])-y,q>=(D=s-D))return this.diff_bisectSplit_(e,n,q,E,a)}}}return[new t.Diff(r,e),new t.Diff(1,n)]},t.prototype.diff_bisectSplit_=function(e,t,r,n,a){var s=e.substring(0,r),i=t.substring(0,n),l=e.substring(r),o=t.substring(n),c=this.diff_main(s,i,!1,a),u=this.diff_main(l,o,!1,a);return c.concat(u)},t.prototype.diff_linesToChars_=function(e,t){var r=[],n={};function a(e){for(var t="",a=0,i=-1,l=r.length;i<e.length-1;){-1==(i=e.indexOf("\n",a))&&(i=e.length-1);var o=e.substring(a,i+1);(n.hasOwnProperty?n.hasOwnProperty(o):void 0!==n[o])?t+=String.fromCharCode(n[o]):(l==s&&(o=e.substring(a),i=e.length),t+=String.fromCharCode(l),n[o]=l,r[l++]=o),a=i+1}return t}r[0]="";var s=4e4,i=a(e);return s=65535,{chars1:i,chars2:a(t),lineArray:r}},t.prototype.diff_charsToLines_=function(e,t){for(var r=0;r<e.length;r++){for(var n=e[r][1],a=[],s=0;s<n.length;s++)a[s]=t[n.charCodeAt(s)];e[r][1]=a.join("")}},t.prototype.diff_commonPrefix=function(e,t){if(!e||!t||e.charAt(0)!=t.charAt(0))return 0;for(var r=0,n=Math.min(e.length,t.length),a=n,s=0;r<a;)e.substring(s,a)==t.substring(s,a)?s=r=a:n=a,a=Math.floor((n-r)/2+r);return a},t.prototype.diff_commonSuffix=function(e,t){if(!e||!t||e.charAt(e.length-1)!=t.charAt(t.length-1))return 0;for(var r=0,n=Math.min(e.length,t.length),a=n,s=0;r<a;)e.substring(e.length-a,e.length-s)==t.substring(t.length-a,t.length-s)?s=r=a:n=a,a=Math.floor((n-r)/2+r);return a},t.prototype.diff_commonOverlap_=function(e,t){var r=e.length,n=t.length;if(0==r||0==n)return 0;r>n?e=e.substring(r-n):r<n&&(t=t.substring(0,r));var a=Math.min(r,n);if(e==t)return a;for(var s=0,i=1;;){var l=e.substring(a-i),o=t.indexOf(l);if(-1==o)return s;i+=o,0!=o&&e.substring(a-i)!=t.substring(0,i)||(s=i,i++)}},t.prototype.diff_halfMatch_=function(e,t){if(this.Diff_Timeout<=0)return null;var r=e.length>t.length?e:t,n=e.length>t.length?t:e;if(r.length<4||2*n.length<r.length)return null;var a=this;function s(e,t,r){for(var n,s,i,l,o=e.substring(r,r+Math.floor(e.length/4)),c=-1,u="";-1!=(c=t.indexOf(o,c+1));){var p=a.diff_commonPrefix(e.substring(r),t.substring(c)),m=a.diff_commonSuffix(e.substring(0,r),t.substring(0,c));u.length<m+p&&(u=t.substring(c-m,c)+t.substring(c,c+p),n=e.substring(0,r-m),s=e.substring(r+p),i=t.substring(0,c-m),l=t.substring(c+p))}return 2*u.length>=e.length?[n,s,i,l,u]:null}var i,l,o,c,u,p=s(r,n,Math.ceil(r.length/4)),m=s(r,n,Math.ceil(r.length/2));return p||m?(i=m?p&&p[4].length>m[4].length?p:m:p,e.length>t.length?(l=i[0],o=i[1],c=i[2],u=i[3]):(c=i[0],u=i[1],l=i[2],o=i[3]),[l,o,c,u,i[4]]):null},t.prototype.diff_cleanupSemantic=function(e){for(var n=!1,a=[],s=0,i=null,l=0,o=0,c=0,u=0,p=0;l<e.length;)0==e[l][0]?(a[s++]=l,o=u,c=p,u=0,p=0,i=e[l][1]):(1==e[l][0]?u+=e[l][1].length:p+=e[l][1].length,i&&i.length<=Math.max(o,c)&&i.length<=Math.max(u,p)&&(e.splice(a[s-1],0,new t.Diff(r,i)),e[a[s-1]+1][0]=1,s--,l=--s>0?a[s-1]:-1,o=0,c=0,u=0,p=0,i=null,n=!0)),l++;for(n&&this.diff_cleanupMerge(e),this.diff_cleanupSemanticLossless(e),l=1;l<e.length;){if(e[l-1][0]==r&&1==e[l][0]){var m=e[l-1][1],d=e[l][1],f=this.diff_commonOverlap_(m,d),h=this.diff_commonOverlap_(d,m);f>=h?(f>=m.length/2||f>=d.length/2)&&(e.splice(l,0,new t.Diff(0,d.substring(0,f))),e[l-1][1]=m.substring(0,m.length-f),e[l+1][1]=d.substring(f),l++):(h>=m.length/2||h>=d.length/2)&&(e.splice(l,0,new t.Diff(0,m.substring(0,h))),e[l-1][0]=1,e[l-1][1]=d.substring(0,d.length-h),e[l+1][0]=r,e[l+1][1]=m.substring(h),l++),l++}l++}},t.prototype.diff_cleanupSemanticLossless=function(e){function r(e,r){if(!e||!r)return 6;var n=e.charAt(e.length-1),a=r.charAt(0),s=n.match(t.nonAlphaNumericRegex_),i=a.match(t.nonAlphaNumericRegex_),l=s&&n.match(t.whitespaceRegex_),o=i&&a.match(t.whitespaceRegex_),c=l&&n.match(t.linebreakRegex_),u=o&&a.match(t.linebreakRegex_),p=c&&e.match(t.blanklineEndRegex_),m=u&&r.match(t.blanklineStartRegex_);return p||m?5:c||u?4:s&&!l&&o?3:l||o?2:s||i?1:0}for(var n=1;n<e.length-1;){if(0==e[n-1][0]&&0==e[n+1][0]){var a=e[n-1][1],s=e[n][1],i=e[n+1][1],l=this.diff_commonSuffix(a,s);if(l){var o=s.substring(s.length-l);a=a.substring(0,a.length-l),s=o+s.substring(0,s.length-l),i=o+i}for(var c=a,u=s,p=i,m=r(a,s)+r(s,i);s.charAt(0)===i.charAt(0);){a+=s.charAt(0),s=s.substring(1)+i.charAt(0),i=i.substring(1);var d=r(a,s)+r(s,i);d>=m&&(m=d,c=a,u=s,p=i)}e[n-1][1]!=c&&(c?e[n-1][1]=c:(e.splice(n-1,1),n--),e[n][1]=u,p?e[n+1][1]=p:(e.splice(n+1,1),n--))}n++}},t.nonAlphaNumericRegex_=/[^a-zA-Z0-9]/,t.whitespaceRegex_=/\s/,t.linebreakRegex_=/[\r\n]/,t.blanklineEndRegex_=/\n\r?\n$/,t.blanklineStartRegex_=/^\r?\n\r?\n/,t.prototype.diff_cleanupEfficiency=function(e){for(var n=!1,a=[],s=0,i=null,l=0,o=!1,c=!1,u=!1,p=!1;l<e.length;)0==e[l][0]?(e[l][1].length<this.Diff_EditCost&&(u||p)?(a[s++]=l,o=u,c=p,i=e[l][1]):(s=0,i=null),u=p=!1):(e[l][0]==r?p=!0:u=!0,i&&(o&&c&&u&&p||i.length<this.Diff_EditCost/2&&o+c+u+p==3)&&(e.splice(a[s-1],0,new t.Diff(r,i)),e[a[s-1]+1][0]=1,s--,i=null,o&&c?(u=p=!0,s=0):(l=--s>0?a[s-1]:-1,u=p=!1),n=!0)),l++;n&&this.diff_cleanupMerge(e)},t.prototype.diff_cleanupMerge=function(e){e.push(new t.Diff(0,""));for(var n,a=0,s=0,i=0,l="",o="";a<e.length;)switch(e[a][0]){case 1:i++,o+=e[a][1],a++;break;case r:s++,l+=e[a][1],a++;break;case 0:s+i>1?(0!==s&&0!==i&&(0!==(n=this.diff_commonPrefix(o,l))&&(a-s-i>0&&0==e[a-s-i-1][0]?e[a-s-i-1][1]+=o.substring(0,n):(e.splice(0,0,new t.Diff(0,o.substring(0,n))),a++),o=o.substring(n),l=l.substring(n)),0!==(n=this.diff_commonSuffix(o,l))&&(e[a][1]=o.substring(o.length-n)+e[a][1],o=o.substring(0,o.length-n),l=l.substring(0,l.length-n))),a-=s+i,e.splice(a,s+i),l.length&&(e.splice(a,0,new t.Diff(r,l)),a++),o.length&&(e.splice(a,0,new t.Diff(1,o)),a++),a++):0!==a&&0==e[a-1][0]?(e[a-1][1]+=e[a][1],e.splice(a,1)):a++,i=0,s=0,l="",o=""}""===e[e.length-1][1]&&e.pop();var c=!1;for(a=1;a<e.length-1;)0==e[a-1][0]&&0==e[a+1][0]&&(e[a][1].substring(e[a][1].length-e[a-1][1].length)==e[a-1][1]?(e[a][1]=e[a-1][1]+e[a][1].substring(0,e[a][1].length-e[a-1][1].length),e[a+1][1]=e[a-1][1]+e[a+1][1],e.splice(a-1,1),c=!0):e[a][1].substring(0,e[a+1][1].length)==e[a+1][1]&&(e[a-1][1]+=e[a+1][1],e[a][1]=e[a][1].substring(e[a+1][1].length)+e[a+1][1],e.splice(a+1,1),c=!0)),a++;c&&this.diff_cleanupMerge(e)},t.prototype.diff_xIndex=function(e,t){var n,a=0,s=0,i=0,l=0;for(n=0;n<e.length&&(1!==e[n][0]&&(a+=e[n][1].length),e[n][0]!==r&&(s+=e[n][1].length),!(a>t));n++)i=a,l=s;return e.length!=n&&e[n][0]===r?l:l+(t-i)},t.prototype.diff_prettyHtml=function(e){for(var t=[],n=/&/g,a=/</g,s=/>/g,i=/\n/g,l=0;l<e.length;l++){var o=e[l][0],c=e[l][1].replace(n,"&amp;").replace(a,"&lt;").replace(s,"&gt;").replace(i,"&para;<br>");switch(o){case 1:t[l]='<ins style="background:#e6ffe6;">'+c+"</ins>";break;case r:t[l]='<del style="background:#ffe6e6;">'+c+"</del>";break;case 0:t[l]="<span>"+c+"</span>"}}return t.join("")},t.prototype.diff_text1=function(e){for(var t=[],r=0;r<e.length;r++)1!==e[r][0]&&(t[r]=e[r][1]);return t.join("")},t.prototype.diff_text2=function(e){for(var t=[],n=0;n<e.length;n++)e[n][0]!==r&&(t[n]=e[n][1]);return t.join("")},t.prototype.diff_levenshtein=function(e){for(var t=0,n=0,a=0,s=0;s<e.length;s++){var i=e[s][0],l=e[s][1];switch(i){case 1:n+=l.length;break;case r:a+=l.length;break;case 0:t+=Math.max(n,a),n=0,a=0}}return t+Math.max(n,a)},t.prototype.diff_toDelta=function(e){for(var t=[],n=0;n<e.length;n++)switch(e[n][0]){case 1:t[n]="+"+encodeURI(e[n][1]);break;case r:t[n]="-"+e[n][1].length;break;case 0:t[n]="="+e[n][1].length}return t.join("\t").replace(/%20/g," ")},t.prototype.diff_fromDelta=function(e,n){for(var a=[],s=0,i=0,l=n.split(/\t/g),o=0;o<l.length;o++){var c=l[o].substring(1);switch(l[o].charAt(0)){case"+":try{a[s++]=new t.Diff(1,decodeURI(c))}catch(e){throw new Error("Illegal escape in diff_fromDelta: "+c)}break;case"-":case"=":var u=parseInt(c,10);if(isNaN(u)||u<0)throw new Error("Invalid number in diff_fromDelta: "+c);var p=e.substring(i,i+=u);"="==l[o].charAt(0)?a[s++]=new t.Diff(0,p):a[s++]=new t.Diff(r,p);break;default:if(l[o])throw new Error("Invalid diff operation in diff_fromDelta: "+l[o])}}if(i!=e.length)throw new Error("Delta length ("+i+") does not equal source text length ("+e.length+").");return a},t.prototype.match_main=function(e,t,r){if(null==e||null==t||null==r)throw new Error("Null input. (match_main)");return r=Math.max(0,Math.min(r,e.length)),e==t?0:e.length?e.substring(r,r+t.length)==t?r:this.match_bitap_(e,t,r):-1},t.prototype.match_bitap_=function(e,t,r){if(t.length>this.Match_MaxBits)throw new Error("Pattern too long for this browser.");var n=this.match_alphabet_(t),a=this;function s(e,n){var s=e/t.length,i=Math.abs(r-n);return a.Match_Distance?s+i/a.Match_Distance:i?1:s}var i=this.Match_Threshold,l=e.indexOf(t,r);-1!=l&&(i=Math.min(s(0,l),i),-1!=(l=e.lastIndexOf(t,r+t.length))&&(i=Math.min(s(0,l),i)));var o,c,u=1<<t.length-1;l=-1;for(var p,m=t.length+e.length,d=0;d<t.length;d++){for(o=0,c=m;o<c;)s(d,r+c)<=i?o=c:m=c,c=Math.floor((m-o)/2+o);m=c;var f=Math.max(1,r-c+1),h=Math.min(r+c,e.length)+t.length,g=Array(h+2);g[h+1]=(1<<d)-1;for(var x=h;x>=f;x--){var b=n[e.charAt(x-1)];if(g[x]=0===d?(g[x+1]<<1|1)&b:(g[x+1]<<1|1)&b|(p[x+1]|p[x])<<1|1|p[x+1],g[x]&u){var v=s(d,x-1);if(v<=i){if(i=v,!((l=x-1)>r))break;f=Math.max(1,2*r-l)}}}if(s(d+1,r)>i)break;p=g}return l},t.prototype.match_alphabet_=function(e){for(var t={},r=0;r<e.length;r++)t[e.charAt(r)]=0;for(r=0;r<e.length;r++)t[e.charAt(r)]|=1<<e.length-r-1;return t},t.prototype.patch_addContext_=function(e,r){if(0!=r.length){if(null===e.start2)throw Error("patch not initialized");for(var n=r.substring(e.start2,e.start2+e.length1),a=0;r.indexOf(n)!=r.lastIndexOf(n)&&n.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin;)a+=this.Patch_Margin,n=r.substring(e.start2-a,e.start2+e.length1+a);a+=this.Patch_Margin;var s=r.substring(e.start2-a,e.start2);s&&e.diffs.unshift(new t.Diff(0,s));var i=r.substring(e.start2+e.length1,e.start2+e.length1+a);i&&e.diffs.push(new t.Diff(0,i)),e.start1-=s.length,e.start2-=s.length,e.length1+=s.length+i.length,e.length2+=s.length+i.length}},t.prototype.patch_make=function(e,n,a){var s,i;if("string"==typeof e&&"string"==typeof n&&void 0===a)s=e,(i=this.diff_main(s,n,!0)).length>2&&(this.diff_cleanupSemantic(i),this.diff_cleanupEfficiency(i));else if(e&&"object"==typeof e&&void 0===n&&void 0===a)i=e,s=this.diff_text1(i);else if("string"==typeof e&&n&&"object"==typeof n&&void 0===a)s=e,i=n;else{if("string"!=typeof e||"string"!=typeof n||!a||"object"!=typeof a)throw new Error("Unknown call format to patch_make.");s=e,i=a}if(0===i.length)return[];for(var l=[],o=new t.patch_obj,c=0,u=0,p=0,m=s,d=s,f=0;f<i.length;f++){var h=i[f][0],g=i[f][1];switch(c||0===h||(o.start1=u,o.start2=p),h){case 1:o.diffs[c++]=i[f],o.length2+=g.length,d=d.substring(0,p)+g+d.substring(p);break;case r:o.length1+=g.length,o.diffs[c++]=i[f],d=d.substring(0,p)+d.substring(p+g.length);break;case 0:g.length<=2*this.Patch_Margin&&c&&i.length!=f+1?(o.diffs[c++]=i[f],o.length1+=g.length,o.length2+=g.length):g.length>=2*this.Patch_Margin&&c&&(this.patch_addContext_(o,m),l.push(o),o=new t.patch_obj,c=0,m=d,u=p)}1!==h&&(u+=g.length),h!==r&&(p+=g.length)}return c&&(this.patch_addContext_(o,m),l.push(o)),l},t.prototype.patch_deepCopy=function(e){for(var r=[],n=0;n<e.length;n++){var a=e[n],s=new t.patch_obj;s.diffs=[];for(var i=0;i<a.diffs.length;i++)s.diffs[i]=new t.Diff(a.diffs[i][0],a.diffs[i][1]);s.start1=a.start1,s.start2=a.start2,s.length1=a.length1,s.length2=a.length2,r[n]=s}return r},t.prototype.patch_apply=function(e,t){if(0==e.length)return[t,[]];e=this.patch_deepCopy(e);var n=this.patch_addPadding(e);t=n+t+n,this.patch_splitMax(e);for(var a=0,s=[],i=0;i<e.length;i++){var l,o,c=e[i].start2+a,u=this.diff_text1(e[i].diffs),p=-1;if(u.length>this.Match_MaxBits?-1!=(l=this.match_main(t,u.substring(0,this.Match_MaxBits),c))&&(-1==(p=this.match_main(t,u.substring(u.length-this.Match_MaxBits),c+u.length-this.Match_MaxBits))||l>=p)&&(l=-1):l=this.match_main(t,u,c),-1==l)s[i]=!1,a-=e[i].length2-e[i].length1;else if(s[i]=!0,a=l-c,u==(o=-1==p?t.substring(l,l+u.length):t.substring(l,p+this.Match_MaxBits)))t=t.substring(0,l)+this.diff_text2(e[i].diffs)+t.substring(l+u.length);else{var m=this.diff_main(u,o,!1);if(u.length>this.Match_MaxBits&&this.diff_levenshtein(m)/u.length>this.Patch_DeleteThreshold)s[i]=!1;else{this.diff_cleanupSemanticLossless(m);for(var d,f=0,h=0;h<e[i].diffs.length;h++){var g=e[i].diffs[h];0!==g[0]&&(d=this.diff_xIndex(m,f)),1===g[0]?t=t.substring(0,l+d)+g[1]+t.substring(l+d):g[0]===r&&(t=t.substring(0,l+d)+t.substring(l+this.diff_xIndex(m,f+g[1].length))),g[0]!==r&&(f+=g[1].length)}}}}return[t=t.substring(n.length,t.length-n.length),s]},t.prototype.patch_addPadding=function(e){for(var r=this.Patch_Margin,n="",a=1;a<=r;a++)n+=String.fromCharCode(a);for(a=0;a<e.length;a++)e[a].start1+=r,e[a].start2+=r;var s=e[0],i=s.diffs;if(0==i.length||0!=i[0][0])i.unshift(new t.Diff(0,n)),s.start1-=r,s.start2-=r,s.length1+=r,s.length2+=r;else if(r>i[0][1].length){var l=r-i[0][1].length;i[0][1]=n.substring(i[0][1].length)+i[0][1],s.start1-=l,s.start2-=l,s.length1+=l,s.length2+=l}return 0==(i=(s=e[e.length-1]).diffs).length||0!=i[i.length-1][0]?(i.push(new t.Diff(0,n)),s.length1+=r,s.length2+=r):r>i[i.length-1][1].length&&(l=r-i[i.length-1][1].length,i[i.length-1][1]+=n.substring(0,l),s.length1+=l,s.length2+=l),n},t.prototype.patch_splitMax=function(e){for(var n=this.Match_MaxBits,a=0;a<e.length;a++)if(!(e[a].length1<=n)){var s=e[a];e.splice(a--,1);for(var i=s.start1,l=s.start2,o="";0!==s.diffs.length;){var c=new t.patch_obj,u=!0;for(c.start1=i-o.length,c.start2=l-o.length,""!==o&&(c.length1=c.length2=o.length,c.diffs.push(new t.Diff(0,o)));0!==s.diffs.length&&c.length1<n-this.Patch_Margin;){var p=s.diffs[0][0],m=s.diffs[0][1];1===p?(c.length2+=m.length,l+=m.length,c.diffs.push(s.diffs.shift()),u=!1):p===r&&1==c.diffs.length&&0==c.diffs[0][0]&&m.length>2*n?(c.length1+=m.length,i+=m.length,u=!1,c.diffs.push(new t.Diff(p,m)),s.diffs.shift()):(m=m.substring(0,n-c.length1-this.Patch_Margin),c.length1+=m.length,i+=m.length,0===p?(c.length2+=m.length,l+=m.length):u=!1,c.diffs.push(new t.Diff(p,m)),m==s.diffs[0][1]?s.diffs.shift():s.diffs[0][1]=s.diffs[0][1].substring(m.length))}o=(o=this.diff_text2(c.diffs)).substring(o.length-this.Patch_Margin);var d=this.diff_text1(s.diffs).substring(0,this.Patch_Margin);""!==d&&(c.length1+=d.length,c.length2+=d.length,0!==c.diffs.length&&0===c.diffs[c.diffs.length-1][0]?c.diffs[c.diffs.length-1][1]+=d:c.diffs.push(new t.Diff(0,d))),u||e.splice(++a,0,c)}}},t.prototype.patch_toText=function(e){for(var t=[],r=0;r<e.length;r++)t[r]=e[r];return t.join("")},t.prototype.patch_fromText=function(e){var n=[];if(!e)return n;for(var a=e.split("\n"),s=0,i=/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;s<a.length;){var l=a[s].match(i);if(!l)throw new Error("Invalid patch string: "+a[s]);var o=new t.patch_obj;for(n.push(o),o.start1=parseInt(l[1],10),""===l[2]?(o.start1--,o.length1=1):"0"==l[2]?o.length1=0:(o.start1--,o.length1=parseInt(l[2],10)),o.start2=parseInt(l[3],10),""===l[4]?(o.start2--,o.length2=1):"0"==l[4]?o.length2=0:(o.start2--,o.length2=parseInt(l[4],10)),s++;s<a.length;){var c=a[s].charAt(0);try{var u=decodeURI(a[s].substring(1))}catch(e){throw new Error("Illegal escape in patch_fromText: "+u)}if("-"==c)o.diffs.push(new t.Diff(r,u));else if("+"==c)o.diffs.push(new t.Diff(1,u));else if(" "==c)o.diffs.push(new t.Diff(0,u));else{if("@"==c)break;if(""!==c)throw new Error('Invalid patch mode "'+c+'" in: '+u)}s++}}return n},(t.patch_obj=function(){this.diffs=[],this.start1=null,this.start2=null,this.length1=0,this.length2=0}).prototype.toString=function(){for(var e,t=["@@ -"+(0===this.length1?this.start1+",0":1==this.length1?this.start1+1:this.start1+1+","+this.length1)+" +"+(0===this.length2?this.start2+",0":1==this.length2?this.start2+1:this.start2+1+","+this.length2)+" @@\n"],n=0;n<this.diffs.length;n++){switch(this.diffs[n][0]){case 1:e="+";break;case r:e="-";break;case 0:e=" "}t[n+1]=e+encodeURI(this.diffs[n][1])+"\n"}return t.join("").replace(/%20/g," ")},e.exports=t,e.exports.diff_match_patch=t,e.exports.DIFF_DELETE=r,e.exports.DIFF_INSERT=1,e.exports.DIFF_EQUAL=0},535:(e,t,r)=>{e.exports=r(775)},775:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromRange=function(e,t){if(void 0===e)throw new Error('missing required parameter "root"');if(void 0===t)throw new Error('missing required parameter "range"');var r=e.ownerDocument.createRange(),n=t.startContainer,s=t.startOffset;r.setStart(e,0),r.setEnd(n,s);var i=(0,a.default)(r).length;return{start:i,end:i+(0,a.default)(t).length}},t.toRange=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(void 0===e)throw new Error('missing required parameter "root"');var r=e.ownerDocument,a=r.createRange(),s=r.createNodeIterator(e,4),i=t.start||0,l=t.end||i,o=i-(0,n.default)(s,i),c=s.referenceNode,u=l-i+o,p=u-(0,n.default)(s,u),m=s.referenceNode;return a.setStart(c,o),a.setEnd(m,p),a};var n=s(r(604)),a=s(r(781));function s(e){return e&&e.__esModule?e:{default:e}}},781:(e,t)=>{"use strict";function r(e,t){if(!t&&e.firstChild)return e.firstChild;do{if(e.nextSibling)return e.nextSibling;e=e.parentNode}while(e);return e}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t="";return function(e,t){for(var n=function(e){return e.startContainer.nodeType===Node.ELEMENT_NODE?e.startContainer.childNodes[e.startOffset]||r(e.startContainer,!0):e.startContainer}(e),a=function(e){return e.endContainer.nodeType===Node.ELEMENT_NODE?e.endContainer.childNodes[e.endOffset]||r(e.endContainer,!0):r(e.endContainer)}(e);n!==a;)t(n),n=r(n)}(e,(function(r){if(r.nodeType===Node.TEXT_NODE){var n=r===e.startContainer?e.startOffset:0,a=r===e.endContainer?e.endOffset:r.textContent.length;t+=r.textContent.slice(n,a)}})),t}},604:(e,t,r)=>{e.exports=r(771).default},771:(e,t)=>{"use strict";t.default=function(e,t){if(4!==e.whatToShow){var s;try{s=new DOMException(n,"InvalidStateError")}catch(e){(s=new Error(n)).code=11,s.name="InvalidStateError",s.toString=function(){return"InvalidStateError: ".concat(n)}}throw s}var i,l=0,o=e.referenceNode,c=null;if("number"==typeof(i=t)&&isFinite(i)&&Math.floor(i)===i)c={forward:function(){return l<t},backward:function(){return l>t||!e.pointerBeforeReferenceNode}};else{if(!a(t))throw new TypeError("Argument 2 of seek must be an integer or a Text Node.");c={forward:function(e,t){return 2&e.compareDocumentPosition(t)}(o,t)?function(){return!1}:function(){return o!==t},backward:function(){return o!==t||!e.pointerBeforeReferenceNode}}}for(;c.forward();){if(null===(o=e.nextNode()))throw new RangeError(r);l+=o.nodeValue.length}for(e.nextNode()&&(o=e.previousNode());c.backward();){if(null===(o=e.previousNode()))throw new RangeError(r);l-=o.nodeValue.length}if(!a(e.referenceNode))throw new RangeError(r);return l};var r="Iterator exhausted before seek ended.",n="Argument 1 of seek must use filter NodeFilter.SHOW_TEXT.";function a(e){return 3===e.nodeType}},492:function(e,t,r){var n;e=r.nmd(e),function(a){var s=(e&&e.exports,"object"==typeof r.g&&r.g);s.global!==s&&s.window;var i=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,l=/[\x01-\x7F]/g,o=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,c=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,u={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\t":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon",ˆ:"circ",ˇ:"caron","°":"deg","©":"copy","®":"reg","℗":"copysr",℘:"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78",𝒶:"ascr",𝕒:"aopf",𝔞:"afr",𝔸:"Aopf",𝔄:"Afr",𝒜:"Ascr",ª:"ordf",á:"aacute",Á:"Aacute",à:"agrave",À:"Agrave",ă:"abreve",Ă:"Abreve",â:"acirc",Â:"Acirc",å:"aring",Å:"angst",ä:"auml",Ä:"Auml",ã:"atilde",Ã:"Atilde",ą:"aogon",Ą:"Aogon",ā:"amacr",Ā:"Amacr",æ:"aelig",Æ:"AElig",𝒷:"bscr",𝕓:"bopf",𝔟:"bfr",𝔹:"Bopf",ℬ:"Bscr",𝔅:"Bfr",𝔠:"cfr",𝒸:"cscr",𝕔:"copf",ℭ:"Cfr",𝒞:"Cscr",ℂ:"Copf",ć:"cacute",Ć:"Cacute",ĉ:"ccirc",Ĉ:"Ccirc",č:"ccaron",Č:"Ccaron",ċ:"cdot",Ċ:"Cdot",ç:"ccedil",Ç:"Ccedil","℅":"incare",𝔡:"dfr",ⅆ:"dd",𝕕:"dopf",𝒹:"dscr",𝒟:"Dscr",𝔇:"Dfr",ⅅ:"DD",𝔻:"Dopf",ď:"dcaron",Ď:"Dcaron",đ:"dstrok",Đ:"Dstrok",ð:"eth",Ð:"ETH",ⅇ:"ee",ℯ:"escr",𝔢:"efr",𝕖:"eopf",ℰ:"Escr",𝔈:"Efr",𝔼:"Eopf",é:"eacute",É:"Eacute",è:"egrave",È:"Egrave",ê:"ecirc",Ê:"Ecirc",ě:"ecaron",Ě:"Ecaron",ë:"euml",Ë:"Euml",ė:"edot",Ė:"Edot",ę:"eogon",Ę:"Eogon",ē:"emacr",Ē:"Emacr",𝔣:"ffr",𝕗:"fopf",𝒻:"fscr",𝔉:"Ffr",𝔽:"Fopf",ℱ:"Fscr",ﬀ:"fflig",ﬃ:"ffilig",ﬄ:"ffllig",ﬁ:"filig",fj:"fjlig",ﬂ:"fllig",ƒ:"fnof",ℊ:"gscr",𝕘:"gopf",𝔤:"gfr",𝒢:"Gscr",𝔾:"Gopf",𝔊:"Gfr",ǵ:"gacute",ğ:"gbreve",Ğ:"Gbreve",ĝ:"gcirc",Ĝ:"Gcirc",ġ:"gdot",Ġ:"Gdot",Ģ:"Gcedil",𝔥:"hfr",ℎ:"planckh",𝒽:"hscr",𝕙:"hopf",ℋ:"Hscr",ℌ:"Hfr",ℍ:"Hopf",ĥ:"hcirc",Ĥ:"Hcirc",ℏ:"hbar",ħ:"hstrok",Ħ:"Hstrok",𝕚:"iopf",𝔦:"ifr",𝒾:"iscr",ⅈ:"ii",𝕀:"Iopf",ℐ:"Iscr",ℑ:"Im",í:"iacute",Í:"Iacute",ì:"igrave",Ì:"Igrave",î:"icirc",Î:"Icirc",ï:"iuml",Ï:"Iuml",ĩ:"itilde",Ĩ:"Itilde",İ:"Idot",į:"iogon",Į:"Iogon",ī:"imacr",Ī:"Imacr",ĳ:"ijlig",Ĳ:"IJlig",ı:"imath",𝒿:"jscr",𝕛:"jopf",𝔧:"jfr",𝒥:"Jscr",𝔍:"Jfr",𝕁:"Jopf",ĵ:"jcirc",Ĵ:"Jcirc",ȷ:"jmath",𝕜:"kopf",𝓀:"kscr",𝔨:"kfr",𝒦:"Kscr",𝕂:"Kopf",𝔎:"Kfr",ķ:"kcedil",Ķ:"Kcedil",𝔩:"lfr",𝓁:"lscr",ℓ:"ell",𝕝:"lopf",ℒ:"Lscr",𝔏:"Lfr",𝕃:"Lopf",ĺ:"lacute",Ĺ:"Lacute",ľ:"lcaron",Ľ:"Lcaron",ļ:"lcedil",Ļ:"Lcedil",ł:"lstrok",Ł:"Lstrok",ŀ:"lmidot",Ŀ:"Lmidot",𝔪:"mfr",𝕞:"mopf",𝓂:"mscr",𝔐:"Mfr",𝕄:"Mopf",ℳ:"Mscr",𝔫:"nfr",𝕟:"nopf",𝓃:"nscr",ℕ:"Nopf",𝒩:"Nscr",𝔑:"Nfr",ń:"nacute",Ń:"Nacute",ň:"ncaron",Ň:"Ncaron",ñ:"ntilde",Ñ:"Ntilde",ņ:"ncedil",Ņ:"Ncedil","№":"numero",ŋ:"eng",Ŋ:"ENG",𝕠:"oopf",𝔬:"ofr",ℴ:"oscr",𝒪:"Oscr",𝔒:"Ofr",𝕆:"Oopf",º:"ordm",ó:"oacute",Ó:"Oacute",ò:"ograve",Ò:"Ograve",ô:"ocirc",Ô:"Ocirc",ö:"ouml",Ö:"Ouml",ő:"odblac",Ő:"Odblac",õ:"otilde",Õ:"Otilde",ø:"oslash",Ø:"Oslash",ō:"omacr",Ō:"Omacr",œ:"oelig",Œ:"OElig",𝔭:"pfr",𝓅:"pscr",𝕡:"popf",ℙ:"Popf",𝔓:"Pfr",𝒫:"Pscr",𝕢:"qopf",𝔮:"qfr",𝓆:"qscr",𝒬:"Qscr",𝔔:"Qfr",ℚ:"Qopf",ĸ:"kgreen",𝔯:"rfr",𝕣:"ropf",𝓇:"rscr",ℛ:"Rscr",ℜ:"Re",ℝ:"Ropf",ŕ:"racute",Ŕ:"Racute",ř:"rcaron",Ř:"Rcaron",ŗ:"rcedil",Ŗ:"Rcedil",𝕤:"sopf",𝓈:"sscr",𝔰:"sfr",𝕊:"Sopf",𝔖:"Sfr",𝒮:"Sscr","Ⓢ":"oS",ś:"sacute",Ś:"Sacute",ŝ:"scirc",Ŝ:"Scirc",š:"scaron",Š:"Scaron",ş:"scedil",Ş:"Scedil",ß:"szlig",𝔱:"tfr",𝓉:"tscr",𝕥:"topf",𝒯:"Tscr",𝔗:"Tfr",𝕋:"Topf",ť:"tcaron",Ť:"Tcaron",ţ:"tcedil",Ţ:"Tcedil","™":"trade",ŧ:"tstrok",Ŧ:"Tstrok",𝓊:"uscr",𝕦:"uopf",𝔲:"ufr",𝕌:"Uopf",𝔘:"Ufr",𝒰:"Uscr",ú:"uacute",Ú:"Uacute",ù:"ugrave",Ù:"Ugrave",ŭ:"ubreve",Ŭ:"Ubreve",û:"ucirc",Û:"Ucirc",ů:"uring",Ů:"Uring",ü:"uuml",Ü:"Uuml",ű:"udblac",Ű:"Udblac",ũ:"utilde",Ũ:"Utilde",ų:"uogon",Ų:"Uogon",ū:"umacr",Ū:"Umacr",𝔳:"vfr",𝕧:"vopf",𝓋:"vscr",𝔙:"Vfr",𝕍:"Vopf",𝒱:"Vscr",𝕨:"wopf",𝓌:"wscr",𝔴:"wfr",𝒲:"Wscr",𝕎:"Wopf",𝔚:"Wfr",ŵ:"wcirc",Ŵ:"Wcirc",𝔵:"xfr",𝓍:"xscr",𝕩:"xopf",𝕏:"Xopf",𝔛:"Xfr",𝒳:"Xscr",𝔶:"yfr",𝓎:"yscr",𝕪:"yopf",𝒴:"Yscr",𝔜:"Yfr",𝕐:"Yopf",ý:"yacute",Ý:"Yacute",ŷ:"ycirc",Ŷ:"Ycirc",ÿ:"yuml",Ÿ:"Yuml",𝓏:"zscr",𝔷:"zfr",𝕫:"zopf",ℨ:"Zfr",ℤ:"Zopf",𝒵:"Zscr",ź:"zacute",Ź:"Zacute",ž:"zcaron",Ž:"Zcaron",ż:"zdot",Ż:"Zdot",Ƶ:"imped",þ:"thorn",Þ:"THORN",ŉ:"napos",α:"alpha",Α:"Alpha",β:"beta",Β:"Beta",γ:"gamma",Γ:"Gamma",δ:"delta",Δ:"Delta",ε:"epsi",ϵ:"epsiv",Ε:"Epsilon",ϝ:"gammad",Ϝ:"Gammad",ζ:"zeta",Ζ:"Zeta",η:"eta",Η:"Eta",θ:"theta",ϑ:"thetav",Θ:"Theta",ι:"iota",Ι:"Iota",κ:"kappa",ϰ:"kappav",Κ:"Kappa",λ:"lambda",Λ:"Lambda",μ:"mu",µ:"micro",Μ:"Mu",ν:"nu",Ν:"Nu",ξ:"xi",Ξ:"Xi",ο:"omicron",Ο:"Omicron",π:"pi",ϖ:"piv",Π:"Pi",ρ:"rho",ϱ:"rhov",Ρ:"Rho",σ:"sigma",Σ:"Sigma",ς:"sigmaf",τ:"tau",Τ:"Tau",υ:"upsi",Υ:"Upsilon",ϒ:"Upsi",φ:"phi",ϕ:"phiv",Φ:"Phi",χ:"chi",Χ:"Chi",ψ:"psi",Ψ:"Psi",ω:"omega",Ω:"ohm",а:"acy",А:"Acy",б:"bcy",Б:"Bcy",в:"vcy",В:"Vcy",г:"gcy",Г:"Gcy",ѓ:"gjcy",Ѓ:"GJcy",д:"dcy",Д:"Dcy",ђ:"djcy",Ђ:"DJcy",е:"iecy",Е:"IEcy",ё:"iocy",Ё:"IOcy",є:"jukcy",Є:"Jukcy",ж:"zhcy",Ж:"ZHcy",з:"zcy",З:"Zcy",ѕ:"dscy",Ѕ:"DScy",и:"icy",И:"Icy",і:"iukcy",І:"Iukcy",ї:"yicy",Ї:"YIcy",й:"jcy",Й:"Jcy",ј:"jsercy",Ј:"Jsercy",к:"kcy",К:"Kcy",ќ:"kjcy",Ќ:"KJcy",л:"lcy",Л:"Lcy",љ:"ljcy",Љ:"LJcy",м:"mcy",М:"Mcy",н:"ncy",Н:"Ncy",њ:"njcy",Њ:"NJcy",о:"ocy",О:"Ocy",п:"pcy",П:"Pcy",р:"rcy",Р:"Rcy",с:"scy",С:"Scy",т:"tcy",Т:"Tcy",ћ:"tshcy",Ћ:"TSHcy",у:"ucy",У:"Ucy",ў:"ubrcy",Ў:"Ubrcy",ф:"fcy",Ф:"Fcy",х:"khcy",Х:"KHcy",ц:"tscy",Ц:"TScy",ч:"chcy",Ч:"CHcy",џ:"dzcy",Џ:"DZcy",ш:"shcy",Ш:"SHcy",щ:"shchcy",Щ:"SHCHcy",ъ:"hardcy",Ъ:"HARDcy",ы:"ycy",Ы:"Ycy",ь:"softcy",Ь:"SOFTcy",э:"ecy",Э:"Ecy",ю:"yucy",Ю:"YUcy",я:"yacy",Я:"YAcy",ℵ:"aleph",ℶ:"beth",ℷ:"gimel",ℸ:"daleth"},p=/["&'<>`]/g,m={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},d=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,f=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,h=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,g={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},x={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},b={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},v=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],w=String.fromCharCode,y={}.hasOwnProperty,E=function(e,t){return y.call(e,t)},A=function(e,t){if(!e)return t;var r,n={};for(r in t)n[r]=E(e,r)?e[r]:t[r];return n},D=function(e,t){var r="";return e>=55296&&e<=57343||e>1114111?(t&&q("character reference outside the permissible Unicode range"),"�"):E(b,e)?(t&&q("disallowed character reference"),b[e]):(t&&function(e,t){for(var r=-1,n=e.length;++r<n;)if(e[r]==t)return!0;return!1}(v,e)&&q("disallowed character reference"),e>65535&&(r+=w((e-=65536)>>>10&1023|55296),e=56320|1023&e),r+=w(e))},T=function(e){return"&#x"+e.toString(16).toUpperCase()+";"},S=function(e){return"&#"+e+";"},q=function(e){throw Error("Parse error: "+e)},C=function(e,t){(t=A(t,C.options)).strict&&f.test(e)&&q("forbidden code point");var r=t.encodeEverything,n=t.useNamedReferences,a=t.allowUnsafeSymbols,s=t.decimal?S:T,m=function(e){return s(e.charCodeAt(0))};return r?(e=e.replace(l,(function(e){return n&&E(u,e)?"&"+u[e]+";":m(e)})),n&&(e=e.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),n&&(e=e.replace(c,(function(e){return"&"+u[e]+";"})))):n?(a||(e=e.replace(p,(function(e){return"&"+u[e]+";"}))),e=(e=e.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;")).replace(c,(function(e){return"&"+u[e]+";"}))):a||(e=e.replace(p,m)),e.replace(i,(function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1);return s(1024*(t-55296)+r-56320+65536)})).replace(o,m)};C.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var k=function(e,t){var r=(t=A(t,k.options)).strict;return r&&d.test(e)&&q("malformed character reference"),e.replace(h,(function(e,n,a,s,i,l,o,c,u){var p,m,d,f,h,b;return n?g[h=n]:a?(h=a,(b=s)&&t.isAttributeValue?(r&&"="==b&&q("`&` did not start a character reference"),e):(r&&q("named character reference was not terminated by a semicolon"),x[h]+(b||""))):i?(d=i,m=l,r&&!m&&q("character reference was not terminated by a semicolon"),p=parseInt(d,10),D(p,r)):o?(f=o,m=c,r&&!m&&q("character reference was not terminated by a semicolon"),p=parseInt(f,16),D(p,r)):(r&&q("named character reference was not terminated by a semicolon"),e)}))};k.options={isAttributeValue:!1,strict:!1};var O={version:"1.2.0",encode:C,decode:k,escape:function(e){return e.replace(p,(function(e){return m[e]}))},unescape:k};void 0===(n=function(){return O}.call(t,r,t,e))||(e.exports=n)}()},861:(e,t,r)=>{"use strict";function n(e){if(null==e)return window;if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function a(e){return e instanceof n(e).Element||e instanceof Element}function s(e){return e instanceof n(e).HTMLElement||e instanceof HTMLElement}function i(e){return"undefined"!=typeof ShadowRoot&&(e instanceof n(e).ShadowRoot||e instanceof ShadowRoot)}r.r(t),r.d(t,{animateFill:()=>lt,createSingleton:()=>at,default:()=>ht,delegate:()=>it,followCursor:()=>pt,hideAll:()=>rt,inlinePositioning:()=>mt,roundArrow:()=>ue,sticky:()=>dt});var l=Math.max,o=Math.min,c=Math.round;function u(e,t){void 0===t&&(t=!1);var r=e.getBoundingClientRect(),n=1,a=1;if(s(e)&&t){var i=e.offsetHeight,l=e.offsetWidth;l>0&&(n=c(r.width)/l||1),i>0&&(a=c(r.height)/i||1)}return{width:r.width/n,height:r.height/a,top:r.top/a,right:r.right/n,bottom:r.bottom/a,left:r.left/n,x:r.left/n,y:r.top/a}}function p(e){var t=n(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function m(e){return e?(e.nodeName||"").toLowerCase():null}function d(e){return((a(e)?e.ownerDocument:e.document)||window.document).documentElement}function f(e){return u(d(e)).left+p(e).scrollLeft}function h(e){return n(e).getComputedStyle(e)}function g(e){var t=h(e),r=t.overflow,n=t.overflowX,a=t.overflowY;return/auto|scroll|overlay|hidden/.test(r+a+n)}function x(e,t,r){void 0===r&&(r=!1);var a,i,l=s(t),o=s(t)&&function(e){var t=e.getBoundingClientRect(),r=c(t.width)/e.offsetWidth||1,n=c(t.height)/e.offsetHeight||1;return 1!==r||1!==n}(t),h=d(t),x=u(e,o),b={scrollLeft:0,scrollTop:0},v={x:0,y:0};return(l||!l&&!r)&&(("body"!==m(t)||g(h))&&(b=(a=t)!==n(a)&&s(a)?{scrollLeft:(i=a).scrollLeft,scrollTop:i.scrollTop}:p(a)),s(t)?((v=u(t,!0)).x+=t.clientLeft,v.y+=t.clientTop):h&&(v.x=f(h))),{x:x.left+b.scrollLeft-v.x,y:x.top+b.scrollTop-v.y,width:x.width,height:x.height}}function b(e){var t=u(e),r=e.offsetWidth,n=e.offsetHeight;return Math.abs(t.width-r)<=1&&(r=t.width),Math.abs(t.height-n)<=1&&(n=t.height),{x:e.offsetLeft,y:e.offsetTop,width:r,height:n}}function v(e){return"html"===m(e)?e:e.assignedSlot||e.parentNode||(i(e)?e.host:null)||d(e)}function w(e){return["html","body","#document"].indexOf(m(e))>=0?e.ownerDocument.body:s(e)&&g(e)?e:w(v(e))}function y(e,t){var r;void 0===t&&(t=[]);var a=w(e),s=a===(null==(r=e.ownerDocument)?void 0:r.body),i=n(a),l=s?[i].concat(i.visualViewport||[],g(a)?a:[]):a,o=t.concat(l);return s?o:o.concat(y(v(l)))}function E(e){return["table","td","th"].indexOf(m(e))>=0}function A(e){return s(e)&&"fixed"!==h(e).position?e.offsetParent:null}function D(e){for(var t=n(e),r=A(e);r&&E(r)&&"static"===h(r).position;)r=A(r);return r&&("html"===m(r)||"body"===m(r)&&"static"===h(r).position)?t:r||function(e){var t=-1!==navigator.userAgent.toLowerCase().indexOf("firefox");if(-1!==navigator.userAgent.indexOf("Trident")&&s(e)&&"fixed"===h(e).position)return null;for(var r=v(e);s(r)&&["html","body"].indexOf(m(r))<0;){var n=h(r);if("none"!==n.transform||"none"!==n.perspective||"paint"===n.contain||-1!==["transform","perspective"].indexOf(n.willChange)||t&&"filter"===n.willChange||t&&n.filter&&"none"!==n.filter)return r;r=r.parentNode}return null}(e)||t}var T="top",S="bottom",q="right",C="left",k="auto",O=[T,S,q,C],N="start",L="end",R="viewport",I="popper",B=O.reduce((function(e,t){return e.concat([t+"-"+N,t+"-"+L])}),[]),_=[].concat(O,[k]).reduce((function(e,t){return e.concat([t,t+"-"+N,t+"-"+L])}),[]),U=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function P(e){var t=new Map,r=new Set,n=[];function a(e){r.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!r.has(e)){var n=t.get(e);n&&a(n)}})),n.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){r.has(e.name)||a(e)})),n}var M={placement:"bottom",modifiers:[],strategy:"absolute"};function $(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return!t.some((function(e){return!(e&&"function"==typeof e.getBoundingClientRect)}))}function F(e){void 0===e&&(e={});var t=e,r=t.defaultModifiers,n=void 0===r?[]:r,s=t.defaultOptions,i=void 0===s?M:s;return function(e,t,r){void 0===r&&(r=i);var s,l,o={placement:"bottom",orderedModifiers:[],options:Object.assign({},M,i),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},c=[],u=!1,p={state:o,setOptions:function(r){var s="function"==typeof r?r(o.options):r;m(),o.options=Object.assign({},i,o.options,s),o.scrollParents={reference:a(e)?y(e):e.contextElement?y(e.contextElement):[],popper:y(t)};var l,u,d=function(e){var t=P(e);return U.reduce((function(e,r){return e.concat(t.filter((function(e){return e.phase===r})))}),[])}((l=[].concat(n,o.options.modifiers),u=l.reduce((function(e,t){var r=e[t.name];return e[t.name]=r?Object.assign({},r,t,{options:Object.assign({},r.options,t.options),data:Object.assign({},r.data,t.data)}):t,e}),{}),Object.keys(u).map((function(e){return u[e]}))));return o.orderedModifiers=d.filter((function(e){return e.enabled})),o.orderedModifiers.forEach((function(e){var t=e.name,r=e.options,n=void 0===r?{}:r,a=e.effect;if("function"==typeof a){var s=a({state:o,name:t,instance:p,options:n});c.push(s||function(){})}})),p.update()},forceUpdate:function(){if(!u){var e=o.elements,t=e.reference,r=e.popper;if($(t,r)){o.rects={reference:x(t,D(r),"fixed"===o.options.strategy),popper:b(r)},o.reset=!1,o.placement=o.options.placement,o.orderedModifiers.forEach((function(e){return o.modifiersData[e.name]=Object.assign({},e.data)}));for(var n=0;n<o.orderedModifiers.length;n++)if(!0!==o.reset){var a=o.orderedModifiers[n],s=a.fn,i=a.options,l=void 0===i?{}:i,c=a.name;"function"==typeof s&&(o=s({state:o,options:l,name:c,instance:p})||o)}else o.reset=!1,n=-1}}},update:(s=function(){return new Promise((function(e){p.forceUpdate(),e(o)}))},function(){return l||(l=new Promise((function(e){Promise.resolve().then((function(){l=void 0,e(s())}))}))),l}),destroy:function(){m(),u=!0}};if(!$(e,t))return p;function m(){c.forEach((function(e){return e()})),c=[]}return p.setOptions(r).then((function(e){!u&&r.onFirstUpdate&&r.onFirstUpdate(e)})),p}}var V={passive:!0};function H(e){return e.split("-")[0]}function j(e){return e.split("-")[1]}function G(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function z(e){var t,r=e.reference,n=e.element,a=e.placement,s=a?H(a):null,i=a?j(a):null,l=r.x+r.width/2-n.width/2,o=r.y+r.height/2-n.height/2;switch(s){case T:t={x:l,y:r.y-n.height};break;case S:t={x:l,y:r.y+r.height};break;case q:t={x:r.x+r.width,y:o};break;case C:t={x:r.x-n.width,y:o};break;default:t={x:r.x,y:r.y}}var c=s?G(s):null;if(null!=c){var u="y"===c?"height":"width";switch(i){case N:t[c]=t[c]-(r[u]/2-n[u]/2);break;case L:t[c]=t[c]+(r[u]/2-n[u]/2)}}return t}var W={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Y(e){var t,r=e.popper,a=e.popperRect,s=e.placement,i=e.variation,l=e.offsets,o=e.position,u=e.gpuAcceleration,p=e.adaptive,m=e.roundOffsets,f=e.isFixed,g=l.x,x=void 0===g?0:g,b=l.y,v=void 0===b?0:b,w="function"==typeof m?m({x,y:v}):{x,y:v};x=w.x,v=w.y;var y=l.hasOwnProperty("x"),E=l.hasOwnProperty("y"),A=C,k=T,O=window;if(p){var N=D(r),R="clientHeight",I="clientWidth";N===n(r)&&"static"!==h(N=d(r)).position&&"absolute"===o&&(R="scrollHeight",I="scrollWidth"),(s===T||(s===C||s===q)&&i===L)&&(k=S,v-=(f&&O.visualViewport?O.visualViewport.height:N[R])-a.height,v*=u?1:-1),s!==C&&(s!==T&&s!==S||i!==L)||(A=q,x-=(f&&O.visualViewport?O.visualViewport.width:N[I])-a.width,x*=u?1:-1)}var B,_=Object.assign({position:o},p&&W),U=!0===m?function(e){var t=e.x,r=e.y,n=window.devicePixelRatio||1;return{x:c(t*n)/n||0,y:c(r*n)/n||0}}({x,y:v}):{x,y:v};return x=U.x,v=U.y,u?Object.assign({},_,((B={})[k]=E?"0":"",B[A]=y?"0":"",B.transform=(O.devicePixelRatio||1)<=1?"translate("+x+"px, "+v+"px)":"translate3d("+x+"px, "+v+"px, 0)",B)):Object.assign({},_,((t={})[k]=E?v+"px":"",t[A]=y?x+"px":"",t.transform="",t))}const X={name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var r=t.styles[e]||{},n=t.attributes[e]||{},a=t.elements[e];s(a)&&m(a)&&(Object.assign(a.style,r),Object.keys(n).forEach((function(e){var t=n[e];!1===t?a.removeAttribute(e):a.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,r={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,r.popper),t.styles=r,t.elements.arrow&&Object.assign(t.elements.arrow.style,r.arrow),function(){Object.keys(t.elements).forEach((function(e){var n=t.elements[e],a=t.attributes[e]||{},i=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:r[e]).reduce((function(e,t){return e[t]="",e}),{});s(n)&&m(n)&&(Object.assign(n.style,i),Object.keys(a).forEach((function(e){n.removeAttribute(e)})))}))}},requires:["computeStyles"]};var K={left:"right",right:"left",bottom:"top",top:"bottom"};function J(e){return e.replace(/left|right|bottom|top/g,(function(e){return K[e]}))}var Z={start:"end",end:"start"};function Q(e){return e.replace(/start|end/g,(function(e){return Z[e]}))}function ee(e,t){var r=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(r&&i(r)){var n=t;do{if(n&&e.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function te(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function re(e,t){return t===R?te(function(e){var t=n(e),r=d(e),a=t.visualViewport,s=r.clientWidth,i=r.clientHeight,l=0,o=0;return a&&(s=a.width,i=a.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(l=a.offsetLeft,o=a.offsetTop)),{width:s,height:i,x:l+f(e),y:o}}(e)):a(t)?function(e){var t=u(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}(t):te(function(e){var t,r=d(e),n=p(e),a=null==(t=e.ownerDocument)?void 0:t.body,s=l(r.scrollWidth,r.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),i=l(r.scrollHeight,r.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),o=-n.scrollLeft+f(e),c=-n.scrollTop;return"rtl"===h(a||r).direction&&(o+=l(r.clientWidth,a?a.clientWidth:0)-s),{width:s,height:i,x:o,y:c}}(d(e)))}function ne(e){return Object.assign({},{top:0,right:0,bottom:0,left:0},e)}function ae(e,t){return t.reduce((function(t,r){return t[r]=e,t}),{})}function se(e,t){void 0===t&&(t={});var r=t,n=r.placement,i=void 0===n?e.placement:n,c=r.boundary,p=void 0===c?"clippingParents":c,f=r.rootBoundary,g=void 0===f?R:f,x=r.elementContext,b=void 0===x?I:x,w=r.altBoundary,E=void 0!==w&&w,A=r.padding,C=void 0===A?0:A,k=ne("number"!=typeof C?C:ae(C,O)),N=b===I?"reference":I,L=e.rects.popper,B=e.elements[E?N:b],_=function(e,t,r){var n="clippingParents"===t?function(e){var t=y(v(e)),r=["absolute","fixed"].indexOf(h(e).position)>=0&&s(e)?D(e):e;return a(r)?t.filter((function(e){return a(e)&&ee(e,r)&&"body"!==m(e)})):[]}(e):[].concat(t),i=[].concat(n,[r]),c=i[0],u=i.reduce((function(t,r){var n=re(e,r);return t.top=l(n.top,t.top),t.right=o(n.right,t.right),t.bottom=o(n.bottom,t.bottom),t.left=l(n.left,t.left),t}),re(e,c));return u.width=u.right-u.left,u.height=u.bottom-u.top,u.x=u.left,u.y=u.top,u}(a(B)?B:B.contextElement||d(e.elements.popper),p,g),U=u(e.elements.reference),P=z({reference:U,element:L,strategy:"absolute",placement:i}),M=te(Object.assign({},L,P)),$=b===I?M:U,F={top:_.top-$.top+k.top,bottom:$.bottom-_.bottom+k.bottom,left:_.left-$.left+k.left,right:$.right-_.right+k.right},V=e.modifiersData.offset;if(b===I&&V){var H=V[i];Object.keys(F).forEach((function(e){var t=[q,S].indexOf(e)>=0?1:-1,r=[T,S].indexOf(e)>=0?"y":"x";F[e]+=H[r]*t}))}return F}function ie(e,t,r){return l(e,o(t,r))}function le(e,t,r){return void 0===r&&(r={x:0,y:0}),{top:e.top-t.height-r.y,right:e.right-t.width+r.x,bottom:e.bottom-t.height+r.y,left:e.left-t.width-r.x}}function oe(e){return[T,q,S,C].some((function(t){return e[t]>=0}))}var ce=F({defaultModifiers:[{name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,r=e.instance,a=e.options,s=a.scroll,i=void 0===s||s,l=a.resize,o=void 0===l||l,c=n(t.elements.popper),u=[].concat(t.scrollParents.reference,t.scrollParents.popper);return i&&u.forEach((function(e){e.addEventListener("scroll",r.update,V)})),o&&c.addEventListener("resize",r.update,V),function(){i&&u.forEach((function(e){e.removeEventListener("scroll",r.update,V)})),o&&c.removeEventListener("resize",r.update,V)}},data:{}},{name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,r=e.name;t.modifiersData[r]=z({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},{name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,r=e.options,n=r.gpuAcceleration,a=void 0===n||n,s=r.adaptive,i=void 0===s||s,l=r.roundOffsets,o=void 0===l||l,c={placement:H(t.placement),variation:j(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:a,isFixed:"fixed"===t.options.strategy};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign({},t.styles.popper,Y(Object.assign({},c,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:i,roundOffsets:o})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign({},t.styles.arrow,Y(Object.assign({},c,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:o})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})},data:{}},X,{name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,r=e.options,n=e.name,a=r.offset,s=void 0===a?[0,0]:a,i=_.reduce((function(e,r){return e[r]=function(e,t,r){var n=H(e),a=[C,T].indexOf(n)>=0?-1:1,s="function"==typeof r?r(Object.assign({},t,{placement:e})):r,i=s[0],l=s[1];return i=i||0,l=(l||0)*a,[C,q].indexOf(n)>=0?{x:l,y:i}:{x:i,y:l}}(r,t.rects,s),e}),{}),l=i[t.placement],o=l.x,c=l.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=o,t.modifiersData.popperOffsets.y+=c),t.modifiersData[n]=i}},{name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options,n=e.name;if(!t.modifiersData[n]._skip){for(var a=r.mainAxis,s=void 0===a||a,i=r.altAxis,l=void 0===i||i,o=r.fallbackPlacements,c=r.padding,u=r.boundary,p=r.rootBoundary,m=r.altBoundary,d=r.flipVariations,f=void 0===d||d,h=r.allowedAutoPlacements,g=t.options.placement,x=H(g),b=o||(x!==g&&f?function(e){if(H(e)===k)return[];var t=J(e);return[Q(e),t,Q(t)]}(g):[J(g)]),v=[g].concat(b).reduce((function(e,r){return e.concat(H(r)===k?function(e,t){void 0===t&&(t={});var r=t,n=r.placement,a=r.boundary,s=r.rootBoundary,i=r.padding,l=r.flipVariations,o=r.allowedAutoPlacements,c=void 0===o?_:o,u=j(n),p=u?l?B:B.filter((function(e){return j(e)===u})):O,m=p.filter((function(e){return c.indexOf(e)>=0}));0===m.length&&(m=p);var d=m.reduce((function(t,r){return t[r]=se(e,{placement:r,boundary:a,rootBoundary:s,padding:i})[H(r)],t}),{});return Object.keys(d).sort((function(e,t){return d[e]-d[t]}))}(t,{placement:r,boundary:u,rootBoundary:p,padding:c,flipVariations:f,allowedAutoPlacements:h}):r)}),[]),w=t.rects.reference,y=t.rects.popper,E=new Map,A=!0,D=v[0],L=0;L<v.length;L++){var R=v[L],I=H(R),U=j(R)===N,P=[T,S].indexOf(I)>=0,M=P?"width":"height",$=se(t,{placement:R,boundary:u,rootBoundary:p,altBoundary:m,padding:c}),F=P?U?q:C:U?S:T;w[M]>y[M]&&(F=J(F));var V=J(F),G=[];if(s&&G.push($[I]<=0),l&&G.push($[F]<=0,$[V]<=0),G.every((function(e){return e}))){D=R,A=!1;break}E.set(R,G)}if(A)for(var z=function(e){var t=v.find((function(t){var r=E.get(t);if(r)return r.slice(0,e).every((function(e){return e}))}));if(t)return D=t,"break"},W=f?3:1;W>0&&"break"!==z(W);W--);t.placement!==D&&(t.modifiersData[n]._skip=!0,t.placement=D,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}},{name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options,n=e.name,a=r.mainAxis,s=void 0===a||a,i=r.altAxis,c=void 0!==i&&i,u=r.boundary,p=r.rootBoundary,m=r.altBoundary,d=r.padding,f=r.tether,h=void 0===f||f,g=r.tetherOffset,x=void 0===g?0:g,v=se(t,{boundary:u,rootBoundary:p,padding:d,altBoundary:m}),w=H(t.placement),y=j(t.placement),E=!y,A=G(w),k="x"===A?"y":"x",O=t.modifiersData.popperOffsets,L=t.rects.reference,R=t.rects.popper,I="function"==typeof x?x(Object.assign({},t.rects,{placement:t.placement})):x,B="number"==typeof I?{mainAxis:I,altAxis:I}:Object.assign({mainAxis:0,altAxis:0},I),_=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,U={x:0,y:0};if(O){if(s){var P,M="y"===A?T:C,$="y"===A?S:q,F="y"===A?"height":"width",V=O[A],z=V+v[M],W=V-v[$],Y=h?-R[F]/2:0,X=y===N?L[F]:R[F],K=y===N?-R[F]:-L[F],J=t.elements.arrow,Z=h&&J?b(J):{width:0,height:0},Q=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},ee=Q[M],te=Q[$],re=ie(0,L[F],Z[F]),ne=E?L[F]/2-Y-re-ee-B.mainAxis:X-re-ee-B.mainAxis,ae=E?-L[F]/2+Y+re+te+B.mainAxis:K+re+te+B.mainAxis,le=t.elements.arrow&&D(t.elements.arrow),oe=le?"y"===A?le.clientTop||0:le.clientLeft||0:0,ce=null!=(P=null==_?void 0:_[A])?P:0,ue=V+ae-ce,pe=ie(h?o(z,V+ne-ce-oe):z,V,h?l(W,ue):W);O[A]=pe,U[A]=pe-V}if(c){var me,de="x"===A?T:C,fe="x"===A?S:q,he=O[k],ge="y"===k?"height":"width",xe=he+v[de],be=he-v[fe],ve=-1!==[T,C].indexOf(w),we=null!=(me=null==_?void 0:_[k])?me:0,ye=ve?xe:he-L[ge]-R[ge]-we+B.altAxis,Ee=ve?he+L[ge]+R[ge]-we-B.altAxis:be,Ae=h&&ve?function(e,t,r){var n=ie(e,t,r);return n>r?r:n}(ye,he,Ee):ie(h?ye:xe,he,h?Ee:be);O[k]=Ae,U[k]=Ae-he}t.modifiersData[n]=U}},requiresIfExists:["offset"]},{name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,r=e.state,n=e.name,a=e.options,s=r.elements.arrow,i=r.modifiersData.popperOffsets,l=H(r.placement),o=G(l),c=[C,q].indexOf(l)>=0?"height":"width";if(s&&i){var u=function(e,t){return ne("number"!=typeof(e="function"==typeof e?e(Object.assign({},t.rects,{placement:t.placement})):e)?e:ae(e,O))}(a.padding,r),p=b(s),m="y"===o?T:C,d="y"===o?S:q,f=r.rects.reference[c]+r.rects.reference[o]-i[o]-r.rects.popper[c],h=i[o]-r.rects.reference[o],g=D(s),x=g?"y"===o?g.clientHeight||0:g.clientWidth||0:0,v=f/2-h/2,w=u[m],y=x-p[c]-u[d],E=x/2-p[c]/2+v,A=ie(w,E,y),k=o;r.modifiersData[n]=((t={})[k]=A,t.centerOffset=A-E,t)}},effect:function(e){var t=e.state,r=e.options.element,n=void 0===r?"[data-popper-arrow]":r;null!=n&&("string"!=typeof n||(n=t.elements.popper.querySelector(n)))&&ee(t.elements.popper,n)&&(t.elements.arrow=n)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]},{name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,r=e.name,n=t.rects.reference,a=t.rects.popper,s=t.modifiersData.preventOverflow,i=se(t,{elementContext:"reference"}),l=se(t,{altBoundary:!0}),o=le(i,n),c=le(l,a,s),u=oe(o),p=oe(c);t.modifiersData[r]={referenceClippingOffsets:o,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:p},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":p})}}]}),ue='<svg width="16" height="6" xmlns="http://www.w3.org/2000/svg"><path d="M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z"></svg>',pe="tippy-content",me="tippy-backdrop",de="tippy-arrow",fe="tippy-svg-arrow",he={passive:!0,capture:!0},ge=function(){return document.body};function xe(e,t,r){if(Array.isArray(e)){var n=e[t];return null==n?Array.isArray(r)?r[t]:r:n}return e}function be(e,t){var r={}.toString.call(e);return 0===r.indexOf("[object")&&r.indexOf(t+"]")>-1}function ve(e,t){return"function"==typeof e?e.apply(void 0,t):e}function we(e,t){return 0===t?e:function(n){clearTimeout(r),r=setTimeout((function(){e(n)}),t)};var r}function ye(e,t){var r=Object.assign({},e);return t.forEach((function(e){delete r[e]})),r}function Ee(e){return[].concat(e)}function Ae(e,t){-1===e.indexOf(t)&&e.push(t)}function De(e){return e.split("-")[0]}function Te(e){return[].slice.call(e)}function Se(e){return Object.keys(e).reduce((function(t,r){return void 0!==e[r]&&(t[r]=e[r]),t}),{})}function qe(){return document.createElement("div")}function Ce(e){return["Element","Fragment"].some((function(t){return be(e,t)}))}function ke(e){return be(e,"MouseEvent")}function Oe(e){return!(!e||!e._tippy||e._tippy.reference!==e)}function Ne(e,t){e.forEach((function(e){e&&(e.style.transitionDuration=t+"ms")}))}function Le(e,t){e.forEach((function(e){e&&e.setAttribute("data-state",t)}))}function Re(e){var t,r=Ee(e)[0];return null!=r&&null!=(t=r.ownerDocument)&&t.body?r.ownerDocument:document}function Ie(e,t,r){var n=t+"EventListener";["transitionend","webkitTransitionEnd"].forEach((function(t){e[n](t,r)}))}function Be(e,t){for(var r=t;r;){var n;if(e.contains(r))return!0;r=null==r.getRootNode||null==(n=r.getRootNode())?void 0:n.host}return!1}var _e={isTouch:!1},Ue=0;function Pe(){_e.isTouch||(_e.isTouch=!0,window.performance&&document.addEventListener("mousemove",Me))}function Me(){var e=performance.now();e-Ue<20&&(_e.isTouch=!1,document.removeEventListener("mousemove",Me)),Ue=e}function $e(){var e=document.activeElement;if(Oe(e)){var t=e._tippy;e.blur&&!t.state.isVisible&&e.blur()}}var Fe=!("undefined"==typeof window||"undefined"==typeof document||!window.msCrypto),Ve=Object.assign({appendTo:ge,aria:{content:"auto",expanded:"auto"},delay:0,duration:[300,250],getReferenceClientRect:null,hideOnClick:!0,ignoreAttributes:!1,interactive:!1,interactiveBorder:2,interactiveDebounce:0,moveTransition:"",offset:[0,10],onAfterUpdate:function(){},onBeforeUpdate:function(){},onCreate:function(){},onDestroy:function(){},onHidden:function(){},onHide:function(){},onMount:function(){},onShow:function(){},onShown:function(){},onTrigger:function(){},onUntrigger:function(){},onClickOutside:function(){},placement:"top",plugins:[],popperOptions:{},render:null,showOnCreate:!1,touch:!0,trigger:"mouseenter focus",triggerTarget:null},{animateFill:!1,followCursor:!1,inlinePositioning:!1,sticky:!1},{allowHTML:!1,animation:"fade",arrow:!0,content:"",inertia:!1,maxWidth:350,role:"tooltip",theme:"",zIndex:9999}),He=Object.keys(Ve);function je(e){var t=(e.plugins||[]).reduce((function(t,r){var n,a=r.name,s=r.defaultValue;return a&&(t[a]=void 0!==e[a]?e[a]:null!=(n=Ve[a])?n:s),t}),{});return Object.assign({},e,t)}function Ge(e,t){var r=Object.assign({},t,{content:ve(t.content,[e])},t.ignoreAttributes?{}:function(e,t){return(t?Object.keys(je(Object.assign({},Ve,{plugins:t}))):He).reduce((function(t,r){var n=(e.getAttribute("data-tippy-"+r)||"").trim();if(!n)return t;if("content"===r)t[r]=n;else try{t[r]=JSON.parse(n)}catch(e){t[r]=n}return t}),{})}(e,t.plugins));return r.aria=Object.assign({},Ve.aria,r.aria),r.aria={expanded:"auto"===r.aria.expanded?t.interactive:r.aria.expanded,content:"auto"===r.aria.content?t.interactive?null:"describedby":r.aria.content},r}function ze(e,t){e.innerHTML=t}function We(e){var t=qe();return!0===e?t.className=de:(t.className=fe,Ce(e)?t.appendChild(e):ze(t,e)),t}function Ye(e,t){Ce(t.content)?(ze(e,""),e.appendChild(t.content)):"function"!=typeof t.content&&(t.allowHTML?ze(e,t.content):e.textContent=t.content)}function Xe(e){var t=e.firstElementChild,r=Te(t.children);return{box:t,content:r.find((function(e){return e.classList.contains(pe)})),arrow:r.find((function(e){return e.classList.contains(de)||e.classList.contains(fe)})),backdrop:r.find((function(e){return e.classList.contains(me)}))}}function Ke(e){var t=qe(),r=qe();r.className="tippy-box",r.setAttribute("data-state","hidden"),r.setAttribute("tabindex","-1");var n=qe();function a(r,n){var a=Xe(t),s=a.box,i=a.content,l=a.arrow;n.theme?s.setAttribute("data-theme",n.theme):s.removeAttribute("data-theme"),"string"==typeof n.animation?s.setAttribute("data-animation",n.animation):s.removeAttribute("data-animation"),n.inertia?s.setAttribute("data-inertia",""):s.removeAttribute("data-inertia"),s.style.maxWidth="number"==typeof n.maxWidth?n.maxWidth+"px":n.maxWidth,n.role?s.setAttribute("role",n.role):s.removeAttribute("role"),r.content===n.content&&r.allowHTML===n.allowHTML||Ye(i,e.props),n.arrow?l?r.arrow!==n.arrow&&(s.removeChild(l),s.appendChild(We(n.arrow))):s.appendChild(We(n.arrow)):l&&s.removeChild(l)}return n.className=pe,n.setAttribute("data-state","hidden"),Ye(n,e.props),t.appendChild(r),r.appendChild(n),a(e.props,e.props),{popper:t,onUpdate:a}}Ke.$$tippy=!0;var Je=1,Ze=[],Qe=[];function et(e,t){var r,n,a,s,i,l,o,c,u=Ge(e,Object.assign({},Ve,je(Se(t)))),p=!1,m=!1,d=!1,f=!1,h=[],g=we(W,u.interactiveDebounce),x=Je++,b=(c=u.plugins).filter((function(e,t){return c.indexOf(e)===t})),v={id:x,reference:e,popper:qe(),popperInstance:null,props:u,state:{isEnabled:!0,isVisible:!1,isDestroyed:!1,isMounted:!1,isShown:!1},plugins:b,clearDelayTimeouts:function(){clearTimeout(r),clearTimeout(n),cancelAnimationFrame(a)},setProps:function(t){if(!v.state.isDestroyed){R("onBeforeUpdate",[v,t]),G();var r=v.props,n=Ge(e,Object.assign({},r,Se(t),{ignoreAttributes:!0}));v.props=n,j(),r.interactiveDebounce!==n.interactiveDebounce&&(_(),g=we(W,n.interactiveDebounce)),r.triggerTarget&&!n.triggerTarget?Ee(r.triggerTarget).forEach((function(e){e.removeAttribute("aria-expanded")})):n.triggerTarget&&e.removeAttribute("aria-expanded"),B(),L(),E&&E(r,n),v.popperInstance&&(J(),Q().forEach((function(e){requestAnimationFrame(e._tippy.popperInstance.forceUpdate)}))),R("onAfterUpdate",[v,t])}},setContent:function(e){v.setProps({content:e})},show:function(){var e=v.state.isVisible,t=v.state.isDestroyed,r=!v.state.isEnabled,n=_e.isTouch&&!v.props.touch,a=xe(v.props.duration,0,Ve.duration);if(!(e||t||r||n||C().hasAttribute("disabled")||(R("onShow",[v],!1),!1===v.props.onShow(v)))){if(v.state.isVisible=!0,q()&&(y.style.visibility="visible"),L(),$(),v.state.isMounted||(y.style.transition="none"),q()){var s=O();Ne([s.box,s.content],0)}var i,o,c;l=function(){var e;if(v.state.isVisible&&!f){if(f=!0,y.offsetHeight,y.style.transition=v.props.moveTransition,q()&&v.props.animation){var t=O(),r=t.box,n=t.content;Ne([r,n],a),Le([r,n],"visible")}I(),B(),Ae(Qe,v),null==(e=v.popperInstance)||e.forceUpdate(),R("onMount",[v]),v.props.animation&&q()&&function(e,t){V(e,(function(){v.state.isShown=!0,R("onShown",[v])}))}(a)}},o=v.props.appendTo,c=C(),(i=v.props.interactive&&o===ge||"parent"===o?c.parentNode:ve(o,[c])).contains(y)||i.appendChild(y),v.state.isMounted=!0,J()}},hide:function(){var e=!v.state.isVisible,t=v.state.isDestroyed,r=!v.state.isEnabled,n=xe(v.props.duration,1,Ve.duration);if(!(e||t||r)&&(R("onHide",[v],!1),!1!==v.props.onHide(v))){if(v.state.isVisible=!1,v.state.isShown=!1,f=!1,p=!1,q()&&(y.style.visibility="hidden"),_(),F(),L(!0),q()){var a=O(),s=a.box,i=a.content;v.props.animation&&(Ne([s,i],n),Le([s,i],"hidden"))}I(),B(),v.props.animation?q()&&function(e,t){V(e,(function(){!v.state.isVisible&&y.parentNode&&y.parentNode.contains(y)&&t()}))}(n,v.unmount):v.unmount()}},hideWithInteractivity:function(e){k().addEventListener("mousemove",g),Ae(Ze,g),g(e)},enable:function(){v.state.isEnabled=!0},disable:function(){v.hide(),v.state.isEnabled=!1},unmount:function(){v.state.isVisible&&v.hide(),v.state.isMounted&&(Z(),Q().forEach((function(e){e._tippy.unmount()})),y.parentNode&&y.parentNode.removeChild(y),Qe=Qe.filter((function(e){return e!==v})),v.state.isMounted=!1,R("onHidden",[v]))},destroy:function(){v.state.isDestroyed||(v.clearDelayTimeouts(),v.unmount(),G(),delete e._tippy,v.state.isDestroyed=!0,R("onDestroy",[v]))}};if(!u.render)return v;var w=u.render(v),y=w.popper,E=w.onUpdate;y.setAttribute("data-tippy-root",""),y.id="tippy-"+v.id,v.popper=y,e._tippy=v,y._tippy=v;var A=b.map((function(e){return e.fn(v)})),D=e.hasAttribute("aria-expanded");return j(),B(),L(),R("onCreate",[v]),u.showOnCreate&&ee(),y.addEventListener("mouseenter",(function(){v.props.interactive&&v.state.isVisible&&v.clearDelayTimeouts()})),y.addEventListener("mouseleave",(function(){v.props.interactive&&v.props.trigger.indexOf("mouseenter")>=0&&k().addEventListener("mousemove",g)})),v;function T(){var e=v.props.touch;return Array.isArray(e)?e:[e,0]}function S(){return"hold"===T()[0]}function q(){var e;return!(null==(e=v.props.render)||!e.$$tippy)}function C(){return o||e}function k(){var e=C().parentNode;return e?Re(e):document}function O(){return Xe(y)}function N(e){return v.state.isMounted&&!v.state.isVisible||_e.isTouch||s&&"focus"===s.type?0:xe(v.props.delay,e?0:1,Ve.delay)}function L(e){void 0===e&&(e=!1),y.style.pointerEvents=v.props.interactive&&!e?"":"none",y.style.zIndex=""+v.props.zIndex}function R(e,t,r){var n;void 0===r&&(r=!0),A.forEach((function(r){r[e]&&r[e].apply(r,t)})),r&&(n=v.props)[e].apply(n,t)}function I(){var t=v.props.aria;if(t.content){var r="aria-"+t.content,n=y.id;Ee(v.props.triggerTarget||e).forEach((function(e){var t=e.getAttribute(r);if(v.state.isVisible)e.setAttribute(r,t?t+" "+n:n);else{var a=t&&t.replace(n,"").trim();a?e.setAttribute(r,a):e.removeAttribute(r)}}))}}function B(){!D&&v.props.aria.expanded&&Ee(v.props.triggerTarget||e).forEach((function(e){v.props.interactive?e.setAttribute("aria-expanded",v.state.isVisible&&e===C()?"true":"false"):e.removeAttribute("aria-expanded")}))}function _(){k().removeEventListener("mousemove",g),Ze=Ze.filter((function(e){return e!==g}))}function U(t){if(!_e.isTouch||!d&&"mousedown"!==t.type){var r=t.composedPath&&t.composedPath()[0]||t.target;if(!v.props.interactive||!Be(y,r)){if(Ee(v.props.triggerTarget||e).some((function(e){return Be(e,r)}))){if(_e.isTouch)return;if(v.state.isVisible&&v.props.trigger.indexOf("click")>=0)return}else R("onClickOutside",[v,t]);!0===v.props.hideOnClick&&(v.clearDelayTimeouts(),v.hide(),m=!0,setTimeout((function(){m=!1})),v.state.isMounted||F())}}}function P(){d=!0}function M(){d=!1}function $(){var e=k();e.addEventListener("mousedown",U,!0),e.addEventListener("touchend",U,he),e.addEventListener("touchstart",M,he),e.addEventListener("touchmove",P,he)}function F(){var e=k();e.removeEventListener("mousedown",U,!0),e.removeEventListener("touchend",U,he),e.removeEventListener("touchstart",M,he),e.removeEventListener("touchmove",P,he)}function V(e,t){var r=O().box;function n(e){e.target===r&&(Ie(r,"remove",n),t())}if(0===e)return t();Ie(r,"remove",i),Ie(r,"add",n),i=n}function H(t,r,n){void 0===n&&(n=!1),Ee(v.props.triggerTarget||e).forEach((function(e){e.addEventListener(t,r,n),h.push({node:e,eventType:t,handler:r,options:n})}))}function j(){var e;S()&&(H("touchstart",z,{passive:!0}),H("touchend",Y,{passive:!0})),(e=v.props.trigger,e.split(/\s+/).filter(Boolean)).forEach((function(e){if("manual"!==e)switch(H(e,z),e){case"mouseenter":H("mouseleave",Y);break;case"focus":H(Fe?"focusout":"blur",X);break;case"focusin":H("focusout",X)}}))}function G(){h.forEach((function(e){var t=e.node,r=e.eventType,n=e.handler,a=e.options;t.removeEventListener(r,n,a)})),h=[]}function z(e){var t,r=!1;if(v.state.isEnabled&&!K(e)&&!m){var n="focus"===(null==(t=s)?void 0:t.type);s=e,o=e.currentTarget,B(),!v.state.isVisible&&ke(e)&&Ze.forEach((function(t){return t(e)})),"click"===e.type&&(v.props.trigger.indexOf("mouseenter")<0||p)&&!1!==v.props.hideOnClick&&v.state.isVisible?r=!0:ee(e),"click"===e.type&&(p=!r),r&&!n&&te(e)}}function W(e){var t=e.target,r=C().contains(t)||y.contains(t);if("mousemove"!==e.type||!r){var n=Q().concat(y).map((function(e){var t,r=null==(t=e._tippy.popperInstance)?void 0:t.state;return r?{popperRect:e.getBoundingClientRect(),popperState:r,props:u}:null})).filter(Boolean);(function(e,t){var r=t.clientX,n=t.clientY;return e.every((function(e){var t=e.popperRect,a=e.popperState,s=e.props.interactiveBorder,i=De(a.placement),l=a.modifiersData.offset;if(!l)return!0;var o="bottom"===i?l.top.y:0,c="top"===i?l.bottom.y:0,u="right"===i?l.left.x:0,p="left"===i?l.right.x:0,m=t.top-n+o>s,d=n-t.bottom-c>s,f=t.left-r+u>s,h=r-t.right-p>s;return m||d||f||h}))})(n,e)&&(_(),te(e))}}function Y(e){K(e)||v.props.trigger.indexOf("click")>=0&&p||(v.props.interactive?v.hideWithInteractivity(e):te(e))}function X(e){v.props.trigger.indexOf("focusin")<0&&e.target!==C()||v.props.interactive&&e.relatedTarget&&y.contains(e.relatedTarget)||te(e)}function K(e){return!!_e.isTouch&&S()!==e.type.indexOf("touch")>=0}function J(){Z();var t=v.props,r=t.popperOptions,n=t.placement,a=t.offset,s=t.getReferenceClientRect,i=t.moveTransition,o=q()?Xe(y).arrow:null,c=s?{getBoundingClientRect:s,contextElement:s.contextElement||C()}:e,u=[{name:"offset",options:{offset:a}},{name:"preventOverflow",options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:"flip",options:{padding:5}},{name:"computeStyles",options:{adaptive:!i}},{name:"$$tippy",enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:function(e){var t=e.state;if(q()){var r=O().box;["placement","reference-hidden","escaped"].forEach((function(e){"placement"===e?r.setAttribute("data-placement",t.placement):t.attributes.popper["data-popper-"+e]?r.setAttribute("data-"+e,""):r.removeAttribute("data-"+e)})),t.attributes.popper={}}}}];q()&&o&&u.push({name:"arrow",options:{element:o,padding:3}}),u.push.apply(u,(null==r?void 0:r.modifiers)||[]),v.popperInstance=ce(c,y,Object.assign({},r,{placement:n,onFirstUpdate:l,modifiers:u}))}function Z(){v.popperInstance&&(v.popperInstance.destroy(),v.popperInstance=null)}function Q(){return Te(y.querySelectorAll("[data-tippy-root]"))}function ee(e){v.clearDelayTimeouts(),e&&R("onTrigger",[v,e]),$();var t=N(!0),n=T(),a=n[0],s=n[1];_e.isTouch&&"hold"===a&&s&&(t=s),t?r=setTimeout((function(){v.show()}),t):v.show()}function te(e){if(v.clearDelayTimeouts(),R("onUntrigger",[v,e]),v.state.isVisible){if(!(v.props.trigger.indexOf("mouseenter")>=0&&v.props.trigger.indexOf("click")>=0&&["mouseleave","mousemove"].indexOf(e.type)>=0&&p)){var t=N(!1);t?n=setTimeout((function(){v.state.isVisible&&v.hide()}),t):a=requestAnimationFrame((function(){v.hide()}))}}else F()}}function tt(e,t){void 0===t&&(t={});var r=Ve.plugins.concat(t.plugins||[]);document.addEventListener("touchstart",Pe,he),window.addEventListener("blur",$e);var n,a=Object.assign({},t,{plugins:r}),s=(n=e,Ce(n)?[n]:function(e){return be(e,"NodeList")}(n)?Te(n):Array.isArray(n)?n:Te(document.querySelectorAll(n))).reduce((function(e,t){var r=t&&et(t,a);return r&&e.push(r),e}),[]);return Ce(e)?s[0]:s}tt.defaultProps=Ve,tt.setDefaultProps=function(e){Object.keys(e).forEach((function(t){Ve[t]=e[t]}))},tt.currentInput=_e;var rt=function(e){var t=void 0===e?{}:e,r=t.exclude,n=t.duration;Qe.forEach((function(e){var t=!1;if(r&&(t=Oe(r)?e.reference===r:e.popper===r.popper),!t){var a=e.props.duration;e.setProps({duration:n}),e.hide(),e.state.isDestroyed||e.setProps({duration:a})}}))},nt=Object.assign({},X,{effect:function(e){var t=e.state,r={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};Object.assign(t.elements.popper.style,r.popper),t.styles=r,t.elements.arrow&&Object.assign(t.elements.arrow.style,r.arrow)}}),at=function(e,t){var r;void 0===t&&(t={});var n,a=e,s=[],i=[],l=t.overrides,o=[],c=!1;function u(){i=a.map((function(e){return Ee(e.props.triggerTarget||e.reference)})).reduce((function(e,t){return e.concat(t)}),[])}function p(){s=a.map((function(e){return e.reference}))}function m(e){a.forEach((function(t){e?t.enable():t.disable()}))}function d(e){return a.map((function(t){var r=t.setProps;return t.setProps=function(a){r(a),t.reference===n&&e.setProps(a)},function(){t.setProps=r}}))}function f(e,t){var r=i.indexOf(t);if(t!==n){n=t;var o=(l||[]).concat("content").reduce((function(e,t){return e[t]=a[r].props[t],e}),{});e.setProps(Object.assign({},o,{getReferenceClientRect:"function"==typeof o.getReferenceClientRect?o.getReferenceClientRect:function(){var e;return null==(e=s[r])?void 0:e.getBoundingClientRect()}}))}}m(!1),p(),u();var h={fn:function(){return{onDestroy:function(){m(!0)},onHidden:function(){n=null},onClickOutside:function(e){e.props.showOnCreate&&!c&&(c=!0,n=null)},onShow:function(e){e.props.showOnCreate&&!c&&(c=!0,f(e,s[0]))},onTrigger:function(e,t){f(e,t.currentTarget)}}}},g=tt(qe(),Object.assign({},ye(t,["overrides"]),{plugins:[h].concat(t.plugins||[]),triggerTarget:i,popperOptions:Object.assign({},t.popperOptions,{modifiers:[].concat((null==(r=t.popperOptions)?void 0:r.modifiers)||[],[nt])})})),x=g.show;g.show=function(e){if(x(),!n&&null==e)return f(g,s[0]);if(!n||null!=e){if("number"==typeof e)return s[e]&&f(g,s[e]);if(a.indexOf(e)>=0){var t=e.reference;return f(g,t)}return s.indexOf(e)>=0?f(g,e):void 0}},g.showNext=function(){var e=s[0];if(!n)return g.show(0);var t=s.indexOf(n);g.show(s[t+1]||e)},g.showPrevious=function(){var e=s[s.length-1];if(!n)return g.show(e);var t=s.indexOf(n),r=s[t-1]||e;g.show(r)};var b=g.setProps;return g.setProps=function(e){l=e.overrides||l,b(e)},g.setInstances=function(e){m(!0),o.forEach((function(e){return e()})),a=e,m(!1),p(),u(),o=d(g),g.setProps({triggerTarget:i})},o=d(g),g},st={mouseover:"mouseenter",focusin:"focus",click:"click"};function it(e,t){var r=[],n=[],a=!1,s=t.target,i=ye(t,["target"]),l=Object.assign({},i,{trigger:"manual",touch:!1}),o=Object.assign({touch:Ve.touch},i,{showOnCreate:!0}),c=tt(e,l);function u(e){if(e.target&&!a){var r=e.target.closest(s);if(r){var i=r.getAttribute("data-tippy-trigger")||t.trigger||Ve.trigger;if(!r._tippy&&!("touchstart"===e.type&&"boolean"==typeof o.touch||"touchstart"!==e.type&&i.indexOf(st[e.type])<0)){var l=tt(r,o);l&&(n=n.concat(l))}}}}function p(e,t,n,a){void 0===a&&(a=!1),e.addEventListener(t,n,a),r.push({node:e,eventType:t,handler:n,options:a})}return Ee(c).forEach((function(e){var t=e.destroy,s=e.enable,i=e.disable;e.destroy=function(e){void 0===e&&(e=!0),e&&n.forEach((function(e){e.destroy()})),n=[],r.forEach((function(e){var t=e.node,r=e.eventType,n=e.handler,a=e.options;t.removeEventListener(r,n,a)})),r=[],t()},e.enable=function(){s(),n.forEach((function(e){return e.enable()})),a=!1},e.disable=function(){i(),n.forEach((function(e){return e.disable()})),a=!0},function(e){var t=e.reference;p(t,"touchstart",u,he),p(t,"mouseover",u),p(t,"focusin",u),p(t,"click",u)}(e)})),c}var lt={name:"animateFill",defaultValue:!1,fn:function(e){var t;if(null==(t=e.props.render)||!t.$$tippy)return{};var r=Xe(e.popper),n=r.box,a=r.content,s=e.props.animateFill?function(){var e=qe();return e.className=me,Le([e],"hidden"),e}():null;return{onCreate:function(){s&&(n.insertBefore(s,n.firstElementChild),n.setAttribute("data-animatefill",""),n.style.overflow="hidden",e.setProps({arrow:!1,animation:"shift-away"}))},onMount:function(){if(s){var e=n.style.transitionDuration,t=Number(e.replace("ms",""));a.style.transitionDelay=Math.round(t/10)+"ms",s.style.transitionDuration=e,Le([s],"visible")}},onShow:function(){s&&(s.style.transitionDuration="0ms")},onHide:function(){s&&Le([s],"hidden")}}}},ot={clientX:0,clientY:0},ct=[];function ut(e){var t=e.clientX,r=e.clientY;ot={clientX:t,clientY:r}}var pt={name:"followCursor",defaultValue:!1,fn:function(e){var t=e.reference,r=Re(e.props.triggerTarget||t),n=!1,a=!1,s=!0,i=e.props;function l(){return"initial"===e.props.followCursor&&e.state.isVisible}function o(){r.addEventListener("mousemove",p)}function c(){r.removeEventListener("mousemove",p)}function u(){n=!0,e.setProps({getReferenceClientRect:null}),n=!1}function p(r){var n=!r.target||t.contains(r.target),a=e.props.followCursor,s=r.clientX,i=r.clientY,l=t.getBoundingClientRect(),o=s-l.left,c=i-l.top;!n&&e.props.interactive||e.setProps({getReferenceClientRect:function(){var e=t.getBoundingClientRect(),r=s,n=i;"initial"===a&&(r=e.left+o,n=e.top+c);var l="horizontal"===a?e.top:n,u="vertical"===a?e.right:r,p="horizontal"===a?e.bottom:n,m="vertical"===a?e.left:r;return{width:u-m,height:p-l,top:l,right:u,bottom:p,left:m}}})}function m(){e.props.followCursor&&(ct.push({instance:e,doc:r}),function(e){e.addEventListener("mousemove",ut)}(r))}function d(){0===(ct=ct.filter((function(t){return t.instance!==e}))).filter((function(e){return e.doc===r})).length&&function(e){e.removeEventListener("mousemove",ut)}(r)}return{onCreate:m,onDestroy:d,onBeforeUpdate:function(){i=e.props},onAfterUpdate:function(t,r){var s=r.followCursor;n||void 0!==s&&i.followCursor!==s&&(d(),s?(m(),!e.state.isMounted||a||l()||o()):(c(),u()))},onMount:function(){e.props.followCursor&&!a&&(s&&(p(ot),s=!1),l()||o())},onTrigger:function(e,t){ke(t)&&(ot={clientX:t.clientX,clientY:t.clientY}),a="focus"===t.type},onHidden:function(){e.props.followCursor&&(u(),c(),s=!0)}}}},mt={name:"inlinePositioning",defaultValue:!1,fn:function(e){var t,r=e.reference,n=-1,a=!1,s=[],i={name:"tippyInlinePositioning",enabled:!0,phase:"afterWrite",fn:function(a){var i=a.state;e.props.inlinePositioning&&(-1!==s.indexOf(i.placement)&&(s=[]),t!==i.placement&&-1===s.indexOf(i.placement)&&(s.push(i.placement),e.setProps({getReferenceClientRect:function(){return function(e){return function(e,t,r,n){if(r.length<2||null===e)return t;if(2===r.length&&n>=0&&r[0].left>r[1].right)return r[n]||t;switch(e){case"top":case"bottom":var a=r[0],s=r[r.length-1],i="top"===e,l=a.top,o=s.bottom,c=i?a.left:s.left,u=i?a.right:s.right;return{top:l,bottom:o,left:c,right:u,width:u-c,height:o-l};case"left":case"right":var p=Math.min.apply(Math,r.map((function(e){return e.left}))),m=Math.max.apply(Math,r.map((function(e){return e.right}))),d=r.filter((function(t){return"left"===e?t.left===p:t.right===m})),f=d[0].top,h=d[d.length-1].bottom;return{top:f,bottom:h,left:p,right:m,width:m-p,height:h-f};default:return t}}(De(e),r.getBoundingClientRect(),Te(r.getClientRects()),n)}(i.placement)}})),t=i.placement)}};function l(){var t;a||(t=function(e,t){var r;return{popperOptions:Object.assign({},e.popperOptions,{modifiers:[].concat(((null==(r=e.popperOptions)?void 0:r.modifiers)||[]).filter((function(e){return e.name!==t.name})),[t])})}}(e.props,i),a=!0,e.setProps(t),a=!1)}return{onCreate:l,onAfterUpdate:l,onTrigger:function(t,r){if(ke(r)){var a=Te(e.reference.getClientRects()),s=a.find((function(e){return e.left-2<=r.clientX&&e.right+2>=r.clientX&&e.top-2<=r.clientY&&e.bottom+2>=r.clientY})),i=a.indexOf(s);n=i>-1?i:n}},onHidden:function(){n=-1}}}},dt={name:"sticky",defaultValue:!1,fn:function(e){var t=e.reference,r=e.popper;function n(t){return!0===e.props.sticky||e.props.sticky===t}var a=null,s=null;function i(){var l=n("reference")?(e.popperInstance?e.popperInstance.state.elements.reference:t).getBoundingClientRect():null,o=n("popper")?r.getBoundingClientRect():null;(l&&ft(a,l)||o&&ft(s,o))&&e.popperInstance&&e.popperInstance.update(),a=l,s=o,e.state.isMounted&&requestAnimationFrame(i)}return{onMount:function(){e.props.sticky&&i()}}}};function ft(e,t){return!e||!t||e.top!==t.top||e.right!==t.right||e.bottom!==t.bottom||e.left!==t.left}tt.setDefaultProps({render:Ke});const ht=tt}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var s=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.loaded=!0,s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};r.r(e),r.d(e,{BluebellActions:()=>i,BluebellGrammarModel:()=>d,LANGUAGE_DEF:()=>c,LANGUAGE_ID:()=>o,THEME_DEF:()=>p,THEME_ID:()=>u,installActions:()=>l,registerLanguage:()=>m});var t=r(492);const n=new XSLTProcessor;function a(e,t,r,n,a){const s=e.getSelection(),i=e.getModel().getValueInRange(s),l={identifier:r,range:s,text:n+i+a},o=0===i.length?s.setEndPosition(s.startLineNumber,s.startColumn+n.length).setStartPosition(s.startLineNumber,s.startColumn+n.length):s.setEndPosition(s.endLineNumber,s.endColumn+n.length+a.length);e.executeEdits(t,[l],[o])}function s(e,t){let r=e.getModel().getLineFirstNonWhitespaceColumn(t.startLineNumber)-1;return r<0&&(r=t.startColumn-1),r}n.importStylesheet((new DOMParser).parseFromString('\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"\n  xmlns:html="http://www.w3.org/1999/xhtml"\n  xmlns="http://docs.oasis-open.org/legaldocml/ns/akn/3.0"\n  exclude-result-prefixes="html">\n\n  <xsl:output method="xml" />\n\n  \x3c!-- ignore these elements --\x3e\n  <xsl:template match="html:head | html:style | html:script | html:link" />\n\n  \x3c!-- tables --\x3e\n\n  <xsl:template match="html:table">\n    <table>\n      <xsl:apply-templates select="@data-eid | //html:tr" />\n    </table>\n  </xsl:template>\n\n  <xsl:template match="html:tr">\n    <tr>\n      <xsl:apply-templates select="node()" />\n    </tr>\n  </xsl:template>\n\n  <xsl:template match="html:td | html:th">\n\t\t<xsl:element name="{name(.)}">\n      <xsl:apply-templates select="@colspan | @rowspan | @style | @class" />\n\n      <p>\n        <xsl:for-each select="node()">\n          <xsl:choose>\n            <xsl:when test="name(.) = \'p\'">\n              \x3c!-- ignore p (we already have one) and do children --\x3e\n              <xsl:apply-templates select="node()"/>\n            </xsl:when>\n\n            <xsl:otherwise>\n              <xsl:apply-templates select="."/>\n            </xsl:otherwise>\n          </xsl:choose>\n        </xsl:for-each>\n      </p>\n\n    </xsl:element>\n  </xsl:template>\n\n  \x3c!-- elements --\x3e\n  \n  <xsl:template match="html:div">\n    <p>\n      <xsl:apply-templates />\n    </p>\n  </xsl:template>\n\n  <xsl:template match="html:p">\n    <p>\n      <xsl:apply-templates />\n    </p>\n  </xsl:template>\n\n  <xsl:template match="html:b | html:br | html:i | html:sup | html:sub | html:u | html:ul | html:li">\n    <xsl:element name="{name(.)}">\n      <xsl:apply-templates />\n    </xsl:element>\n  </xsl:template>\n\n  <xsl:template match="html:a">\n    <ref>\n      <xsl:attribute name="href"><xsl:value-of select="@data-href" /></xsl:attribute>\n      <xsl:apply-templates />\n    </ref>\n  </xsl:template>\n\n  <xsl:template match="html:img">\n    <img>\n      <xsl:attribute name="src"><xsl:value-of select="@data-src" /></xsl:attribute>\n    </img>\n  </xsl:template>\n\n  <xsl:template match="html:span[@class=\'akn-remark\']">\n    <remark status="editorial">\n      <xsl:apply-templates />\n    </remark>\n  </xsl:template>\n\n  \x3c!-- attributes --\x3e\n\n  <xsl:template match="@colspan | @rowspan | @style | @class">\n    <xsl:if test="normalize-space(.) != \'\'">\n      <xsl:attribute name="{name(.)}"><xsl:value-of select="." /></xsl:attribute>\n    </xsl:if>\n  </xsl:template>\n\n  \x3c!-- map data-id to id --\x3e\n  <xsl:template match="@data-eid">\n    <xsl:attribute name="eId"><xsl:value-of select="." /></xsl:attribute>\n  </xsl:template>\n\n  \x3c!-- text --\x3e\n\n  <xsl:template match="text()">\n    <xsl:value-of select="."/>\n  </xsl:template>\n\n</xsl:stylesheet>',"text/xml")),r(482),r(581);class i{constructor(){this.editSource="bluebell"}installActions(e){const t=window.monaco;e.addAction({id:"format.bold",label:"Bold",keybindings:[t.KeyMod.CtrlCmd|t.KeyCode.KeyB],run:this.formatBold.bind(this)}),e.addAction({id:"format.italics",label:"Italic",keybindings:[t.KeyMod.CtrlCmd|t.KeyCode.KeyI],run:this.formatItalic.bind(this)}),e.addAction({id:"format.underline",label:"Underline",keybindings:[t.KeyMod.CtrlCmd|t.KeyCode.KeyU],run:this.formatUnderline.bind(this)}),e.addAction({id:"format.superscript",label:"Superscript",run:this.formatSuperscript.bind(this)}),e.addAction({id:"format.subscript",label:"Subscript",run:this.formatSubscript.bind(this)}),e.addAction({id:"format.remark",label:"Format Remark",keybindings:[t.KeyMod.CtrlCmd|t.KeyMod.Shift|t.KeyCode.Digit8],run:this.formatRemark.bind(this)}),e.addAction({id:"insert.footnote",label:"Insert footnote",keybindings:[t.KeyMod.CtrlCmd|t.KeyMod.Shift|t.KeyCode.Digit6],run:this.insertFootnote.bind(this)}),e.addAction({id:"insert.table",label:"Insert table",run:this.insertTable.bind(this)}),e.addAction({id:"insert.schedule",label:"Insert Schedule",run:this.insertSchedule.bind(this)})}formatBold(e){e.pushUndoStop(),this.toggleWrapSelection(e,this.editSource,"format.bold","**"),e.pushUndoStop()}formatItalic(e){e.pushUndoStop(),this.toggleWrapSelection(e,this.editSource,"format.italics","//"),e.pushUndoStop()}formatUnderline(e){e.pushUndoStop(),this.toggleWrapSelection(e,this.editSource,"format.underline","__"),e.pushUndoStop()}formatSuperscript(e){e.pushUndoStop(),a(e,this.editSource,"format.superscript","{{^","}}"),e.pushUndoStop()}formatSubscript(e){e.pushUndoStop(),a(e,this.editSource,"format.subscript","{{_","}}"),e.pushUndoStop()}formatRemark(e){e.pushUndoStop(),a(e,this.editSource,"format.remark","{{*[","]}}"),e.pushUndoStop()}insertFootnote(e){const t=e.getSelection(),r=e.getModel(),n=r.getValueInRange(t),a={identifier:"insert.footnote",range:t,text:"{{^{{FOOTNOTE 1}}}}"};e.pushUndoStop(),e.executeEdits(this.editSource,[a]);const i=" ".repeat(s(e,t)),l={identifier:"insert.footnote",range:{startColumn:r.getLineLength(t.endLineNumber)+1,startLineNumber:t.endLineNumber},text:"\n\n"+i+"FOOTNOTE 1\n"+i+"  "+n};l.range.endColumn=l.range.startColumn,l.range.endLineNumber=l.range.startLineNumber;const o=new window.monaco.Selection(l.range.startLineNumber+3,i.length+3,l.range.startLineNumber+3,i.length+3+n.length);e.executeEdits(this.editSource,[l],[o]),e.pushUndoStop()}insertTable(e){const t=e.getSelection(),r=" ".repeat(s(e,t));e.pushUndoStop(),e.executeEdits(this.editSource,[{identifier:"insert.table",range:t,text:"TABLE\n\n"+r+" TR\n\n"+r+"   TH\n\n"+r+"     Heading 1\n\n"+r+"   TH\n\n"+r+"     Heading 2\n\n"+r+" TR\n\n"+r+"   TC\n\n"+r+"     Content 1\n\n"+r+"   TC\n\n"+r+"     Content 2"}]),e.pushUndoStop()}insertSchedule(e){const t=e.getSelection(),r=s(e,t),n=" ".repeat(r),a=t.setEndPosition(t.startLineNumber+1,r+10+24).setStartPosition(t.startLineNumber+1,r+10);e.pushUndoStop(),e.executeEdits(this.editSource,[{identifier:"insert.schedule",range:t,text:`\n${n}SCHEDULE <Optional schedule name>\n${n}  SUBHEADING <Optional schedule title>\n\n`}],[a]),e.pushUndoStop()}toggleWrapSelection(e,t,r,n){const a=e.getSelection(),s=e.getModel();let i=null;for(let l=a.startLineNumber;l<=a.endLineNumber;l++){const o=s.getLineContent(l);let c=new monaco.Range(l,l===a.startLineNumber?a.startColumn:s.getLineFirstNonWhitespaceColumn(l),l,l===a.endLineNumber?a.endColumn:o.length+1);c=this.toggleWrapSelectionOnLine(e,t,r,n,c),i=i?i.plusRange(c):c}e.setSelection(i)}toggleWrapSelectionOnLine(e,t,r,n,a){const s=e.getModel().getLineContent(a.startLineNumber),i=this.getMarkedInlineRanges(s,n,a.startLineNumber);if(a=this.normaliseRange(a,i,n.length,n.length),i.some((e=>a.equalsRange(e))))return this.unwrapRange(a,e,t,r,n,n);if(0===i.length||i.every((e=>!monaco.Range.areIntersecting(a,e))))return this.wrapRange(a,e,t,r,n,n);if(i.some((e=>e.containsRange(a))))return this.wrapRange(a,e,t,r,n,n);let l=null;for(let s of i.reverse())monaco.Range.areIntersectingOrTouching(s,a)&&(s=this.unwrapRange(s,e,t,r,n,n),l?(l=l.plusRange(s),l=l.setEndPosition(l.endLineNumber,l.endColumn-2*n.length)):l=s);return this.wrapRange(l,e,t,r,n,n)}normaliseRange(e,t,r,n){for(let a of t){if(e.isEmpty()&&a.containsRange(e))return a;let t=e.startColumn-a.startColumn;t>0&&t<=r&&(e=e.setStartPosition(e.startLineNumber,a.startColumn)),t=a.endColumn-e.endColumn,t>0&&t<=n&&(e=e.setEndPosition(e.endLineNumber,a.endColumn))}return e}getMarkedInlineRanges(e,t,r){return this.getMarkedInlineIndexes(e,t).map((([e,t])=>new monaco.Range(r,e+1,r,t+2)))}getMarkedInlineIndexes(e,t){const r=[],n=[];let a=e.indexOf(t);for(;a>-1;)n.push(a),a=e.indexOf(t,a+t.length);for(let e=0;e<n.length-1;e+=2)r.push([n[e],n[e+1]+t.length-1]);return r}unwrapRange(e,t,r,n,a,s){const i={identifier:n,range:e,text:t.getModel().getValueInRange(e).slice(a.length,-s.length)},l=new monaco.Selection(e.startLineNumber,e.startColumn,e.endLineNumber,e.endColumn-a.length-s.length);return t.executeEdits(r,[i],[l]),l}wrapRange(e,t,r,n,a,s){const i=t.getModel().getValueInRange(e),l={identifier:n,range:e,text:a+i+s};let o;return o=0===i.length?new monaco.Selection(e.startLineNumber,e.startColumn+a.length,e.startLineNumber,e.startColumn+a.length):new monaco.Selection(e.startLineNumber,e.startColumn,e.endLineNumber,e.startColumn+a.length+i.length+s.length),t.executeEdits(r,[l],[o]),o}}function l(e){(new i).installActions(e)}const o="bluebell",c={defaultToken:"",hier:new RegExp(""+/ALINEA|ART|ARTICLE|BOOK|CHAP|CHAPTER|CLAUSE|DIVISION|INDENT|ITEM|LEVEL|LIST|PARA|PARAGRAPH|PART|POINT|PROVISO|RULE|SEC|SECTION|SUBCHAP|SUBCHAPTER|SUBCLAUSE|SUBDIVISION|SUBLIST|SUBPARA|SUBPARAGRAPH|SUBPART|SUBRULE|SUBSEC|SUBSECTION|SUBTITLE|TITLE|TOME|TRANSITIONAL/.source+/ADDRESS|ADJOURNMENT|ADMINISTRATIONOFOATH|COMMUNICATION|DEBATESECTION|DECLARATIONOFVOTE|MINISTERIALSTATEMENTS|NATIONALINTEREST|NOTICESOFMOTION|ORALSTATEMENTS|PAPERS|PERSONALSTATEMENTS|PETITIONS|POINTOFORDER|PRAYERS|PROCEDURALMOTIONS|QUESTIONS|RESOLUTIONS|ROLLCALL|WRITTENSTATEMENTS|SPEECHGROUP|SPEECH|QUESTION|ANSWER/.source),blocks:/QUOTE|ITEMS|BLOCKLIST|BULLETS/,markers:/PREFACE|PREAMBLE|INTRODUCTION|BACKGROUND|ARGUMENTS|REMEDIES|MOTIVATION|DECISION|CONCLUSIONS|BODY/,headings:/LONGTITLE|CROSSHEADING|SUBHEADING|FROM|SCENE|NARRATIVE|SUMMARY/,classes:/\.[^. {}]+/,attrs:/{(?:[^} ]+\s+[^} ]+)*}/,inlines:/abbr|def|em|inline|term|\^|_|>|\+|-/,tables:/TABLE|TR|TH|TC/,tokenizer:{root:[[/^\s*@markers\s*$/,"keyword.marker"],[/^(\s*@blocks)(@classes*)(@attrs?)(\s*)$/,["keyword.marker","string","number","white"]],[/^(\s*)(@headings)(\s.*)$/,["white","keyword.heading","string"]],[/^(\s*)(FOOTNOTE)(\s.+)$/,["white","keyword.heading","number"]],[/\s*(ATTACHMENT|APPENDIX|SCHEDULE|ANNEXURE)\b/,"keyword.attachment"],[/^\s*@hier\s*$/,"keyword.hier"],[/^(\s*)(@hier)(\s+-\s+)(.*$)/,["white","keyword.hier","delimiter","string"]],[/^(\s*)(@hier)(\s+.+)(-)(\s+.*$)/,["white","keyword.hier","number","delimiter","string"]],[/^(\s*)(@hier)(\s+.+$)/,["white","keyword.hier","number"]],[/^(\s*)(P)(@classes*)(@attrs?)(\s|$)/,["white","keyword.hier","string","number","white"]],[/^(\s*)(@tables)(@classes*)(@attrs?)(\s*)$/,["white","keyword.marker","string","number","white"]],{include:"@inlines"},[/[{}[\]()]/,"@brackets"]],inlines:[[/\*\*/,"inline.bold","@bold"],[/\/\//,"inline.italic","@italic"],[/__/,"inline.underline","@underline"],[/({{\*)(@classes*)(@attrs?)/,["keyword","string",{token:"number",next:"@remark"}]],[/({{>)(@classes*)(@attrs?)([^ ]*)/,["keyword","string","number",{token:"inline.link",next:"@inline"}]],[/({{@inlines)(@classes*)(@attrs?)/,["keyword","string",{token:"number",next:"@inline"}]]],inline:[[/}}/,"keyword","@pop"],{include:"@inlines"}],remark:[[/}}/,"keyword","@pop"],{include:"@inlines"},[/./,"comment.remark"]],bold:[[/\*\*/,"inline.bold","@pop"],{include:"@inlines"},[/./,"inline.bold"]],italic:[[/\/\//,"inline.italic","@pop"],{include:"@inlines"},[/./,"inline.italic"]],underline:[[/__/,"inline.underline","@pop"],{include:"@inlines"},[/./,"inline.underline"]]}},u="bluebell",p={base:"vs",inherit:!0,rules:[{token:"string",foreground:"008000"},{token:"number",foreground:"C800A4"},{token:"inline.bold",fontStyle:"bold"},{token:"inline.italic",fontStyle:"italic"},{token:"inline.underline",fontStyle:"underline"},{token:"inline.link",fontStyle:"underline"},{token:"comment.remark",fontStyle:"italic"}],colors:{"editor.background":"#FFFFFE","editor.foreground":"#000000","editor.inactiveSelectionBackground":"#E5EBF1","editorIndentGuide.background":"#D3D3D3","editorIndentGuide.activeBackground":"#939393","editor.selectionHighlightBackground":"#ADD6FF4D"}};function m(){const e=window.monaco;e.languages.register({id:o}),e.languages.setMonarchTokensProvider(o,c),e.editor.defineTheme(u,p)}class d extends class{constructor(e,t){this.frbrUri=e,this.xslUrl=t,this.language_id=null,this.language_def={},this.theme_id=null,this.theme_def={base:"vs",inherit:!0,colors:{"editor.foreground":"#000000"}}}monacoOptions(){return this.installLanguage(),{codeLens:!1,detectIndentation:!1,foldingStrategy:"indentation",language:this.language_id,lineDecorationsWidth:0,lineNumbersMinChars:3,roundedSelection:!1,scrollBeyondLastLine:!1,showFoldingControls:"always",tabSize:2,wordWrap:"on",theme:this.theme_id,wrappingIndent:"same"}}setup(){return new Promise((e=>{fetch(new Request(this.xslUrl)).then((t=>{t.ok&&t.text().then((t=>{const r=(new DOMParser).parseFromString(t,"text/xml");this.textTransform=new XSLTProcessor,this.textTransform.importStylesheet(r),e()}))}))}))}xmlToText(e){return this.textTransform.transformToFragment(e,document).firstChild.textContent.replace(/^( *\n){2,}/gm,"\n")}setupEditor(e){this.installActions(e),this.setupPasting(e)}installLanguage(){monaco.languages.register({id:this.language_id}),monaco.languages.setMonarchTokensProvider(this.language_id,this.language_def),monaco.editor.defineTheme(this.theme_id,this.theme_def)}installActions(e){}markupRemark(e){}markupRef(e,t){}markupImage(e,t){}insertRemark(e,t){const r=e.getSelection();e.pushUndoStop(),e.executeEdits(this.language_id,[{identifier:"insert.remark",range:r,text:this.markupRemark(t)}]),e.pushUndoStop()}getImageAtCursor(e){const t=this.getMatchAtCursor(e,this.image_re);if(t)return{match:t}}insertImageAtCursor(e,t){const r=this.getImageAtCursor(e);let n,a=e.getSelection();r?(n=this.markupImage(r.title,t),a=a.setEndPosition(a.startLineNumber,r.match.index+r.match[0].length+1),a=a.setStartPosition(a.startLineNumber,r.match.index+1)):n=this.markupImage("",t),e.pushUndoStop(),e.executeEdits(this.language_id,[{identifier:"insert.image",range:a,text:n}]),e.pushUndoStop()}getMatchAtCursor(e,t){const r=e.getSelection(),n=e.getModel().getLineContent(r.startLineNumber);for(let e of n.matchAll(t))if(e.index<=r.startColumn&&r.startColumn<=e.index+e[0].length)return e}setupPasting(e){e.getDomNode().querySelector("textarea.inputarea").addEventListener("paste",(t=>this.onPaste(e,t)))}onPaste(e,t){const r=t.clipboardData;if(!r.types.includes("vscode-editor-data")&&r.types.includes("text/html")){const t=(new DOMParser).parseFromString(r.getData("text/html"),"text/html");this.onPasteHtml(e,t)}}onPasteHtml(e,r){const a=function(e){function r(e){e.getAttributeNames().forEach((t=>{"style"!==t||"td"!==e.localName&&"th"!==e.localName?("style"===t||t.indexOf(":")>-1)&&e.removeAttribute(t):function(e){let t=e.style;for(let e=t.length;e>=0;e--){let r=t[e];"width"!==r&&t.removeProperty(r)}}(e)}))}!function(e){const t=e.getElementsByTagName("*");for(let e=0;e<t.length;e++){const n=t[e];n.tagName.indexOf(":")>-1?(n.remove(),e--):r(n)}}(e);let a=function(e){let r=function(e){let r=(new XMLSerializer).serializeToString(e);return r=r.replace(/&(quot|amp|apos|lt|gt);/g,"&la_$1;"),r=(0,t.decode)(r),r=r.replace(/&la_(quot|amp|apos|lt|gt);/g,"&$1;"),r}(e);r=r.replace(/[\t\n]/g," ").replace(/\s{2,}/g," ");const n=(new DOMParser).parseFromString(r,"text/xml");if(!n)throw"Invalid XML: "+r;const a=n.getElementsByTagName("parsererror");if(a.length)throw"Invalid XML: "+r+": "+Array.from(a).map((e=>e.textContent)).join("; ");return n}(e);return a=n.transformToFragment(a.firstChild,a),a?(a.querySelectorAll("table td > p:first-child, table th > p:first-child").forEach((e=>{const t=e.firstChild;t&&t.nodeType===t.TEXT_NODE&&(t.textContent=t.textContent.replace(/^\s+/,""))})),a.querySelectorAll("table td > p:last-child, table th > p:last-child").forEach((e=>{const t=e.lastChild;t&&t.nodeType===t.TEXT_NODE&&(t.textContent=t.textContent.replace(/\s+$/,""))})),a):(console.log("htmlTransform.transformToFragment returned null, input was: ",table.outerHTML),null)}(r.body);let s;s=0===a.childElementCount?[a.textContent]:[...a.children].map((e=>this.xmlToText(e))),e.trigger(this.language_id,"undo"),e.pushUndoStop(),this.insertText(e,s.join("\n")),e.pushUndoStop()}insertText(e,t){const r=" ".repeat(s(e,e.getSelection())),n=t.split("\n");for(let e=1;e<n.length;e++)n[e]=r+n[e];e.executeEdits(this.language_id,[{identifier:"insert.text",range:e.getSelection(),text:n.join("\n")}])}}{constructor(...e){super(...e),this.language_id=o,this.theme_id=u,this.image_re=/{{IMG ([^ ]+)(\s+((?!}}).)*)?}}/g}setup(){const e=(new DOMParser).parseFromString('\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"\n                xmlns:a="http://docs.oasis-open.org/legaldocml/ns/akn/3.0"\n                exclude-result-prefixes="a">\n\n  <xsl:output method="text" indent="no" omit-xml-declaration="yes" />\n  <xsl:param name="indentStr" select="\'  \'"/>\n\n  \x3c!-- strip whitespace from most elements, but preserve whitespace in inline elements that can contain text --\x3e\n  <xsl:strip-space elements="*"/>\n  <xsl:preserve-space elements="a:a a:affectedDocument a:b a:block a:caption a:change a:concept a:courtType a:date a:def\n                                a:del a:docCommittee a:docDate a:docIntroducer a:docJurisdiction a:docNumber a:docProponent\n                                a:docPurpose a:docStage a:docStatus a:docTitle a:docType a:docketNumber a:entity a:event\n                                a:extractText a:fillIn a:from a:heading a:i a:inline a:ins a:judge a:lawyer a:legislature\n                                a:listConclusion a:listIntroduction a:location a:mmod a:mod a:mref a:narrative\n                                a:neutralCitation a:num a:object a:omissis a:opinion a:organization a:outcome a:p\n                                a:party a:person a:placeholder a:process a:quantity a:quotedText a:recordedTime a:ref\n                                a:relatedDocument a:remark a:rmod a:role a:rref a:scene a:session a:shortTitle a:signature\n                                a:span a:sub a:subheading a:summary a:sup a:term a:tocItem a:u a:vote"/>\n\n  \x3c!-- ...............................................................................\n       Functions / helper templates\n       ............................................................................... --\x3e\n\n  \x3c!-- trims whitespace from the left of a string --\x3e\n  <xsl:template name="string-ltrim">\n    <xsl:param name="text" />\n    <xsl:param name="trim" select="\'&#09;&#10;&#13; \'" />\n\n    <xsl:if test="string-length($text) &gt; 0">\n      <xsl:choose>\n        <xsl:when test="contains($trim, substring($text, 1, 1))">\n          <xsl:call-template name="string-ltrim">\n            <xsl:with-param name="text" select="substring($text, 2)" />\n            <xsl:with-param name="trim" select="$trim" />\n          </xsl:call-template>\n        </xsl:when>\n        <xsl:otherwise>\n          <xsl:value-of select="$text" />\n        </xsl:otherwise>\n      </xsl:choose>\n    </xsl:if>\n  </xsl:template>\n\n  \x3c!-- replaces "value" in "text" with "replacement" --\x3e\n  <xsl:template name="string-replace-all">\n    <xsl:param name="text" />\n    <xsl:param name="value" />\n    <xsl:param name="replacement" />\n\n    <xsl:choose>\n      <xsl:when test="$text = \'\' or $value = \'\' or not($value)">\n        <xsl:value-of select="$text" />\n      </xsl:when>\n      <xsl:when test="contains($text, $value)">\n        <xsl:value-of select="substring-before($text, $value)"/>\n        <xsl:value-of select="$replacement" />\n        <xsl:call-template name="string-replace-all">\n          <xsl:with-param name="text" select="substring-after($text, $value)" />\n          <xsl:with-param name="value" select="$value" />\n          <xsl:with-param name="replacement" select="$replacement" />\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select="$text" />\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n\n  \x3c!-- the run of the same char at the start of the string --\x3e\n  <xsl:template name="prefix-run">\n    <xsl:param name="text" />\n    <xsl:param name="ch" select="substring($text, 1, 1)" />\n\n    <xsl:if test="substring($text, 1, 1) = $ch">\n      <xsl:value-of select="$ch" />\n      <xsl:call-template name="prefix-run">\n        <xsl:with-param name="text" select="substring($text, 2)" />\n        <xsl:with-param name="ch" select="$ch" />\n      </xsl:call-template>\n    </xsl:if>\n  </xsl:template>\n\n  \x3c!-- the run of chars at the end of the string --\x3e\n  <xsl:template name="suffix-run">\n    <xsl:param name="text" />\n    <xsl:param name="ch" select="substring($text, string-length($text))" />\n\n    <xsl:if test="substring($text, string-length($text)) = $ch">\n      <xsl:value-of select="$ch" />\n      <xsl:call-template name="suffix-run">\n        <xsl:with-param name="text" select="substring($text, 1, string-length($text) - 1)" />\n        <xsl:with-param name="ch" select="$ch" />\n      </xsl:call-template>\n    </xsl:if>\n  </xsl:template>\n\n  \x3c!-- Escape inline markers with a backslash --\x3e\n  <xsl:template name="escape-inlines">\n    <xsl:param name="text" />\n\n    \x3c!-- This works from the inside out, first escaping backslash chars themselves, then escaping\n         the different types of inline markers --\x3e\n    <xsl:call-template name="string-replace-all">\n      <xsl:with-param name="text">\n        <xsl:call-template name="string-replace-all">\n          <xsl:with-param name="text">\n            <xsl:call-template name="string-replace-all">\n              <xsl:with-param name="text">\n                <xsl:call-template name="string-replace-all">\n                  <xsl:with-param name="text">\n                    <xsl:call-template name="string-replace-all">\n                      <xsl:with-param name="text">\n                        <xsl:call-template name="string-replace-all">\n                          \x3c!-- replace newlines with spaces --\x3e\n                          <xsl:with-param name="text" select="translate($text, \'&#13;&#10;\', \'  \')" />\n                          <xsl:with-param name="value"><xsl:value-of select="\'\\\'" /></xsl:with-param>\n                          <xsl:with-param name="replacement"><xsl:value-of select="\'\\\\\'" /></xsl:with-param>\n                        </xsl:call-template>\n                      </xsl:with-param>\n                      <xsl:with-param name="value"><xsl:value-of select="\'**\'" /></xsl:with-param>\n                      <xsl:with-param name="replacement"><xsl:value-of select="\'\\*\\*\'" /></xsl:with-param>\n                    </xsl:call-template>\n                  </xsl:with-param>\n                  <xsl:with-param name="value"><xsl:value-of select="\'//\'" /></xsl:with-param>\n                  <xsl:with-param name="replacement"><xsl:value-of select="\'\\/\\/\'" /></xsl:with-param>\n                </xsl:call-template>\n              </xsl:with-param>\n              <xsl:with-param name="value"><xsl:value-of select="\'__\'" /></xsl:with-param>\n              <xsl:with-param name="replacement"><xsl:value-of select="\'\\_\\_\'" /></xsl:with-param>\n            </xsl:call-template>\n          </xsl:with-param>\n          <xsl:with-param name="value"><xsl:value-of select="\'{{\'" /></xsl:with-param>\n          <xsl:with-param name="replacement"><xsl:value-of select="\'\\{\\{\'" /></xsl:with-param>\n        </xsl:call-template>\n      </xsl:with-param>\n      <xsl:with-param name="value"><xsl:value-of select="\'}}\'" /></xsl:with-param>\n      <xsl:with-param name="replacement"><xsl:value-of select="\'\\}\\}\'" /></xsl:with-param>\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- escape inlines, but also escape special chars when they are adjacent to the start or end of their inlines.\n    - stars and b tags\n    - slashes and i tags\n    - undescores and u tags\n\n    We need to determine whether we escape the run of special chars at the start (prefix) or end (suffix) of the\n    given string. Either way, we only escape the last char of the run, and only if the run is an odd length. This is\n    because the general inline-escaping code will escape the double chars, starting on the left of the string.\n\n    Examples:\n\n    <b>***     - escape prefix\n    <b>***foo  - escape prefix\n    </b>***    - escape prefix\n\n    ***<b>     - escape suffix\n    foo***</b> - escape suffix\n\n    <b>***</b> - either (but not both)\n    --\x3e\n  <xsl:template name="escape-inlines-start-end">\n    <xsl:param name="text" />\n\n    \x3c!-- the run of the same char at the start of the string --\x3e\n    <xsl:variable name="prefix-run">\n      <xsl:call-template name="prefix-run">\n        <xsl:with-param name="text" select="$text" />\n      </xsl:call-template>\n    </xsl:variable>\n\n    \x3c!-- the run of the same char at the end of the string --\x3e\n    <xsl:variable name="suffix-run">\n      <xsl:call-template name="suffix-run">\n        <xsl:with-param name="text" select="$text" />\n      </xsl:call-template>\n    </xsl:variable>\n\n    <xsl:variable name="odd-prefix" select="string-length($prefix-run) mod 2 = 1" />\n    <xsl:variable name="odd-suffix" select="string-length($suffix-run) mod 2 = 1" />\n\n    <xsl:variable name="escape-prefix" select="\n      (starts-with($text, \'*\') and $odd-prefix and (\n        (parent::a:b and not(preceding-sibling::*)) or preceding-sibling::*[1][self::a:b]\n      )) or\n      (starts-with($text, \'/\') and $odd-prefix and (\n        (parent::a:i and not(preceding-sibling::*)) or preceding-sibling::*[1][self::a:i]\n      )) or\n      (starts-with($text, \'_\') and $odd-prefix and (\n        (parent::a:u and not(preceding-sibling::*)) or preceding-sibling::*[1][self::a:u]\n      ))\n    " />\n    <xsl:variable name="escape-suffix" select="\n      (substring($text, string-length($text)) = \'*\' and $odd-suffix and (\n        (parent::a:b and not(following-sibling::*)) or following-sibling::*[1][self::a:b]\n      )) or\n      (substring($text, string-length($text)) = \'/\' and $odd-suffix and (\n        (parent::a:i and not(following-sibling::*)) or following-sibling::*[1][self::a:i]\n      )) or\n      (substring($text, string-length($text)) = \'_\' and $odd-suffix and (\n        (parent::a:u and not(following-sibling::*)) or following-sibling::*[1][self::a:u]\n      ))\n    " />\n\n    <xsl:choose>\n      <xsl:when test="$escape-prefix and $escape-suffix">\n        <xsl:text>\\</xsl:text>\n        <xsl:value-of select="substring($text, 1, 1)" />\n        <xsl:if test="string-length($text) > 1">\n          <xsl:call-template name="escape-inlines">\n            <xsl:with-param name="text" select="substring($text, 2, string-length($text) - 2)" />\n          </xsl:call-template>\n          <xsl:text>\\</xsl:text>\n          <xsl:value-of select="substring($text, string-length($text))" />\n        </xsl:if>\n      </xsl:when>\n      <xsl:when test="$escape-prefix and not($escape-suffix)">\n        <xsl:text>\\</xsl:text>\n        <xsl:value-of select="substring($text, 1, 1)" />\n        <xsl:call-template name="escape-inlines">\n          <xsl:with-param name="text" select="substring($text, 2)" />\n        </xsl:call-template>\n      </xsl:when>\n      <xsl:when test="$escape-suffix and not($escape-prefix)">\n        <xsl:call-template name="escape-inlines">\n          <xsl:with-param name="text" select="substring($text, 1, string-length($text) - 1)" />\n        </xsl:call-template>\n        <xsl:text>\\</xsl:text>\n        <xsl:value-of select="substring($text, string-length($text))" />\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:call-template name="escape-inlines">\n          <xsl:with-param name="text" select="$text" />\n        </xsl:call-template>\n      </xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n\n  \x3c!-- Escape prefixes with a backslash --\x3e\n  <xsl:template name="escape-prefixes">\n    <xsl:param name="text" />\n\n    <xsl:variable name="slash">\n      \x3c!-- p tags must escape initial content that looks like a block element marker --\x3e\n      <xsl:if test="$text = \'ARGUMENTS\' or\n                    $text = \'BACKGROUND\' or\n                    $text = \'BODY\' or\n                    $text = \'CONCLUSIONS\' or\n                    $text = \'DECISION\' or\n                    $text = \'INTRODUCTION\' or\n                    $text = \'MOTIVATION\' or\n                    $text = \'PREAMBLE\' or\n                    $text = \'PREFACE\' or\n                    $text = \'REMEDIES\' or\n                    starts-with($text, \'ADDRESS\') or\n                    starts-with($text, \'ADJOURNMENT\') or\n                    starts-with($text, \'ADMINISTRATIONOFOATH\') or\n                    starts-with($text, \'ALINEA\') or\n                    starts-with($text, \'ANNEXURE\') or\n                    starts-with($text, \'ANSWER\') or\n                    starts-with($text, \'APPENDIX\') or\n                    starts-with($text, \'ART\') or\n                    starts-with($text, \'ARTICLE\') or\n                    starts-with($text, \'ATTACHMENT\') or\n                    starts-with($text, \'BLOCKLIST\') or\n                    starts-with($text, \'BOOK\') or\n                    starts-with($text, \'BULLETS\') or\n                    starts-with($text, \'CHAP\') or\n                    starts-with($text, \'CHAPTER\') or\n                    starts-with($text, \'CLAUSE\') or\n                    starts-with($text, \'COMMUNICATION\') or\n                    starts-with($text, \'CROSSHEADING\') or\n                    starts-with($text, \'DEBATESECTION\') or\n                    starts-with($text, \'DECLARATIONOFVOTE\') or\n                    starts-with($text, \'DIVISION\') or\n                    starts-with($text, \'FOOTNOTE\') or\n                    starts-with($text, \'FROM\') or\n                    starts-with($text, \'HEADING\') or\n                    starts-with($text, \'INDENT\') or\n                    starts-with($text, \'ITEMS\') or\n                    starts-with($text, \'LEVEL\') or\n                    starts-with($text, \'LIST\') or\n                    starts-with($text, \'LONGTITLE\') or\n                    starts-with($text, \'MINISTERIALSTATEMENTS\') or\n                    starts-with($text, \'NARRATIVE\') or\n                    starts-with($text, \'NATIONALINTEREST\') or\n                    starts-with($text, \'NOTICESOFMOTION\') or\n                    starts-with($text, \'ORALSTATEMENTS\') or\n                    starts-with($text, \'P \') or\n                    starts-with($text, \'P.\') or\n                    starts-with($text, \'PAPERS\') or\n                    starts-with($text, \'PARA\') or\n                    starts-with($text, \'PARAGRAPH\') or\n                    starts-with($text, \'PART\') or\n                    starts-with($text, \'PERSONALSTATEMENTS\') or\n                    starts-with($text, \'PETITIONS\') or\n                    starts-with($text, \'POINT\') or\n                    starts-with($text, \'POINTOFORDER\') or\n                    starts-with($text, \'PRAYERS\') or\n                    starts-with($text, \'PROCEDURALMOTIONS\') or\n                    starts-with($text, \'PROVISO\') or\n                    starts-with($text, \'P{\') or\n                    starts-with($text, \'QUESTION\') or\n                    starts-with($text, \'QUESTIONS\') or\n                    starts-with($text, \'QUOTE\') or\n                    starts-with($text, \'RESOLUTIONS\') or\n                    starts-with($text, \'ROLLCALL\') or\n                    starts-with($text, \'RULE\') or\n                    starts-with($text, \'SCENE\') or\n                    starts-with($text, \'SCHEDULE\') or\n                    starts-with($text, \'SEC\') or\n                    starts-with($text, \'SECTION\') or\n                    starts-with($text, \'SPEECH\') or\n                    starts-with($text, \'SPEECHGROUP\') or\n                    starts-with($text, \'SUBCHAP\') or\n                    starts-with($text, \'SUBCHAPTER\') or\n                    starts-with($text, \'SUBCLAUSE\') or\n                    starts-with($text, \'SUBDIVISION\') or\n                    starts-with($text, \'SUBHEADING\') or\n                    starts-with($text, \'SUBLIST\') or\n                    starts-with($text, \'SUBPARA\') or\n                    starts-with($text, \'SUBPARAGRAPH\') or\n                    starts-with($text, \'SUBPART\') or\n                    starts-with($text, \'SUBRULE\') or\n                    starts-with($text, \'SUBSEC\') or\n                    starts-with($text, \'SUBSECTION\') or\n                    starts-with($text, \'SUBTITLE\') or\n                    starts-with($text, \'SUMMARY\') or\n                    starts-with($text, \'TABLE\') or\n                    starts-with($text, \'TC\') or\n                    starts-with($text, \'TH\') or\n                    starts-with($text, \'TITLE\') or\n                    starts-with($text, \'TOME\') or\n                    starts-with($text, \'TR\') or\n                    starts-with($text, \'TRANSITIONAL\') or\n                    starts-with($text, \'WRITTENSTATEMENTS\')">\n        <xsl:value-of select="\'\\\'" />\n      </xsl:if>\n    </xsl:variable>\n\n    <xsl:value-of select="concat($slash, $text)" />\n  </xsl:template>\n\n  <xsl:template name="escape-hyphens">\n    <xsl:param name="text"/>\n\n    <xsl:call-template name="string-replace-all">\n      <xsl:with-param name="text"><xsl:value-of select="$text" /></xsl:with-param>\n      <xsl:with-param name="value"><xsl:value-of select="\'-\'" /></xsl:with-param>\n      <xsl:with-param name="replacement"><xsl:value-of select="\'\\-\'" /></xsl:with-param>\n    </xsl:call-template>\n  </xsl:template>\n\n  <xsl:template name="escape-slashes">\n    <xsl:param name="text"/>\n\n    <xsl:call-template name="string-replace-all">\n      <xsl:with-param name="text"><xsl:value-of select="$text" /></xsl:with-param>\n      <xsl:with-param name="value"><xsl:value-of select="\'\\\'" /></xsl:with-param>\n      <xsl:with-param name="replacement"><xsl:value-of select="\'\\\\\'" /></xsl:with-param>\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- convert a string to uppercase --\x3e\n  <xsl:variable name="lowercase" select="\'abcdefghijklmnopqrstuvwxyz\'" />\n  <xsl:variable name="uppercase" select="\'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'" />\n  <xsl:template name="uppercase">\n    <xsl:param name="s"/>\n    <xsl:value-of select="translate($s, $lowercase, $uppercase)" />\n  </xsl:template>\n\n  \x3c!-- repeats a character a certain number of times --\x3e\n  <xsl:template name="repeat">\n    <xsl:param name="str" />\n    <xsl:param name="count" />\n\n    <xsl:if test="$count &gt; 0">\n      <xsl:value-of select="$str" />\n      <xsl:call-template name="repeat">\n        <xsl:with-param name="str" select="$str" />\n        <xsl:with-param name="count" select="$count - 1" />\n      </xsl:call-template>\n    </xsl:if>\n  </xsl:template>\n\n  \x3c!-- indent with spaces --\x3e\n  <xsl:template name="indent">\n    <xsl:param name="level" />\n\n    <xsl:call-template name="repeat">\n      <xsl:with-param name="str" select="$indentStr" />\n      <xsl:with-param name="count" select="$level" />\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Main structures\n       ............................................................................... --\x3e\n\n  \x3c!-- ignore these elements --\x3e\n  <xsl:template match="a:meta | a:judgment/a:header" />\n\n  \x3c!-- ...............................................................................\n       Containers and hierarchical elements\n       ............................................................................... --\x3e\n\n  \x3c!-- content containers --\x3e\n  <xsl:template match="a:arguments | a:background | a:conclusions | a:decision | a:introduction | a:motivation\n                       | a:preamble | a:preface | a:remedies">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:call-template name="uppercase">\n      <xsl:with-param name="s" select="local-name()"/>\n    </xsl:call-template>\n    <xsl:text>&#10;&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- hier content containers --\x3e\n  <xsl:template match="a:body | a:mainBody | a:judgmentBody | a:debateBody">\n    <xsl:param name="indent">0</xsl:param>\n\n    \x3c!-- only add the BODY marker if a preface or preamble comes before the body --\x3e\n    <xsl:if test="preceding-sibling::a:preface or preceding-sibling::a:preamble">\n      <xsl:call-template name="indent">\n        <xsl:with-param name="level" select="$indent" />\n      </xsl:call-template>\n      <xsl:text>BODY</xsl:text>\n      <xsl:text>&#10;&#10;</xsl:text>\n    </xsl:if>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- Hierarchical, speech-hierarchical and speech container elements. These all have num, heading and subheading\n       and behave very similarly.\n   --\x3e\n  <xsl:template match="a:alinea | a:article | a:book | a:chapter | a:clause | a:division | a:indent | a:level | a:list\n                       | a:paragraph | a:part | a:point | a:proviso | a:rule | a:section | a:subchapter | a:subclause\n                       | a:subdivision | a:sublist | a:subparagraph | a:subpart | a:subrule | a:subsection | a:subtitle\n                       | a:title | a:tome | a:transitional | a:item\n                       | a:address | a:adjournment | a:administrationOfOath | a:communication | a:debateSection\n                       | a:declarationOfVote | a:ministerialStatements | a:nationalInterest | a:noticesOfMotion\n                       | a:oralStatements | a:papers | a:personalStatements | a:petitions | a:pointOfOrder | a:prayers\n                       | a:proceduralMotions | a:questions | a:resolutions | a:rollCall | a:writtenStatements\n                       | a:answer | a:other | a:question | a:speech | a:speechGroup">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n\n    <xsl:choose>\n      \x3c!-- shorter synonyms for some common elements --\x3e\n      <xsl:when test="self::a:article"><xsl:text>ART</xsl:text></xsl:when>\n      <xsl:when test="self::a:chapter"><xsl:text>CHAP</xsl:text></xsl:when>\n      <xsl:when test="self::a:paragraph"><xsl:text>PARA</xsl:text></xsl:when>\n      <xsl:when test="self::a:section"><xsl:text>SEC</xsl:text></xsl:when>\n      <xsl:when test="self::a:subchapter"><xsl:text>SUBCHAP</xsl:text></xsl:when>\n      <xsl:when test="self::a:subparagraph"><xsl:text>SUBPARA</xsl:text></xsl:when>\n      <xsl:when test="self::a:subsection"><xsl:text>SUBSEC</xsl:text></xsl:when>\n      <xsl:otherwise>\n        <xsl:call-template name="uppercase">\n          <xsl:with-param name="s" select="local-name()"/>\n        </xsl:call-template>\n      </xsl:otherwise>\n    </xsl:choose>\n\n    <xsl:call-template name="block-attrs" />\n\n    <xsl:if test="a:num">\n      <xsl:text> </xsl:text>\n      <xsl:call-template name="escape-hyphens">\n        <xsl:with-param name="text">\n          <xsl:call-template name="escape-slashes">\n            <xsl:with-param name="text" select="a:num" />\n          </xsl:call-template>\n        </xsl:with-param>\n      </xsl:call-template>\n    </xsl:if>\n\n    <xsl:if test="a:heading">\n      <xsl:text> - </xsl:text>\n      <xsl:apply-templates select="a:heading" />\n    </xsl:if>\n    <xsl:if test="a:subheading">\n      <xsl:text>&#10;</xsl:text>\n      <xsl:apply-templates select="a:subheading">\n        <xsl:with-param name="indent" select="$indent + 1" />\n      </xsl:apply-templates>\n    </xsl:if>\n    <xsl:if test="a:from">\n      <xsl:text>&#10;</xsl:text>\n      <xsl:apply-templates select="a:from">\n        <xsl:with-param name="indent" select="$indent + 1" />\n      </xsl:apply-templates>\n    </xsl:if>\n    \x3c!-- ITEM is the exception, it doesn\'t get a blank line --\x3e\n    <xsl:text>&#10;</xsl:text>\n    <xsl:if test="not(self::a:item)">\n      <xsl:text>&#10;</xsl:text>\n    </xsl:if>\n\n    <xsl:apply-templates select="a:heading//a:authorialNote | a:subheading//a:authorialNote" mode="content">\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n\n    <xsl:apply-templates select="./*[not(self::a:num) and not(self::a:heading) and not(self::a:subheading) and not(self::a:from)]">\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Block elements\n       ............................................................................... --\x3e\n\n  \x3c!-- indented blocklists --\x3e\n  <xsl:template match="a:blockList">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>ITEMS</xsl:text>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:listIntroduction | a:listWrapUp">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n\n    <xsl:text>&#10;&#10;</xsl:text>\n\n    <xsl:apply-templates select=".//a:authorialNote" mode="content">\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:ul">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>BULLETS</xsl:text>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n\n    \x3c!-- the p tags inside the ul\'s li elements only get one newline, so add a bonus one to create an empty line --\x3e\n    <xsl:text>&#10;</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:li">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>* </xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- block quotes as embeddedStructure --\x3e\n  <xsl:template match="a:embeddedStructure">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>QUOTE</xsl:text>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text>&#10;</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- authorial notes are made up of two parts:\n       1. a reference, inline where the note appears (the default)\n       2. the content, as a block element (mode=content)\n  --\x3e\n  <xsl:template match="a:authorialNote">\n    <xsl:text>{{FOOTNOTE </xsl:text>\n    <xsl:value-of select="@marker"/>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:authorialNote" mode="content">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>FOOTNOTE </xsl:text>\n    <xsl:value-of select="@marker"/>\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Tables\n       ............................................................................... --\x3e\n  <xsl:template match="a:table">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>TABLE</xsl:text>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n\n  <xsl:template match="a:tr">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>TR&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n\n  <xsl:template match="a:th|a:td">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n\n    <xsl:choose>\n      <xsl:when test="local-name(.) = \'th\'">\n        <xsl:text>TH</xsl:text>\n      </xsl:when>\n      <xsl:when test="local-name(.) = \'td\'">\n        <xsl:text>TC</xsl:text>\n      </xsl:when>\n    </xsl:choose>\n\n    <xsl:call-template name="block-attrs" />\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Attribute lists at the start of marked blocks\n       ............................................................................... --\x3e\n\n  <xsl:template name="block-attrs">\n    <xsl:if test="@class">\n      <xsl:text>.</xsl:text>\n      <xsl:value-of select="translate(@class, \' \', \'.\')" />\n    </xsl:if>\n\n    \x3c!-- ignore:\n       - @eId\n       - @class\n       - @by\n       - @name for elements that match the element name\n       - @name for <inline name="em">\n       --\x3e\n    <xsl:if test="@*[local-name() != \'eId\' and local-name() != \'class\' and local-name() != \'by\'\n                  and (local-name() != \'name\' or . != local-name(parent::a:*))\n                  and not(parent::a:inline and local-name() = \'name\' and . = \'em\')]">\n      <xsl:text>{</xsl:text>\n      <xsl:for-each select="@*[local-name() != \'eId\' and local-name() != \'class\' and local-name() != \'by\'\n                  and (local-name() != \'name\' or . != local-name(parent::a:*))\n                  and not(parent::a:inline and local-name() = \'name\' and . = \'em\')]">\n        <xsl:apply-templates select="." mode="generic">\n          <xsl:with-param name="index" select="position()"/>\n        </xsl:apply-templates>\n      </xsl:for-each>\n      <xsl:text>}</xsl:text>\n    </xsl:if>\n  </xsl:template>\n\n  <xsl:template match="@*" mode="generic">\n    <xsl:param name="index">0</xsl:param>\n\n    <xsl:if test="$index > 1">\n      <xsl:text>|</xsl:text>\n    </xsl:if>\n    <xsl:value-of select="local-name(.)" />\n    <xsl:text> </xsl:text>\n    <xsl:value-of select="." />\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Attachments\n       ............................................................................... --\x3e\n\n  <xsl:template match="a:attachment">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:call-template name="uppercase">\n      <xsl:with-param name="s" select="a:doc/@name" />\n    </xsl:call-template>\n\n    <xsl:if test="a:heading">\n      <xsl:text> </xsl:text>\n      <xsl:apply-templates select="a:heading" />\n    </xsl:if>\n\n    <xsl:if test="a:subheading">\n      <xsl:text>&#10;</xsl:text>\n      <xsl:apply-templates select="a:subheading">\n        <xsl:with-param name="indent" select="$indent + 1" />\n      </xsl:apply-templates>\n    </xsl:if>\n\n    <xsl:text>&#10;&#10;</xsl:text>\n\n    <xsl:apply-templates select="a:heading//a:authorialNote | a:subheading//a:authorialNote" mode="content">\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n\n    <xsl:apply-templates select="a:doc">\n      <xsl:with-param name="indent" select="$indent + 1" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Content elements\n       ............................................................................... --\x3e\n\n  \x3c!-- p tags must end with a blank line --\x3e\n  <xsl:template match="a:p">\n    <xsl:param name="indent">0</xsl:param>\n\n    \x3c!-- first p tag in li doesn\'t get indented --\x3e\n    <xsl:if test="not(parent::a:li and count(preceding-sibling::a:p) = 0)">\n      <xsl:call-template name="indent">\n        <xsl:with-param name="level" select="$indent" />\n      </xsl:call-template>\n    </xsl:if>\n\n    \x3c!-- include explicit P marker if the element has attributes other than eId --\x3e\n    <xsl:if test="@*[not(local-name() = \'eId\')]">\n      <xsl:text>P</xsl:text>\n      <xsl:call-template name="block-attrs" />\n      <xsl:text> </xsl:text>\n    </xsl:if>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n\n    <xsl:text>&#10;</xsl:text>\n    \x3c!-- p tags in lists only end with one newline --\x3e\n    <xsl:if test="not(parent::a:li)">\n      <xsl:text>&#10;</xsl:text>\n    </xsl:if>\n\n    \x3c!-- we only want authorialNotes that don\'t have an intermediate element between this p\n     and the note. --\x3e\n    <xsl:variable name="cnt" select="count(ancestor-or-self::a:p)" />\n    <xsl:apply-templates select=".//a:authorialNote[count(ancestor::a:p) = $cnt]" mode="content">\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:subheading">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>SUBHEADING </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:crossHeading">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>CROSSHEADING </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>&#10;&#10;</xsl:text>\n\n    <xsl:apply-templates select=".//a:authorialNote" mode="content">\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:from">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>FROM </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  <xsl:template match="a:scene | a:narrative | a:summary">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:call-template name="uppercase">\n      <xsl:with-param name="s" select="local-name()"/>\n    </xsl:call-template>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text> </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>&#10;&#10;</xsl:text>\n\n    <xsl:apply-templates select=".//a:authorialNote" mode="content">\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n  </xsl:template>\n\n  \x3c!-- TODO: this is actually a block element, not a container --\x3e\n  <xsl:template match="a:longTitle">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n    <xsl:text>LONGTITLE </xsl:text>\n    <xsl:apply-templates/>\n    <xsl:text>&#10;&#10;</xsl:text>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Inline and marker elements\n       ............................................................................... --\x3e\n\n  <xsl:template match="a:remark">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>{{*</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:remark/a:br">\n    <xsl:param name="indent">0</xsl:param>\n    <xsl:text>&#10;</xsl:text>\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- left trim the first text node just after a br in a remark to prevent interfering with indents --\x3e\n  <xsl:template match="a:remark/text()[preceding-sibling::a:*[1][self::a:br]]">\n    <xsl:call-template name="escape-inlines">\n      <xsl:with-param name="text">\n        <xsl:call-template name="string-ltrim">\n          <xsl:with-param name="text" select="." />\n        </xsl:call-template>\n      </xsl:with-param>\n    </xsl:call-template>\n  </xsl:template>\n\n  <xsl:template match="a:ref">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>{{&gt;</xsl:text>\n    <xsl:call-template name="string-replace-all">\n      <xsl:with-param name="text" select="@href"></xsl:with-param>\n      <xsl:with-param name="value" select="\' \'"></xsl:with-param>\n      <xsl:with-param name="replacement" select="\'%20\'"></xsl:with-param>\n    </xsl:call-template>\n    <xsl:text> </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:img">\n    <xsl:text>{{IMG </xsl:text>\n    <xsl:call-template name="string-replace-all">\n      <xsl:with-param name="text" select="@src"></xsl:with-param>\n      <xsl:with-param name="value" select="\' \'"></xsl:with-param>\n      <xsl:with-param name="replacement" select="\'%20\'"></xsl:with-param>\n    </xsl:call-template>\n    <xsl:if test="@alt">\n      <xsl:text> </xsl:text>\n      <xsl:value-of select="@alt" />\n    </xsl:if>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:i">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>//</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>//</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:b">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>**</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>**</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:u">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>__</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>__</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:sup">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>{{^</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:sub">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>{{_</xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  \x3c!-- general inlines that follow a common pattern --\x3e\n  <xsl:template match="a:abbr | a:def | a:term | a:inline | a:ins | a:del">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>{{</xsl:text>\n    <xsl:choose>\n      <xsl:when test="self::a:inline and @name=\'em\'">\n        <xsl:text>em</xsl:text>\n      </xsl:when>\n      <xsl:when test="self::a:ins">\n        <xsl:text>+</xsl:text>\n      </xsl:when>\n      <xsl:when test="self::a:del">\n        <xsl:text>-</xsl:text>\n      </xsl:when>\n      <xsl:otherwise>\n        <xsl:value-of select="local-name(.)" />\n      </xsl:otherwise>\n    </xsl:choose>\n    <xsl:call-template name="block-attrs" />\n    <xsl:text> </xsl:text>\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent" />\n    </xsl:apply-templates>\n    <xsl:text>}}</xsl:text>\n  </xsl:template>\n\n  <xsl:template match="a:eol">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:text>&#10;</xsl:text>\n\n    <xsl:call-template name="indent">\n      <xsl:with-param name="level" select="$indent" />\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Text\n       ............................................................................... --\x3e\n\n  \x3c!-- first text nodes of these elems must be left-trimmed and escaped if they have special chars --\x3e\n  <xsl:template match="a:*[self::a:p or self::a:listIntroduction or self::a:listWrapUp]\n                       /text()[not(preceding-sibling::*)]">\n    <xsl:call-template name="escape-prefixes">\n      <xsl:with-param name="text">\n        <xsl:call-template name="escape-inlines-start-end">\n          <xsl:with-param name="text">\n            <xsl:call-template name="string-ltrim">\n              <xsl:with-param name="text" select="." />\n            </xsl:call-template>\n          </xsl:with-param>\n        </xsl:call-template>\n      </xsl:with-param>\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- escape inlines in text nodes --\x3e\n  <xsl:template match="text()">\n    <xsl:call-template name="escape-inlines-start-end">\n      <xsl:with-param name="text" select="." />\n    </xsl:call-template>\n  </xsl:template>\n\n  \x3c!-- ...............................................................................\n       Catch-all\n       ............................................................................... --\x3e\n\n  \x3c!-- for most nodes, just dump their text content and pass through the indentation level\n       to children --\x3e\n  <xsl:template match="*">\n    <xsl:param name="indent">0</xsl:param>\n\n    <xsl:apply-templates>\n      <xsl:with-param name="indent" select="$indent"/>\n    </xsl:apply-templates>\n  </xsl:template>\n\n</xsl:stylesheet>\n',"text/xml");return this.textTransform=new XSLTProcessor,this.textTransform.importStylesheet(e),new Promise((e=>e()))}installLanguage(){m()}installActions(e){l(e)}markupRemark(e){return`{{*[${e}]}}`}markupRef(e,t){return`{{>${t} ${e}}}`}markupImage(e,t){return`{{IMG ${t.replaceAll(" ","%20")}`+(e?` ${e}`:"")+"}}"}getImageAtCursor(e){const t=super.getImageAtCursor(e);return t&&(t.title=(t.match[2]||"").trim(),t.src=t.match[1]),t}}window.bluebellMonaco=e})()})();