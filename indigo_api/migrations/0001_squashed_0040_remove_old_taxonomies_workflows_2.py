# Generated by Django 3.2.13 on 2024-06-28 08:36

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import indigo_api.models.documents
import indigo_api.models.tasks
import indigo_api.models.works


class Migration(migrations.Migration):

    replaces = [('indigo_api', '0001_squashed_0137'), ('indigo_api', '0002_alter_workflow'), ('indigo_api', '0003_alter_taxonomies'), ('indigo_api', '0004_placesettings_no_publication_document_text'), ('indigo_api', '0005_block_tasks'), ('indigo_api', '0006_commencement_note'), ('indigo_api', '0007_work_as_at_date_override'), ('indigo_api', '0008_taxonomy_vocabulary'), ('indigo_api', '0009_migrate_attachment_eids'), ('indigo_api', '0010_migrate_crossheadings'), ('indigo_api', '0011_language_tasks'), ('indigo_api', '0012_consolidation_note_and_override'), ('indigo_api', '0013_eol_to_br'), ('indigo_api', '0014_remove_tags'), ('indigo_api', '0015_work_frbr_fields'), ('indigo_api', '0016_migrate_work_frbr_fields'), ('indigo_api', '0017_work_frbr_fields_non_null'), ('indigo_api', '0018_principal_work'), ('indigo_api', '0019_backfill_principal_works'), ('indigo_api', '0020_country_publication_date_optional'), ('indigo_api', '0021_work_disclaimer'), ('indigo_api', '0022_place_settings_is_consolidation_uses_chapter'), ('indigo_api', '0023_placesettings_publication_date_optional'), ('indigo_api', '0024_move_publication_date_optional'), ('indigo_api', '0025_remove_country_publication_date_optional'), ('indigo_api', '0026_taxonomy_topic'), ('indigo_api', '0027_taxonomytopic_description'), ('indigo_api', '0028_alter_taxonomytopic_slug'), ('indigo_api', '0029_work_in_progress'), ('indigo_api', '0030_backfill_work_in_progress'), ('indigo_api', '0031_task_timeline_date'), ('indigo_api', '0032_taxonomytopic_public'), ('indigo_api', '0033_workalias'), ('indigo_api', '0034_taskfile'), ('indigo_api', '0035_task_finished_by_user'), ('indigo_api', '0036_models_i18n'), ('indigo_api', '0037_taxonomytopic_project'), ('indigo_api', '0038_alter_subtype_abbreviation'), ('indigo_api', '0039_remove_old_taxonomies_workflows_1'), ('indigo_api', '0040_remove_old_taxonomies_workflows_2')]

    initial = True

    dependencies = [
        ('countries_plus', '0005_auto_20160224_1804'),
        ('pinax_badges', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('languages_plus', '0002_auto_20141008_0947'),
        ('languages_plus', '0004_auto_20171214_0004'),
        ('reversion', '0001_squashed_0004_auto_20160611_1202'),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='languages_plus.language', verbose_name='language')),
            ],
            options={
                'ordering': ['language__name_en'],
                'base_manager_name': 'objects',
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='countries_plus.country', verbose_name='country')),
                ('primary_language', models.ForeignKey(help_text='Primary language for this country', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='indigo_api.language', verbose_name='primary language')),
                ('italics_terms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1024, verbose_name='italics terms'), blank=True, null=True, size=None)),
            ],
            options={
                'ordering': ['country__name'],
                'verbose_name_plural': 'countries',
                'verbose_name': 'country',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Local name of this locality', max_length=512, verbose_name='name')),
                ('code', models.CharField(help_text='Unique code of this locality (used in the FRBR URI)', max_length=100, verbose_name='code')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='localities', to='indigo_api.country', verbose_name='country')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'localities',
                'unique_together': {('country', 'code')},
                'verbose_name': 'locality',
            },
        ),
        # TODO: skip this?
        migrations.CreateModel(
            name='VocabularyTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_1', models.CharField(max_length=512, verbose_name='level 1')),
                ('level_2', models.CharField(blank=True, help_text='(optional)', max_length=512, null=True, verbose_name='level 2')),
            ],
            options={
                'ordering': ('level_1', 'level_2'),
                'verbose_name': 'vocabulary topic',
                'verbose_name_plural': 'vocabulary topics',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frbr_uri', models.CharField(help_text='Used globally to identify this work', max_length=512, unique=True)),
                ('title', models.CharField(default='(untitled)', max_length=1024, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.country')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.locality')),
                ('stub', models.BooleanField(default=False, help_text='Stub works do not have content or points in time')),
                ('publication_name', models.CharField(blank=True, help_text='Original publication, eg. government gazette', max_length=255, null=True)),
                ('publication_number', models.CharField(blank=True, help_text="Publication's sequence number, eg. gazette number", max_length=255, null=True)),
                ('publication_date', models.DateField(blank=True, help_text='Date of publication', null=True)),
                ('assent_date', models.DateField(blank=True, help_text='Date signed by the president', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('repealed_by', models.ForeignKey(blank=True, help_text='Work that repealed this work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repealed_works', to='indigo_api.work')),
                ('repealed_date', models.DateField(blank=True, help_text='Date of repeal of this work', null=True)),
                ('parent_work', models.ForeignKey(blank=True, help_text='Parent related work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_works', to='indigo_api.work')),
                # TODO: skip this?
                ('taxonomies', models.ManyToManyField(related_name='works', to='indigo_api.VocabularyTopic')),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('commenced', models.BooleanField(default=False, help_text='Has this work commenced? (Date may be unknown)')),
                ('as_at_date_override', models.DateField(blank=True, help_text='Date up to which this work was last checked for updates', null=True)),
                ('consolidation_note_override', models.CharField(blank=True, help_text='Consolidation note about this particular work, to override consolidation note for place', max_length=1024, null=True)),
                ('actor', models.CharField(blank=True, help_text='FRBR actor', max_length=512, null=True)),
                ('date', models.CharField(blank=True, help_text='FRBR date', max_length=10)),
                ('doctype', models.CharField(blank=True, help_text='FRBR doctype', max_length=64)),
                ('number', models.CharField(blank=True, help_text='FRBR number', max_length=512)),
                ('subtype', models.CharField(blank=True, help_text='FRBR subtype', max_length=512, null=True)),
                ('principal', models.BooleanField(default=False, help_text='Principal works are not simply repeals, amendments or commencements, and should have full text content.')),
                ('disclaimer', models.CharField(blank=True, help_text='Disclaimer text about this work', max_length=1024, null=True)),
            ],
            options={
                'permissions': (('review_work', 'Can review work details'), ('bulk_add_work', 'Can import works in bulk'), ('bulk_export_work', 'Can export works in bulk')),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frbr_uri', models.CharField(default='/', help_text='Used globally to identify this work', max_length=512, verbose_name='frbr uri')),
                ('title', models.CharField(max_length=1024, verbose_name='title')),
                ('draft', models.BooleanField(default=True, help_text="Drafts aren't available through the public API", verbose_name='draft')),
                ('document_xml', models.TextField(blank=True, null=True, verbose_name='document XML')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted', models.BooleanField(default=False, help_text='Has this document been deleted?', verbose_name='deleted')),
                ('language', models.ForeignKey(help_text='Language this document is in.', on_delete=django.db.models.deletion.PROTECT, to='indigo_api.language', verbose_name='language')),
                ('expression_date', models.DateField(help_text='Date of publication or latest amendment', verbose_name='expression date')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indigo_api.work')),
            ],
            options={
                'permissions': (('publish_document', 'Can publish and edit non-draft documents'), ('view_published_document', 'Can view publish documents through the API'), ('view_document_xml', 'Can view the source XML of documents')),
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
            },
        ),
        migrations.CreateModel(
            name='TaskLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.CharField(blank=True, max_length=256, null=True, verbose_name='description')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'task label',
                'verbose_name_plural': 'task labels',
            },
        ),
        migrations.CreateModel(
            name='TaxonomyTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(help_text='Name of the taxonomy topic', max_length=512, verbose_name='name')),
                ('slug', models.SlugField(help_text='Unique short name (code) for the topic.', max_length=4096, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, help_text='Description of the topic', null=True, verbose_name='description')),
                ('public', models.BooleanField(default=True, verbose_name='public')),
                ('project', models.BooleanField(default=False, verbose_name='project')),
            ],
            options={
                'verbose_name': 'taxonomy topic',
                'verbose_name_plural': 'taxonomy topics',
            },
        ),
        migrations.AddField(
            model_name='work',
            name='taxonomy_topics',
            field=models.ManyToManyField(blank=True, related_name='works', to='indigo_api.TaxonomyTopic'),
        ),
        migrations.AddField(
            model_name='work',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='work',
            name='approved_by_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='work',
            name='work_in_progress',
            field=models.BooleanField(default=True, help_text='Work in progress, to be approved'),
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=indigo_api.models.tasks.task_file_filename, verbose_name='file')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('size', models.IntegerField(null=True, verbose_name='size')),
                ('filename', models.CharField(max_length=1024, verbose_name='filename')),
                ('mime_type', models.CharField(max_length=1024, verbose_name='mimetype')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'task file',
                'verbose_name_plural': 'task files',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('state', django_fsm.FSMField(default='open', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='assigned to')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.country', verbose_name='country')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by user')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.document')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.locality')),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.work')),
                ('labels', models.ManyToManyField(related_name='tasks', to='indigo_api.TaskLabel')),
                ('submitted_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_tasks', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_tasks', to=settings.AUTH_USER_MODEL)),
                ('code', models.CharField(blank=True, max_length=100, null=True, verbose_name='code')),
                ('changes_requested', models.BooleanField(default=False, help_text='Have changes been requested on this task?', verbose_name='changes requested')),
                ('extra_data', models.JSONField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(help_text='When the task was marked as done or cancelled.', null=True, verbose_name='closed at')),
                ('blocked_by', models.ManyToManyField(help_text='Tasks blocking this task from being done.', related_name='blocking', to='indigo_api.Task', verbose_name='blocked by')),
                ('timeline_date', models.DateField(blank=True, help_text='A date on the timeline of work-related tasks, e.g. the date at which an amendment should be applied.', null=True)),
                ('input_file', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_as_input', to='indigo_api.taskfile')),
                ('output_file', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_as_output', to='indigo_api.taskfile')),
                ('finished_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finished_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('submit_task', 'Can submit an open task for review'), ('cancel_task', 'Can cancel a task that is open or has been submitted for review'), ('reopen_task', 'Can reopen a task that is closed or cancelled'), ('unsubmit_task', 'Can unsubmit a task that has been submitted for review'), ('close_task', 'Can close a task that has been submitted for review'), ('close_any_task', 'Can close any task that has been submitted for review, regardless of who submitted it'), ('block_task', 'Can block a task from being done, and unblock it'), ('exceed_task_limits', 'Can be assigned tasks in excess of limits')),
                'verbose_name': 'task',
                'verbose_name_plural': 'tasks',
            },
        ),
        migrations.AlterModelOptions(
            name='work',
            options={'permissions': (('review_work', 'Can review work details'), ('bulk_add_work', 'Can import works in bulk'), ('bulk_export_work', 'Can export works in bulk')), 'verbose_name': 'work', 'verbose_name_plural': 'works'},
        ),
        migrations.CreateModel(
            name='Amendment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date on which the amendment comes into operation', verbose_name='date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('amended_work', models.ForeignKey(help_text='Work being amended', on_delete=django.db.models.deletion.CASCADE, related_name='amendments', to='indigo_api.work', verbose_name='amended work')),
                ('amending_work', models.ForeignKey(help_text='Work making the amendment', on_delete=django.db.models.deletion.CASCADE, related_name='amendments_made', to='indigo_api.work', verbose_name='amending work')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'ordering': ['date'],
                'verbose_name': 'amendment',
                'verbose_name_plural': 'amendments',
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='text')),
                ('anchor_id', models.CharField(max_length=512, verbose_name='anchor id')),
                ('closed', models.BooleanField(default=False, verbose_name='closed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='indigo_api.document', verbose_name='document')),
                ('in_reply_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='indigo_api.annotation', verbose_name='in reply to')),
                ('selectors', models.JSONField(null=True, verbose_name='selectors')),
                ('task', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotation', to='indigo_api.task', verbose_name='task')),
            ],
            options={
                'verbose_name': 'annotation',
                'verbose_name_plural': 'annotations',
            },
        ),
        migrations.CreateModel(
            name='ArbitraryExpressionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Arbitrary date, e.g. consolidation date', verbose_name='date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arbitrary_expression_dates', to='indigo_api.work', verbose_name='work')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('date', 'work')},
                'verbose_name': 'arbitrary expression date',
                'verbose_name_plural': 'arbitrary expression dates',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=indigo_api.models.documents.attachment_filename, verbose_name='file')),
                ('size', models.IntegerField(verbose_name='size')),
                ('filename', models.CharField(db_index=True, help_text='Unique attachment filename', max_length=255, verbose_name='filename')),
                ('mime_type', models.CharField(max_length=255, verbose_name='mime type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='indigo_api.document', verbose_name='document')),
            ],
            options={
                'ordering': ('filename',),
                'verbose_name': 'attachment',
                'verbose_name_plural': 'attachments',
            },
        ),
        migrations.CreateModel(
            name='Colophon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of this colophon', max_length=1024, verbose_name='name')),
                ('body', models.TextField(verbose_name='body')),
                ('country', models.ForeignKey(help_text='Which country does this colophon apply to?', on_delete=django.db.models.deletion.CASCADE, to='indigo_api.country', verbose_name='country')),
            ],
            options={
                'verbose_name': 'colophon',
                'verbose_name_plural': 'colophons',
            },
        ),
        migrations.CreateModel(
            name='Commencement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, help_text='Date of the commencement, or null if it is unknown', null=True, verbose_name='date')),
                ('main', models.BooleanField(default=False, help_text='This commencement date is the date on which most of the provisions of the commenced work come into force', verbose_name='main')),
                ('all_provisions', models.BooleanField(default=False, help_text='All provisions of this work commenced on this date', verbose_name='all provisions')),
                ('provisions', models.JSONField(default=list, help_text='A list of the element ids of the provisions that come into force with this commencement', verbose_name='commenced provisions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('commenced_work', models.ForeignKey(help_text='Principal work being commenced', on_delete=django.db.models.deletion.CASCADE, related_name='commencements', to='indigo_api.work', verbose_name='commenced work')),
                ('commencing_work', models.ForeignKey(help_text='Work that provides the commencement date for the principal work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commencements_made', to='indigo_api.work', verbose_name='commencing work')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('note', models.TextField(blank=True, help_text='Usually a reference to a provision of the commenced work or a commencing work, if there is a commencement but the date is open to interpretation', max_length=1024, null=True, verbose_name='note')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('commenced_work', 'commencing_work', 'date')},
                'verbose_name': 'commencement',
                'verbose_name_plural': 'commencements',
            },
        ),
        migrations.AlterField(
            model_name='document',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indigo_api.work', verbose_name='work'),
        ),
        migrations.CreateModel(
            name='DocumentActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=10, verbose_name='nonce')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='indigo_api.document', verbose_name='document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_activities', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'unique_together': {('document', 'user', 'nonce')},
                'ordering': ('created_at',),
                'verbose_name': 'document activity',
                'verbose_name_plural': 'document activities',
            },
        ),
        migrations.CreateModel(
            name='PlaceSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spreadsheet_url', models.URLField(blank=True, null=True, verbose_name='spreadsheet URL')),
                ('as_at_date', models.DateField(blank=True, null=True, verbose_name='as-at date')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_settings', to='indigo_api.country', verbose_name='country')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place_settings', to='indigo_api.locality', verbose_name='locality')),
                ('styleguide_url', models.URLField(blank=True, null=True, verbose_name='styleguide URL')),
                ('no_publication_document_text', models.CharField(blank=True, default='Note: The original publication document is not available and this content could not be verified.', max_length=1024, verbose_name="'No publication document' text")),
                ('consolidation_note', models.CharField(blank=True, max_length=1024, null=True, verbose_name='consolidation note')),
                ('is_consolidation', models.BooleanField(default=False, help_text='Is a consolidation being worked on in this place?', verbose_name='a consolidation is being imported')),
                ('uses_chapter', models.BooleanField(default=False, help_text='Are Chapters used for Acts in this place?', verbose_name='chapters are used')),
                ('publication_date_optional', models.BooleanField(default=False, help_text='Are publication dates optional in this place?', verbose_name='publication date is optional')),
            ],
            options={
                'verbose_name': 'place settings',
                'verbose_name_plural': "places' settings",
            },
        ),
        migrations.CreateModel(
            name='PublicationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=indigo_api.models.works.publication_document_filename, verbose_name='file')),
                ('size', models.IntegerField(null=True, verbose_name='file size')),
                ('filename', models.CharField(max_length=255, verbose_name='file name')),
                ('mime_type', models.CharField(max_length=255, verbose_name='file MIME type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('work', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='publication_document', to='indigo_api.work', verbose_name='work')),
                ('trusted_url', models.URLField(blank=True, null=True, verbose_name='trusted URL')),
            ],
            options={
                'verbose_name': 'publication document',
                'verbose_name_plural': 'publication documents',
            },
        ),
        migrations.AlterField(
            model_name='task',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.document', verbose_name='document'),
        ),
        migrations.AlterField(
            model_name='task',
            name='extra_data',
            field=models.JSONField(blank=True, null=True, verbose_name='extra data'),
        ),
        migrations.AlterField(
            model_name='task',
            name='finished_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finished_tasks', to=settings.AUTH_USER_MODEL, verbose_name='finished by user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='input_file',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_as_input', to='indigo_api.taskfile', verbose_name='input file'),
        ),
        migrations.AlterField(
            model_name='task',
            name='labels',
            field=models.ManyToManyField(related_name='tasks', to='indigo_api.TaskLabel', verbose_name='labels'),
        ),
        migrations.AlterField(
            model_name='task',
            name='locality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.locality', verbose_name='locality'),
        ),
        migrations.AlterField(
            model_name='task',
            name='output_file',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_as_output', to='indigo_api.taskfile', verbose_name='output file'),
        ),
        migrations.AlterField(
            model_name='task',
            name='reviewed_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_tasks', to=settings.AUTH_USER_MODEL, verbose_name='reviewed by user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='state',
            field=django_fsm.FSMField(default='open', max_length=50, verbose_name='state'),
        ),
        migrations.AlterField(
            model_name='task',
            name='submitted_by_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_tasks', to=settings.AUTH_USER_MODEL, verbose_name='submitted by user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='timeline_date',
            field=models.DateField(blank=True, help_text='A date on the timeline of work-related tasks, e.g. the date at which an amendment should be applied.', null=True, verbose_name='timeline date'),
        ),
        migrations.AlterField(
            model_name='task',
            name='title',
            field=models.CharField(max_length=256, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='task',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='updated at'),
        ),
        migrations.AlterField(
            model_name='task',
            name='updated_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by user'),
        ),
        migrations.AlterField(
            model_name='task',
            name='work',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='indigo_api.work', verbose_name='work'),
        ),
        migrations.AlterField(
            model_name='work',
            name='actor',
            field=models.CharField(blank=True, help_text='FRBR actor', max_length=512, null=True, verbose_name='actor'),
        ),
        migrations.AlterField(
            model_name='work',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='approved at'),
        ),
        migrations.AlterField(
            model_name='work',
            name='approved_by_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='approved by'),
        ),
        migrations.AlterField(
            model_name='work',
            name='as_at_date_override',
            field=models.DateField(blank=True, help_text='Date up to which this work was last checked for updates', null=True, verbose_name='as-at date override'),
        ),
        migrations.AlterField(
            model_name='work',
            name='assent_date',
            field=models.DateField(blank=True, help_text='Date signed by the president', null=True, verbose_name='assent date'),
        ),
        migrations.AlterField(
            model_name='work',
            name='commenced',
            field=models.BooleanField(default=False, help_text='Has this work commenced? (Date may be unknown)', verbose_name='commenced'),
        ),
        migrations.AlterField(
            model_name='work',
            name='consolidation_note_override',
            field=models.CharField(blank=True, help_text='Consolidation note about this particular work, to override any consolidation note for the place', max_length=1024, null=True, verbose_name='consolidation note override'),
        ),
        migrations.AlterField(
            model_name='work',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.country', verbose_name='country'),
        ),
        migrations.AlterField(
            model_name='work',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='created at'),
        ),
        migrations.AlterField(
            model_name='work',
            name='created_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AlterField(
            model_name='work',
            name='date',
            field=models.CharField(blank=True, help_text='FRBR date', max_length=10, verbose_name='date'),
        ),
        migrations.AlterField(
            model_name='work',
            name='disclaimer',
            field=models.CharField(blank=True, help_text='Disclaimer text about this work', max_length=1024, null=True, verbose_name='disclaimer'),
        ),
        migrations.AlterField(
            model_name='work',
            name='doctype',
            field=models.CharField(blank=True, help_text='FRBR doctype', max_length=64, verbose_name='doctype'),
        ),
        migrations.AlterField(
            model_name='work',
            name='frbr_uri',
            field=models.CharField(help_text='Used globally to identify this work', max_length=512, unique=True, verbose_name='FRBR URI'),
        ),
        migrations.AlterField(
            model_name='work',
            name='locality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.locality', verbose_name='locality'),
        ),
        migrations.AlterField(
            model_name='work',
            name='number',
            field=models.CharField(blank=True, help_text='FRBR number', max_length=512, verbose_name='number'),
        ),
        migrations.AlterField(
            model_name='work',
            name='parent_work',
            field=models.ForeignKey(blank=True, help_text='Parent (primary) work for subsidiary legislation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_works', to='indigo_api.work', verbose_name='parent (primary) work'),
        ),
        migrations.AlterField(
            model_name='work',
            name='principal',
            field=models.BooleanField(default=False, help_text='Principal works are not simply repeals, amendments or commencements, and should have full text content.', verbose_name='principal'),
        ),
        migrations.AlterField(
            model_name='work',
            name='properties',
            field=models.JSONField(blank=True, default=dict, verbose_name='properties'),
        ),
        migrations.AlterField(
            model_name='work',
            name='publication_date',
            field=models.DateField(blank=True, help_text='Date of publication', null=True, verbose_name='publication date'),
        ),
        migrations.AlterField(
            model_name='work',
            name='publication_name',
            field=models.CharField(blank=True, help_text="Original publication's name, e.g. Government Gazette", max_length=255, null=True, verbose_name='publication name'),
        ),
        migrations.AlterField(
            model_name='work',
            name='publication_number',
            field=models.CharField(blank=True, help_text="Publication's sequence number, eg. gazette number", max_length=255, null=True, verbose_name='publication number'),
        ),
        migrations.AlterField(
            model_name='work',
            name='repealed_by',
            field=models.ForeignKey(blank=True, help_text='Work that repealed this work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repealed_works', to='indigo_api.work', verbose_name='repealed by'),
        ),
        migrations.AlterField(
            model_name='work',
            name='repealed_date',
            field=models.DateField(blank=True, help_text='Date of repeal of this work', null=True, verbose_name='repealed date'),
        ),
        migrations.AlterField(
            model_name='work',
            name='stub',
            field=models.BooleanField(default=False, help_text='Stub works do not have content or points in time', verbose_name='stub'),
        ),
        migrations.AlterField(
            model_name='work',
            name='subtype',
            field=models.CharField(blank=True, help_text='FRBR subtype', max_length=512, null=True, verbose_name='subtype'),
        ),
        # TODO: skip this?
        migrations.RemoveField(
            model_name='work',
            name='taxonomies',
        ),
        migrations.AlterField(
            model_name='work',
            name='taxonomy_topics',
            field=models.ManyToManyField(blank=True, related_name='works', to='indigo_api.TaxonomyTopic', verbose_name='taxonomy topics'),
        ),
        migrations.AlterField(
            model_name='work',
            name='title',
            field=models.CharField(default='(untitled)', max_length=1024, null=True, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='work',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='updated at'),
        ),
        migrations.AlterField(
            model_name='work',
            name='updated_by_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AlterField(
            model_name='work',
            name='work_in_progress',
            field=models.BooleanField(default=True, help_text='Work in progress, to be approved', verbose_name='work in progress'),
        ),
        migrations.CreateModel(
            name='WorkAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(help_text='Alias e.g. Penal Code, etc', max_length=255, verbose_name='alias')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='indigo_api.work', verbose_name='work')),
            ],
            options={
                'ordering': ('alias',),
                'unique_together': {('alias', 'work')},
                'verbose_name': 'work alias',
                'verbose_name_plural': 'work aliases',
            },
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the subtype', max_length=1024, verbose_name='name')),
                ('abbreviation', models.CharField(help_text='Short abbreviation to use in the FRBR URI. No punctuation.', max_length=32, unique=True, verbose_name='abbreviation')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'subtype',
                'verbose_name_plural': 'subtypes',
            },
        ),
        # TODO: skip this?
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('closed', models.BooleanField(default=False, verbose_name='closed')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='due date')),
                ('priority', models.BooleanField(db_index=True, default=False, verbose_name='priority')),
            ],
            options={
                'permissions': (('close_workflow', 'Can close a workflow'),),
                'ordering': ('-priority', 'pk'),
                'verbose_name': 'workflow',
                'verbose_name_plural': 'workflows',
            },
        ),
        migrations.AlterField(
            model_name='document',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp of when the expression was first created.', verbose_name='created at'),
        ),
        migrations.AlterField(
            model_name='document',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp of when the expression was last updated.', verbose_name='updated at'),
        ),
        # TODO: skip this?
        migrations.DeleteModel(
            name='VocabularyTopic',
        ),
        # TODO: skip this?
        migrations.DeleteModel(
            name='Workflow',
        ),
    ]
