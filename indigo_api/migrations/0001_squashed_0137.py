# Generated by Django 2.2.12 on 2020-10-29 14:29

from django.conf import settings
from django.db import migrations, models
import django.contrib.postgres.fields
import django.db.models.deletion
import django_fsm
import indigo_api.models.documents
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('languages_plus', '0002_auto_20141008_0947'),
        ('taggit', '0001_initial'),
        ('countries_plus', '0005_auto_20160224_1804'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reversion', '0002_auto_20141216_1509'),
        ('pinax_badges', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='languages_plus.Language')),
            ],
            options={
                'ordering': ['language__name_en'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='countries_plus.Country')),
                ('primary_language', models.ForeignKey(help_text='Primary language for this country', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='indigo_api.Language')),
                ('italics_terms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1024), blank=True, null=True, size=None)),
            ],
            options={
                'ordering': ['country__name'],
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Local name of this locality', max_length=512)),
                ('code', models.CharField(help_text='Unique code of this locality (used in the FRBR URI)', max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='localities', to='indigo_api.Country')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Localities',
                'unique_together': {('country', 'code')},
            },
        ),
        migrations.CreateModel(
            name='TaxonomyVocabulary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority', models.CharField(help_text='Organisation managing this taxonomy', max_length=30, unique=True)),
                ('name', models.CharField(help_text='Short name for this taxonomy, under this authority', max_length=30, unique=True)),
                ('slug', models.SlugField(help_text='Code used in the API', unique=True)),
                ('title', models.CharField(help_text='Friendly, full title for the taxonomy', max_length=30, unique=True)),
            ],
            options={
                'verbose_name': 'Taxonomy',
                'verbose_name_plural': 'Taxonomies',
            },
        ),
        migrations.CreateModel(
            name='VocabularyTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_1', models.CharField(max_length=30)),
                ('level_2', models.CharField(blank=True, help_text='(optional)', max_length=30, null=True)),
                ('vocabulary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='indigo_api.TaxonomyVocabulary')),
            ],
            options={
                'unique_together': {('level_1', 'level_2', 'vocabulary')},
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frbr_uri', models.CharField(help_text='Used globally to identify this work', max_length=512, unique=True)),
                ('title', models.CharField(default='(untitled)', max_length=1024, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.Country')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='works', to='indigo_api.Locality')),
                ('stub', models.BooleanField(default=False, help_text='Stub works do not have content or points in time')),
                ('publication_name', models.CharField(blank=True, help_text='Original publication, eg. government gazette', max_length=255, null=True)),
                ('publication_number', models.CharField(blank=True, help_text="Publication's sequence number, eg. gazette number", max_length=255, null=True)),
                ('publication_date', models.DateField(blank=True, help_text='Date of publication', null=True)),
                ('assent_date', models.DateField(blank=True, help_text='Date signed by the president', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('repealed_by', models.ForeignKey(blank=True, help_text='Work that repealed this work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repealed_works', to='indigo_api.Work')),
                ('repealed_date', models.DateField(blank=True, help_text='Date of repeal of this work', null=True)),
                ('parent_work', models.ForeignKey(blank=True, help_text='Parent related work', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_works', to='indigo_api.Work')),
                ('taxonomies', models.ManyToManyField(related_name='works', to='indigo_api.VocabularyTopic')),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('commenced', models.BooleanField(default=False, help_text='Has this work commenced? (Date may be unknown)')),
            ],
            options={
                'permissions': (
                    ('review_work', 'Can review work details'),
                    ('bulk_add_work', 'Can import works in bulk'),
                    ('bulk_export_work', 'Can export works in bulk'),
                ),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frbr_uri', models.CharField(default='/', help_text='Used globally to identify this work', max_length=512)),
                ('title', models.CharField(max_length=1024)),
                ('draft', models.BooleanField(default=True, help_text="Drafts aren't available through the public API")),
                ('document_xml', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False, help_text='Has this document been deleted?')),
                ('language', models.ForeignKey(help_text='Language this document is in.', on_delete=django.db.models.deletion.PROTECT, to='indigo_api.Language')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('expression_date', models.DateField(help_text='Date of publication or latest amendment')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indigo_api.Work')),
            ],
            options={
                'permissions': (('publish_document', 'Can publish and edit non-draft documents'), ('view_published_document', 'Can view publish documents through the API'), ('view_document_xml', 'Can view the source XML of documents')),
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('anchor_id', models.CharField(max_length=512)),
                ('closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='indigo_api.Document')),
                ('in_reply_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='indigo_api.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='indigo_api.Document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('document', 'user', 'nonce')},
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=indigo_api.models.documents.attachment_filename)),
                ('size', models.IntegerField()),
                ('filename', models.CharField(db_index=True, help_text='Unique attachment filename', max_length=255)),
                ('mime_type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='indigo_api.Document')),
            ],
            options={
                'ordering': ('filename',),
            },
        ),
        migrations.CreateModel(
            name='Colophon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of this colophon', max_length=1024)),
                ('body', models.TextField()),
                ('country', models.ForeignKey(help_text='Which country does this colophon apply to?', on_delete=django.db.models.deletion.CASCADE, to='indigo_api.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Amendment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the amendment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amended_work', models.ForeignKey(help_text='Work amended.', on_delete=django.db.models.deletion.CASCADE, related_name='amendments', to='indigo_api.Work')),
                ('amending_work', models.ForeignKey(help_text='Work making the amendment.', on_delete=django.db.models.deletion.CASCADE, related_name='amendments_made', to='indigo_api.Work')),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the document subtype', max_length=1024)),
                ('abbreviation', models.CharField(help_text='Short abbreviation to use in FRBR URI. No punctuation.', max_length=20, unique=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Document subtype',
            },
        ),
        migrations.CreateModel(
            name='TaskLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('state', django_fsm.FSMField(default='open', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks',
                                              to='indigo_api.Country')),
                ('created_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               related_name='tasks', to='indigo_api.Document')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               related_name='tasks', to='indigo_api.Locality')),
                ('updated_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           related_name='tasks', to='indigo_api.Work')),
                ('labels', models.ManyToManyField(related_name='tasks', to='indigo_api.TaskLabel')),
                ('submitted_by_user',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='submitted_tasks', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                       related_name='reviewed_tasks', to=settings.AUTH_USER_MODEL)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('changes_requested',
                 models.BooleanField(default=False, help_text='Have changes been requested on this task?')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('closed_at',
                 models.DateTimeField(help_text='When the task was marked as done or cancelled.', null=True)),
            ],
            options={
                'permissions': (('submit_task', 'Can submit an open task for review'),
                                ('cancel_task', 'Can cancel a task that is open or has been submitted for review'),
                                ('reopen_task', 'Can reopen a task that is closed or cancelled'),
                                ('unsubmit_task', 'Can unsubmit a task that has been submitted for review'),
                                ('close_task', 'Can close a task that has been submitted for review'), (
                                'close_any_task',
                                'Can close any task that has been submitted for review, regardless of who submitted it')),
            },
        ),
        migrations.CreateModel(
            name='PlaceSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spreadsheet_url', models.URLField(blank=True, null=True)),
                ('as_at_date', models.DateField(blank=True, null=True)),
                ('country',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_settings',
                                   to='indigo_api.Country')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               related_name='place_settings', to='indigo_api.Locality')),
                ('styleguide_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArbitraryExpressionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Arbitrary date, e.g. consolidation date')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('updated_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('work', models.ForeignKey(help_text='Work', on_delete=django.db.models.deletion.CASCADE,
                                           related_name='arbitrary_expression_dates', to='indigo_api.Work')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('date', 'work')},
            },
        ),
        migrations.AlterModelOptions(
            name='documentactivity',
            options={'ordering': ('created_at',)},
        ),
        migrations.AddField(
            model_name='annotation',
            name='selectors',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.CreateModel(
            name='Commencement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, help_text='Date of the commencement, or null if it is unknown',
                                          null=True)),
                ('main', models.BooleanField(default=False,
                                             help_text='This commencement date is the date on which most of the provisions of the principal work come into force')),
                ('all_provisions',
                 models.BooleanField(default=False, help_text='All provisions of this work commenced on this date')),
                ('provisions', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commenced_work', models.ForeignKey(help_text='Principal work being commenced',
                                                     on_delete=django.db.models.deletion.CASCADE,
                                                     related_name='commencements', to='indigo_api.Work')),
                ('commencing_work',
                 models.ForeignKey(help_text='Work that provides the commencement date for the principal work',
                                   null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='commencements_made', to='indigo_api.Work')),
                ('created_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('updated_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('commenced_work', 'commencing_work', 'date')},
            },
        ),
        migrations.CreateModel(
            name='PublicationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=indigo_api.models.works.publication_document_filename)),
                ('size', models.IntegerField(null=True)),
                ('filename', models.CharField(max_length=255)),
                ('mime_type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='publication_document',
                                      to='indigo_api.Work')),
                ('trusted_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='annotation',
            name='task',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                       related_name='annotation', to='indigo_api.Task'),
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('tasks', models.ManyToManyField(related_name='workflows', to='indigo_api.Task')),
                ('country',
                 models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, related_name='workflows',
                                   to='indigo_api.Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('created_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               related_name='workflows', to='indigo_api.Locality')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('closed', models.BooleanField(default=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('priority', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'permissions': (('close_workflow', 'Can close a workflow'),),
                'ordering': ('-priority', 'pk'),
            },
        ),
    ]
